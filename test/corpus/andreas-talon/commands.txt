================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab last:                   app.tab_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab last <number_small>:
    app.tab_previous()
    repeat(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab next:                   app.tab_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab next <number_small>:
    app.tab_next()
    repeat(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab <number_small>:         user.tab_jump(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab minus <number_small>:   user.tab_jump_from_back(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab final:                  user.tab_final()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab back:                   user.tab_back()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab left:                   user.tab_move_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab right:                  user.tab_move_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab new:                    app.tab_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab duplicate:              user.tab_duplicate()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab (reopen | restore):     app.tab_reopen()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab close:                  app.tab_close()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab last close:
    app.tab_previous()
    sleep(50ms)
    app.tab_close()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab next close:
    app.tab_next()
    sleep(50ms)
    app.tab_close()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab <number_small> close:
    user.tab_jump(number_small)
    sleep(50ms)
    app.tab_close()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/tabs/tabs.talon
================================================================================


tab final close:
    user.tab_final()
    sleep(50ms)
    app.tab_close()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/abort/abort.talon
================================================================================


settings():
    user.abort_word = "cancel"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
Command andreas-talon/misc/abort/abort.talon
================================================================================


cancel$:   skip()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word)
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/screenshot/screenshot.talon
================================================================================


capture screen:                       user.screenshot()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/screenshot/screenshot.talon
================================================================================


capture screen <number_small>:        user.screenshot(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/screenshot/screenshot.talon
================================================================================


capture window:                       user.screenshot_window()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/screenshot/screenshot.talon
================================================================================


capture selection:                    user.screenshot_selection()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/screenshot/screenshot.talon
================================================================================


capture screen clip:                  user.screenshot_clipboard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/screenshot/screenshot.talon
================================================================================


capture screen <number_small> clip:   user.screenshot_clipboard(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/screenshot/screenshot.talon
================================================================================


capture window clip:                  user.screenshot_window_clipboard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/numbers/numbers.talon
================================================================================


<user.number_prefix>:   "{number_prefix}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/misc/search_engine.talon
================================================================================


search for <user.text>$:
    user.browser_focus_open(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/search_engine.talon
================================================================================


search for (this | dis):
    text = edit.selected_text()
    user.browser_focus_open(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


small up:                   user.scroll_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


small down:                 user.scroll_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


small left:                 user.scroll_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


small right:                user.scroll_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


half up:                    user.scroll_up_half_page()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


half down:                  user.scroll_down_half_page()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


full up | upper:            user.scroll_up_page()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (choice
        (seq
          (word)
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


full down | downer:         user.scroll_down_page()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (choice
        (seq
          (word)
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


flow up:                    user.scroll_up_continuous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


flow down:                  user.scroll_down_continuous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


flow speed show:            user.scroll_speed_show()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


flow speed <number_small>:
    user.scroll_speed(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


flow speed up:              user.scroll_speed_increase()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/scroll/scroll.talon
================================================================================


flow speed down:            user.scroll_speed_decrease()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/modes/dictation_mode.talon
================================================================================


<user.prose>:               "{prose}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/misc/modes/dictation_mode.talon
================================================================================


escape <user.words>$:       "{words}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/misc/modes/dictation_mode.talon
================================================================================


escape <user.words> over:   "{words}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/misc/modes/dictation_mode.talon
================================================================================


new line:
    edit.line_insert_down()
    user.dictation_format_reset()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/modes/dictation_mode.talon
================================================================================


new block:
    edit.line_insert_down()
    edit.line_insert_down()
    user.dictation_format_reset()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/modes/dictation_mode.talon
================================================================================


(command mode | over) [<phrase>]$:
    user.command_mode(phrase or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/misc/modes/command_mode.talon
================================================================================


dictate [<phrase>]$:      user.dictation_mode(phrase or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/misc/modes/command_mode.talon
================================================================================


swedish$:                 user.swedish_mode()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word)
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/modes/command_mode.talon
================================================================================


mixed mode [<phrase>]$:   user.mixed_mode(phrase or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/misc/modes/command_mode.talon
================================================================================


command mode:             skip()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/delimiters/delimiters.talon
================================================================================


{user.delimiter_pair}:   user.delimiters_pair_insert_by_name(delimiter_pair)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (list
        (identifier)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/delimiters/delimiters.talon
================================================================================


{user.delimiter_pair_wrap} wrap word:
    edit.select_word()
    user.delimiters_pair_wrap_selection(delimiter_pair_wrap)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/lorem_ipsum/lorem_ipsum.talon
================================================================================


lorem ipsum$:                  user.lorem_ipsum(30)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
Command andreas-talon/misc/lorem_ipsum/lorem_ipsum.talon
================================================================================


lorem ipsum <number_small>$:   user.lorem_ipsum(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/sleep/sleep.talon
================================================================================


settings():
    user.sleep_word = "drowse"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
Command andreas-talon/misc/sleep/sleep.talon
================================================================================


drowse [<phrase>]$:   user.talon_sleep()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/sleep/sleep.talon
================================================================================


^talon sleep$:        user.talon_sleep()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/sleep/sleep.talon
================================================================================


^talon status$:       user.talon_sleep_status()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/sleep/sleep_mode.talon
================================================================================


settings():
    speech.timeout = 0


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (integer)))))

================================================================================
Command andreas-talon/misc/sleep/sleep_mode.talon
================================================================================


^talon wake$:     user.talon_wake()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/sleep/sleep_mode.talon
================================================================================


^talon status$:   user.talon_sleep_status()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/sleep/sleep_mode.talon
================================================================================


<phrase>:         skip()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/operating_system/linux.talon
================================================================================


switcher:       key(super)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/linux.talon
================================================================================


show desktop:   key(super-ctrl-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/windows.talon
================================================================================


show desktop:               key(super-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/windows.talon
================================================================================


switcher:                   key(ctrl-alt-tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/windows.talon
================================================================================


open task manager:          key(ctrl-shift-escape)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/windows.talon
================================================================================


task view:                  key(super-tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/windows.talon
================================================================================


start menu:                 key(super)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/windows.talon
================================================================================


context menu:               key(super-x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/windows.talon
================================================================================


(start | stop) recording:   key(alt-f9)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/windows.talon
================================================================================


scout app [<user.text>]$:
    key(super-s)
    "apps: {text or ''}"
    "apps: {text or ''}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/misc/operating_system/windows.talon
================================================================================


pop app [<user.text>]$:
    key(super-s)
    "apps: {text or ''}"
    "apps: {text or ''}"
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/operating_system.talon
================================================================================


open settings:       app.preferences()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/operating_system/operating_system.talon
================================================================================


^system shutdown$:   user.system_shutdown()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/operating_system/operating_system.talon
================================================================================


^system restart$:    user.system_restart()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/operating_system/operating_system.talon
================================================================================


^system hibernate$:
    user.talon_sleep()
    user.system_hibernate()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/operating_system/operating_system.talon
================================================================================


^system lock$:       key(super-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/operating_system/operating_system.talon
================================================================================


open {user.launch_command}:
    user.exec(launch_command)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/operating_system/operating_system.talon
================================================================================


open path {user.path}:
    user.exec(path)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/operating_system/operating_system.talon
================================================================================


open browser {user.webpage}:
    user.browser_focus_open(webpage)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/navigation/navigation.talon
================================================================================


go back:      user.go_back()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/navigation/navigation.talon
================================================================================


go forward:   user.go_forward()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


page up:                  edit.page_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


page down:                edit.page_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


go top:
    user.stop_app()
    edit.file_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


go bottom:
    user.stop_app()
    edit.file_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


head:                     edit.line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


tail:                     edit.line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


middle:                   user.line_middle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


up [<number_small>]:      user.up(number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


down [<number_small>]:    user.down(number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


left [<number_small>]:    user.left(number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


right [<number_small>]:   user.right(number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


before:                   edit.word_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


after:                    edit.word_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


slap:                     edit.line_insert_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


slapper:                  user.line_insert_down_twice()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


indent:                   edit.indent_more()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


dedent:                   edit.indent_less()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


take all:                 edit.select_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


take none:                edit.select_none()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


extend top:               edit.extend_file_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


extend bottom:            edit.extend_file_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


extend head:              edit.extend_line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


extend tail:              edit.extend_line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


extend up:                edit.extend_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


extend down:              edit.extend_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


extend left:              edit.extend_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


extend right:             edit.extend_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


extend before:            edit.extend_word_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


extend after:             edit.extend_word_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


undo:                     edit.undo()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


redo:                     edit.redo()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


deli:                     edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


drill:                    user.delete_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


cut (this | dis):         edit.cut()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


copy (this | dis):        edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


paste it:                 edit.paste()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


paste special:            edit.paste_match_style()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


take word:                edit.select_word()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


cut word:                 user.cut_word()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


copy word:                user.copy_word()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


paste to word:            user.paste_word()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


(chuck | clear) word:     edit.delete_word()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


remove:                   user.delete_word_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


wipe:                     user.delete_word_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


drag up:                  edit.line_swap_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


drag down:                edit.line_swap_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


disk:                     edit.save()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


make to do:               "TODO "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


bullet:                   "* "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


checkbox:                 "* [ ] "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


spam:                     ", "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


stacker:                  ": "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


period:                   ". "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


dasher:                   " - "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


arrow:                    user.insert_arrow()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


take line:                edit.select_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


cut line:                 user.cut_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


copy line:                user.copy_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


paste to line:            user.paste_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


chuck line:               edit.delete_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor.talon
================================================================================


clear line:               user.clear_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/extensions/extensions.talon
================================================================================


<user.extension>:   "{extension}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/misc/extensions/extensions.talon
================================================================================


<user.domain>:      "{domain}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/misc/mouse/zoom_mouse.talon
================================================================================


{user.mouse_click}:   user.zoom_mouse_click(mouse_click)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (list
        (identifier)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse {user.mouse_click}:   user.mouse_click(mouse_click)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse drag:                 user.mouse_drag()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


scroll up [<number_small>]: user.mouse_scroll("up", number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


scroll down [<number_small>]: user.mouse_scroll("down", number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


climb:                      user.mouse_scrolling("up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


drop:                       user.mouse_scrolling("down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse speed show:           user.mouse_scroll_speed_notify()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse speed <number_small>: user.mouse_scroll_speed_set(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse speed up:             user.mouse_scroll_speed_increase()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse speed down:           user.mouse_scroll_speed_decrease()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse gaze:                 user.mouse_gaze_scroll()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


^mouse calibrate$:          tracking.calibrate()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


^mouse control$:            user.mouse_toggle_control_mouse()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


^mouse zoom$:               user.mouse_toggle_zoom_mouse()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse center:               user.mouse_center_window()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse center click:
    user.mouse_center_window()
    mouse_click(0)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


^cursor show$:              user.mouse_show_cursor()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


# ^cursor hide$:                  user.mouse_hide_cursor()


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse print position:
    print("{mouse_x()}, {mouse_y()}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/mouse/mouse.talon
================================================================================


mouse copy position:
    clip.set_text("{mouse_x()}, {mouse_y()}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


pre line:                edit.line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


post line:               edit.line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


clone line:              edit.line_clone()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


drink (line | this):     edit.line_insert_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


pour (line | this):      edit.line_insert_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


take head:               user.select_line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


take tail:               user.select_line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


cut head:                user.cut_line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


cut tail:                user.cut_line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


copy head:               user.copy_line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


copy tail:               user.copy_line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


(chuck | clear) head:    user.delete_line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


(chuck | clear) tail:    user.delete_line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


pre block:               edit.paragraph_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


post block:              edit.paragraph_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


take block:              edit.select_paragraph()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


cut block:               user.cut_paragraph()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


copy block:              user.copy_paragraph()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


paste to block:          user.paste_paragraph()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


(chuck | clear) block:   edit.delete_paragraph()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


pre file:                edit.file_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


post file:               edit.file_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


take file:               edit.select_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


cut file:                user.cut_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


copy file:               user.copy_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


paste to file:           user.paste_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


(chuck | clear) file:    user.delete_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


# Navigate to specified text/symbol: go right paren


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


{user.navigation_action} {user.navigation_direction} to <user.any_alphanumeric_key>:
    user.navigation(navigation_action, navigation_direction, any_alphanumeric_key)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (list
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


<user.formatters> format this:
    user.reformat_selection(formatters)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


<user.formatters> format line:
    edit.select_line()
    user.reformat_selection(formatters)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


phones this:             user.homophones_cycle_selected()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


{user.delimiter_pair_wrap} wrap this:
    user.delimiters_pair_wrap_selection(delimiter_pair_wrap)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/editor_not_vscode.talon
================================================================================


{user.delimiter_pair_wrap} wrap line:
    edit.select_line()
    user.delimiters_pair_wrap_selection(delimiter_pair_wrap)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/foot_switch/foot_switch.talon
================================================================================


key(keypad_0:down):   skip()


--------------------------------------------------------------------------------

(source_file
  (key_binding
    (key_action
      (implicit_string))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/foot_switch/foot_switch.talon
================================================================================


key(keypad_0:up):     user.foot_switch_key(0)


--------------------------------------------------------------------------------

(source_file
  (key_binding
    (key_action
      (implicit_string))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
Command andreas-talon/misc/foot_switch/foot_switch.talon
================================================================================


key(keypad_1:down):   skip()


--------------------------------------------------------------------------------

(source_file
  (key_binding
    (key_action
      (implicit_string))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/foot_switch/foot_switch.talon
================================================================================


key(keypad_1:up):     user.foot_switch_key(1)


--------------------------------------------------------------------------------

(source_file
  (key_binding
    (key_action
      (implicit_string))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
Command andreas-talon/misc/foot_switch/foot_switch.talon
================================================================================


key(keypad_2:down):   skip()


--------------------------------------------------------------------------------

(source_file
  (key_binding
    (key_action
      (implicit_string))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/foot_switch/foot_switch.talon
================================================================================


key(keypad_2:up):     user.foot_switch_key(2)


--------------------------------------------------------------------------------

(source_file
  (key_binding
    (key_action
      (implicit_string))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
Command andreas-talon/misc/foot_switch/foot_switch.talon
================================================================================


key(keypad_3:down):   skip()


--------------------------------------------------------------------------------

(source_file
  (key_binding
    (key_action
      (implicit_string))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/foot_switch/foot_switch.talon
================================================================================


key(keypad_3:up):     user.foot_switch_key(3)


--------------------------------------------------------------------------------

(source_file
  (key_binding
    (key_action
      (implicit_string))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
Command andreas-talon/misc/foot_switch/foot_switch.talon
================================================================================


scroll reverse:       user.foot_switch_scroll_reverse()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/audio_video.talon
================================================================================


mute:   user.mute_microphone()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/command_history/command_history.talon
================================================================================


command history:                  user.command_history_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/command_history/command_history.talon
================================================================================


command history clear:            user.command_history_clear()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/command_history/command_history.talon
================================================================================


command history less:             user.command_history_less()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/command_history/command_history.talon
================================================================================


command history more:             user.command_history_more()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/command_history/command_history.talon
================================================================================


command history <number_small>:   user.command_history_set_size(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/command_history/command_history.talon
================================================================================


subtitles (show | hide):          user.toggle_subtitles()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/zoom/zoom.talon
================================================================================


^zoom in$:              edit.zoom_in()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/zoom/zoom.talon
================================================================================


^zoom out$:             edit.zoom_out()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/zoom/zoom.talon
================================================================================


^zoom reset$:           edit.zoom_reset()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/clipboard_manager/clipboard_manager.talon
================================================================================


clippy:   user.clipboard_manager_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/clipboard_manager/clipboard_manager.talon
================================================================================


paste <number_small> [and <number_small>]*:
    user.clipboard_manager_paste(number_small_list)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (repeat
          (optional
            (seq
              (word)
              (capture
                (identifier)))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/clipboard_manager/clipboard_manager.talon
================================================================================


paste special <number_small> [and <number_small>]*:
    user.clipboard_manager_paste(number_small_list, 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (repeat
          (optional
            (seq
              (word)
              (capture
                (identifier)))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (integer)))))))

================================================================================
Command andreas-talon/misc/clipboard_manager/clipboard_manager_open.talon
================================================================================


clippy stay:
    user.clipboard_manager_toggle_sticky()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/clipboard_manager/clipboard_manager_open.talon
================================================================================


clippy update:
    user.clipboard_manager_update()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/clipboard_manager/clipboard_manager_open.talon
================================================================================


clippy clear:
    user.clipboard_manager_remove()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/clipboard_manager/clipboard_manager_open.talon
================================================================================


clippy chuck <number_small> [and <number_small>]*:
    user.clipboard_manager_remove(number_small_list)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (repeat
          (optional
            (seq
              (word)
              (capture
                (identifier)))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/clipboard_manager/clipboard_manager_open.talon
================================================================================


clippy split <number_small> [and <number_small>]*:
    user.clipboard_manager_split(number_small_list)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (repeat
          (optional
            (seq
              (word)
              (capture
                (identifier)))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/clipboard_manager/clipboard_manager_open.talon
================================================================================


clippy copy <number_small> [and <number_small>]*:
    user.clipboard_manager_copy(number_small_list)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (repeat
          (optional
            (seq
              (word)
              (capture
                (identifier)))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


focus {user.running_application}:
    user.focus_name(running_application)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


(focus {user.running_application} <phrase>)+$:
    user.focus_names(running_application_list, phrase_list)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (repeat1
        (parenthesized_rule
          (seq
            (word)
            (list
              (identifier))
            (capture
              (identifier)))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


swap {user.running_application}:
    user.swap_window_position(running_application)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


window new:                 app.window_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


window close:               app.window_close()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


window hide:                app.window_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


window last:                app.window_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


window next:                app.window_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


window back:                key("alt-tab")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


snap <user.window_snap_position>: user.snap_window(window_snap_position)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


snap next screen:           user.move_window_next_screen()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


snap last screen:           user.move_window_previous_screen()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


snap screen <number_small>: user.move_window_to_screen(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


move center:                user.move_window_to_screen_center()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


move {user.resize_side} {user.resize_direction} [{user.resize_size}]:
    user.resize_window(resize_side, resize_direction, resize_size or "medium")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))
        (list
          (identifier))
        (optional
          (list
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string
                (string_content)))))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


(snap | move) revert:       user.move_window_revert()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_management.talon
================================================================================


screen numbers:             user.screens_show_numbering()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_focus_open.talon
================================================================================


^focus hide$:             user.focus_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/window_management/window_focus_open.talon
================================================================================


^focus <number_small>$:   user.focus_index(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/global.talon
================================================================================


then:   skip()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/global.talon
================================================================================


stop:   user.stop_app()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/global.talon
================================================================================


pick <number_small>:
    user.pick_item(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/global.talon
================================================================================


pick to:
    user.pick_item(1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
Command andreas-talon/misc/global.talon
================================================================================


pick <user.word>:
    "{word}"
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/global.talon
================================================================================


pick <user.letters>:
    "{letters}"
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print context:
    name = app.name()
    executable = app.executable()
    title = win.title()
    print("Name: {name}")
    print("Name: {name}")
    print("Executable: {executable}")
    print("Executable: {executable}")
    print("Title: {title}")
    print("Title: {title}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print title:                 print(win.title())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print tags:                  print(" \n{user.talon_get_tags()}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print modes:                 print(" \n{user.talon_get_modes()}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print captures:              print(" \n{user.talon_get_captures()}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print lists:                 print(" \n{user.talon_get_lists()}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print actions:               print(" \n{user.talon_get_actions()}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print actions long:          print(" \n{user.talon_get_actions_long()}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print <user.text> actions:   print(" \n{user.talon_get_actions_search(text)}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print list problems:         user.talon_print_list_problems()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon print core:                  print(" \n{user.talon_get_core()}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy title:                  clip.set_text(win.title())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy tags:                   clip.set_text(user.talon_get_tags())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy modes:                  clip.set_text(user.talon_get_modes())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy captures:               clip.set_text(user.talon_get_captures())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy actions:                clip.set_text(user.talon_get_actions())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy actions long:           clip.set_text(user.talon_get_actions_long())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy <user.text> actions:    clip.set_text(user.talon_get_actions_search(text))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy core:                   clip.set_text(user.talon_get_core())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy python context:         user.talon_add_context_clipboard_python()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy context:                user.talon_add_context_clipboard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon copy commands:               user.help_copy_all_commands()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon open log:                    menu.open_log()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon open repl:                   menu.open_repl()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon open home:                   menu.open_talon_home()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon check updates:               menu.check_for_updates()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/talon_helpers/talon_helpers.talon
================================================================================


talon restart:                     user.talon_restart()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


{user.letter}:          key(letter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (list
        (identifier)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


# Symbol keys: !, %, _


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


{user.key_symbol}:      key(key_symbol)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (list
        (identifier)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


{user.key_number}:      key(key_number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (list
        (identifier)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


(enter | okay):         key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


tab:                    key(tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


new line [symbol]:      "\\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (string
          (string_escape_sequence)
          (string_content))))))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


tab symbol:             "\\t"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_escape_sequence)
          (string_content))))))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


# Modifier(s) + key: "control alpha" or "control win left"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


<user.key_modifiers> <user.key_unmodified>:
    key("{key_modifiers}-{key_unmodified}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


press <user.key_any>:   key(key_any)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/keys/keys.talon
================================================================================


push {user.key_symbol}:
    edit.line_end()
    "{key_symbol}"
    edit.line_insert_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout for clip:               edit.find(clip.text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout [<user.text>]$:         edit.find(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout all for clip:           user.find_everywhere(clip.text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout all [<user.text>]$:     user.find_everywhere(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


replace [<user.text>]$:       user.find_replace(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


replace all [<user.text>]$:   user.find_replace_everywhere(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout case:                   user.find_toggle_match_by_case()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout word:                   user.find_toggle_match_by_word()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout expression:             user.find_toggle_match_by_regex()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


replace case:                 user.find_replace_toggle_preserve_case()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout last:                   edit.find_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout next:                   edit.find_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout hide:
    edit.find("")
    key(escape)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


replace confirm:              user.find_replace_confirm()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


replace confirm all:          user.find_replace_confirm_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout file for clip:          user.find_file(clip.text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


scout file [<user.text>] [<user.extension>]$:
    text = text or ""
    extension = extension or ""
    user.find_file(text + extension)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (binary_operator
          (variable
            (identifier))
          (operator)
          (string)))
      (assignment
        (identifier)
        (binary_operator
          (variable
            (identifier))
          (operator)
          (string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (variable
                (identifier)))))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


pop <user.text>$:
    edit.find(text)
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/find/find.talon
================================================================================


pop file <user.text> [<user.extension>]$:
    extension = extension or ""
    user.find_file(text + extension)
    sleep(300ms)
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (binary_operator
          (variable
            (identifier))
          (operator)
          (string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (variable
                (identifier))))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/emoticons/emoticons.talon
================================================================================


face {user.emoticon}:   " {emoticon}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/misc/repeater/repeater.talon
================================================================================


<user.repeater_phrase>:                 core.repeat_command(repeater_phrase)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/repeater/repeater.talon
================================================================================


repeat <user.repeater_phrase>:          core.repeat_command(repeater_phrase + 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/repeater/repeater.talon
================================================================================


phrase <user.repeater_phrase>:          core.repeat_partial_phrase(repeater_phrase)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/repeater/repeater.talon
================================================================================


repeat phrase <user.repeater_phrase>:   core.repeat_partial_phrase(repeater_phrase + 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/help/help_commands_open.talon
================================================================================


help hide:             user.help_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help_commands_open.talon
================================================================================


help <number_small>:   user.help_select_index(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
Command andreas-talon/misc/help/help_commands_open.talon
================================================================================


help last:             user.help_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help_commands_open.talon
================================================================================


help next:             user.help_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help_commands_open.talon
================================================================================


help return:           user.help_return()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help_scope_open.talon
================================================================================


^scope hide$:   user.help_scope_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help_alphabet_open.talon
================================================================================


^alphabet hide$:   user.help_alphabet_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help_search_open.talon
================================================================================


^search hide$:   user.help_search_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help_formatters_open.talon
================================================================================


^(format|formatters) hide$:   user.formatters_help_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help.talon
================================================================================


^help active$:                         user.help_active_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help.talon
================================================================================


^help search <user.text>$:             user.help_search(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/help/help.talon
================================================================================


^help context {user.help_contexts}$:   user.help_context(help_contexts)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/help/help.talon
================================================================================


^help <user.text> commands$:           user.help_search_commands(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier))
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/help/help.talon
================================================================================


^help <user.text> actions$:            user.help_search_actions(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier))
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/help/help.talon
================================================================================


^help alphabet$:                       user.help_alphabet_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help.talon
================================================================================


^help scope$:                          user.help_scope_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help.talon
================================================================================


^help (format|formatters)$:            user.formatters_help_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/help/help.talon
================================================================================


^help focus$:                          user.focus_help_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/language_mode/language_mode.talon
================================================================================


^force see sharp$:        user.code_set_language_mode("csharp")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/language_mode/language_mode.talon
================================================================================


^force see plus plus$:    user.code_set_language_mode("cplusplus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/language_mode/language_mode.talon
================================================================================


^force java$:             user.code_set_language_mode("java")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/language_mode/language_mode.talon
================================================================================


^force java script$:      user.code_set_language_mode("javascript")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/language_mode/language_mode.talon
================================================================================


^force type script$:      user.code_set_language_mode("typescript")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/language_mode/language_mode.talon
================================================================================


^force markdown$:         user.code_set_language_mode("markdown")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/language_mode/language_mode.talon
================================================================================


^force python$:           user.code_set_language_mode("python")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/language_mode/language_mode.talon
================================================================================


^force talon [script]$:   user.code_set_language_mode("talon")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (optional
          (word)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/language_mode/language_mode.talon
================================================================================


^force html$:             user.code_set_language_mode("html")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/language_mode/language_mode.talon
================================================================================


^clear language mode$:
    user.code_clear_language_mode()
    user.notify("Cleared language modes")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/misc/media/media.talon
================================================================================


volume up:              user.volume_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/media/media.talon
================================================================================


volume down:            user.volume_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/misc/media/media.talon
================================================================================


volume mute:            key(mute)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/media/media.talon
================================================================================


media next:             key(next)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/media/media.talon
================================================================================


media last:             key(prev)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/media/media.talon
================================================================================


media (play | pause):   key(play_pause)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/media/media.talon
================================================================================


media stop:             key(stop)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/misc/media/media.talon
================================================================================


playback {user.playback_device}:
    user.notify("Playback device: {playback_device}")
    user.notify("Playback device: {playback_device}")
    user.change_sound_device(playback_device)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/media/media.talon
================================================================================


microphone {user.microhpone_device}:
    user.notify("Microphone device: {microhpone_device}")
    user.notify("Microphone device: {microhpone_device}")
    user.change_sound_device(microhpone_device)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/misc/media/media.talon
================================================================================


use {user.playback_microphone_pair}:
    user.change_sound_device_pair(playback_microphone_pair)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/settings/settings.talon
================================================================================


settings():
    # Speech timeout
    speech.timeout = 0.400
    # Record speech
    speech.record_all = 0


--------------------------------------------------------------------------------

(source_file
  (settings
    (comment)
    (block
      (assignment
        (identifier)
        (float))
      (comment)
      (assignment
        (identifier)
        (integer)))))

================================================================================
Command andreas-talon/settings/settings.talon
================================================================================




--------------------------------------------------------------------------------

(source_file)

================================================================================
Command andreas-talon/settings/settings_work_laptop.talon
================================================================================


settings():
    imgui.scale = 1.3


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (float)))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


tag(): user.operators


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


tag(): user.comments


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


make print:
    user.insert_snippet("print($0)")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


require win:     "os: windows\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


require mac:     "os: mac\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


require linux:   "os: linux\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


require title:   "title: "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


require app:     "app: "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


require tag:     "tag: "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


make tag:        "tag(): "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


make true:       "1"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


make false:      "0"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/langs/talon/talon.talon
================================================================================


make key:
    user.insert_snippet("key($0)")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/langs/python/python.talon
================================================================================


tag(): user.generic_language


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/python/python.talon
================================================================================


tag(): user.operators


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/python/python.talon
================================================================================


tag(): user.comments


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/python/python.talon
================================================================================


(op | is) in:   " in "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/langs/java/java.talon
================================================================================


tag(): user.generic_language


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/java/java.talon
================================================================================


tag(): user.c_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/java/java.talon
================================================================================


tag(): user.operators


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/java/java.talon
================================================================================


tag(): user.comments


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/java/java.talon
================================================================================


new {user.code_data_type}:
    user.insert_snippet("new {code_data_type}($0);")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/langs/java/java.talon
================================================================================


new <user.text>:
    format = user.code_get_class_format()
    name = user.format_text(text, format)
    user.insert_snippet("new {name}($0);")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


tag(): user.comments


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


block tag {user.code_tag}:
    user.insert_snippet("<{code_tag}>\n\t$0\n</{code_tag}>")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_escape_sequence)
              (string_escape_sequence)
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


block tag <user.text>:
    user.insert_snippet("<{text}>\n\t$0\n</{text}>")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_escape_sequence)
              (string_escape_sequence)
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


tag {user.code_tag}:
    "<{code_tag}>"
    user.code_push_tag_name(code_tag)


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (identifier))
  (command
    (rule
      (list
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


tag <user.text>:
    "<{text}>"
    user.code_push_tag_name(text)


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (identifier))
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


closed tag {user.code_tag}:       "<{code_tag}/>"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


close tag <user.text>:   "<{text}/>"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


close tag:                        user.code_close_tag()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


attr <user.text>:
    user.insert_snippet(" {text}=$0")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


make doctype:                     "<!DOCTYPE html>\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/langs/html/html.talon
================================================================================


make blank:                       "&nbsp;"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (assign | equals):          user.op_assign()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (minus | sub):              user.op_sub()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (minus | sub) assign:       user.op_sub_assign()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (plus | add):               user.op_add()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (plus | add) assign:        user.op_add_assign()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (multiply | mult):          user.op_mult()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (multiply | mult) assign:   user.op_mult_assign()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (divide | div):             user.op_div()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (divide | div) assign:      user.op_div_assign()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (modulo | mod):             user.op_mod()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (modulo | mod) assign:      user.op_mod_assign()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op (power | pow):              user.op_exp()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


is equal:                      user.op_equal()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


is not equal:                  user.op_not_equal()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


is less:                       user.op_less()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


is greater:                    user.op_greater()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


is less [or] equal:            user.op_less_or_eq()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


is greater [or] equal:         user.op_greater_or_eq()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


is not:                        user.op_not()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


is null:                       user.op_equal_null()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


is not null:                   user.op_not_equal_null()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op and:                        user.op_and()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/operators.talon
================================================================================


op or:                         user.op_or()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/comments.talon
================================================================================


comment:              code.toggle_comment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/comments.talon
================================================================================


make comment:         user.comments_insert()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/comments.talon
================================================================================


make comment <user.text>$:
    text = user.format_text(text, "CAPITALIZE_FIRST_WORD")
    user.comments_insert(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/langs/tags/comments.talon
================================================================================


make block comment:   user.comments_insert_block()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/comments.talon
================================================================================


make block comment <user.text>$:
    text = user.format_text(text, "CAPITALIZE_FIRST_WORD")
    user.comments_insert_block(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/langs/tags/comments.talon
================================================================================


make dock string:     user.comments_insert_docstring()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make if:                      user.code_if()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make elif:                    user.code_elif()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make else:                    user.code_else()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make switch:                  user.code_switch()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make case:                    user.code_case()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make default:                 user.code_default()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make try:                     user.code_try()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make catch:                   user.code_catch()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make try catch:               user.code_try_catch()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make for [loop]:              user.code_for()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make while [loop]:            user.code_while()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make do while [loop]:         user.code_do_while()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make for each [loop]:         user.code_foreach()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make true:                    user.code_true()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make false:                   user.code_false()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make break:                   user.code_break()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make continue:                user.code_continue()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make return:                  user.code_return()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make link:                    user.code_link()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make print:                   user.code_print("")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make print <user.text>$:
    text = user.format_text(text, "CAPITALIZE_FIRST_WORD")
    user.code_print(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


format string:                user.code_format_string()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make {user.code_insert}:      "{code_insert}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


make {user.code_snippet}:     user.insert_snippet("{code_snippet}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


{user.code_class_modifier}* class <user.text>$:
    user.code_class_wrapper(text, code_class_modifier_list or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (repeat
          (list
            (identifier)))
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


{user.code_function_modifier}* function <user.text>$:
    user.code_function_wrapper(text, code_function_modifier_list or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (repeat
          (list
            (identifier)))
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


{user.code_function_modifier}* method <user.text>$:
    user.code_method_wrapper(text, code_function_modifier_list or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (repeat
          (list
            (identifier)))
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


function main:                user.code_function_main()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


{user.code_function_modifier}* function constructor:
    user.code_constructor_wrapper(code_function_modifier_list or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (repeat
          (list
            (identifier)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


var {user.code_variable_modifier}* [{user.code_data_type}] <user.text>:
    user.code_variable_wrapper(text, code_variable_modifier_list or "", 0, code_data_type or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (repeat
          (list
            (identifier)))
        (optional
          (list
            (identifier)))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))
            (integer)
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


var {user.code_variable_modifier}* [{user.code_data_type}] <user.text> equals:
    user.code_variable_wrapper(text, code_variable_modifier_list or "", 1, code_data_type or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (repeat
          (list
            (identifier)))
        (optional
          (list
            (identifier)))
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))
            (integer)
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


type {user.code_data_type}:   "{code_data_type}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


is type {user.code_data_type}:
    user.code_insert_type_annotation(code_data_type)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


is type <user.text>:
    format = user.code_get_class_format()
    data_type = user.format_text(text, format)
    user.code_insert_type_annotation(data_type)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


returns type {user.code_data_type}:
    user.code_insert_return_type(code_data_type)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/langs/tags/generic_language.talon
================================================================================


call {user.code_function}:    user.code_call_function(code_function)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/langs/json/json.talon
================================================================================


tag(): user.comments


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/json/json.talon
================================================================================


make true:    "true"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/langs/json/json.talon
================================================================================


make false:   "false"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/langs/javascript/typescript.talon
================================================================================


tag(): user.javascript


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/javascript/javascript.talon
================================================================================


tag(): user.generic_language


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/javascript/javascript.talon
================================================================================


tag(): user.c_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/javascript/javascript.talon
================================================================================


tag(): user.operators


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/javascript/javascript.talon
================================================================================


tag(): user.comments


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/javascript/javascript.talon
================================================================================


convert to arrow:   user.arrowify_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/langs/javascript/javascript.talon
================================================================================


make arrow function <user.text>:
    format = user.code_get_function_format()
    name = user.format_text(text, format)
    user.insert_snippet("const {name} = ($1) => {{\n$0\n}}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_escape_sequence)
              (string_content))))))))

================================================================================
Command andreas-talon/langs/javascript/typescriptreact.talon
================================================================================


tag(): user.typescript


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/javascript/typescriptreact.talon
================================================================================


tag(): user.javascriptreact


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/javascript/javascriptreact.talon
================================================================================


tag(): user.javascript


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/langs/javascript/javascriptreact.talon
================================================================================


tag(): user.html


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


# Formatted code phrase: "camel hello there" -> helloThere


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


<user.formatters_code> <user.text_code> [over]:
    user.insert_formatted(text_code, formatters_code)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


strict <user.formatters_code> <user.text_code>$:
    user.insert_formatted(text_code, formatters_code)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


# Formatted prose phrase: "sentence hello there" -> Hello there


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


{user.formatter_prose} <user.prose>$:
    user.insert_formatted(prose, formatter_prose)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


{user.formatter_prose} <user.prose> over:
    user.insert_formatted(prose, formatter_prose)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


escape words <user.words>$: "{words}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


escape words <user.words> over: "{words}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


{user.formatter_word} <user.word>:
    user.insert_formatted(word, formatter_word)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


{user.formatter_word} <user.ordinals_small> <user.word>:
    homophone = user.homophones_get_by_number(word, ordinals_small)
    user.insert_formatted(homophone, formatter_word)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


# Abbreviated word: breif application -> app


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


<user.abbreviation>:        "{abbreviation}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


swe {user.swedish_phrase}:  "{swedish_phrase}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


{user.formatter_word} swe {user.swedish_phrase}:
    user.insert_formatted(swedish_phrase, formatter_word)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


ship <user.letters> [over]:
    user.insert_formatted(letters, "ALL_CAPS")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/text/text.talon
================================================================================


<user.formatters> format word:
    edit.select_word()
    user.reformat_selection(formatters)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/text/homophones/homophones.talon
================================================================================


phones pick this:
    user.homophones_show_selected()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/text/homophones/homophones.talon
================================================================================


phones pick word:
    edit.select_word()
    user.homophones_show_selected()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/text/homophones/homophones.talon
================================================================================


phones word:
    edit.select_word()
    user.homophones_cycle_selected()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/text/homophones/homophones_open.talon
================================================================================


phones hide:             user.homophones_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/text/homophones/homophones_open.talon
================================================================================


choose <number_small>:   user.homophones_select(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/repl.talon
================================================================================


events tail:    "events.tail('/^((?!win|browser).)*$/')\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


tag(): user.av


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


tag(): user.navigation


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


deafen:             key(ctrl-shift-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


server last:        key(ctrl-alt-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


server next:        key(ctrl-alt-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


channel last:       key(alt-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


channel next:       key(alt-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


edit last:          key(up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


focus text:         key(tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


go oldest unread:   key(shift-pageup)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


go audio channel:   key(alt-left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


go text channel:    key(alt-right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/discord/discord.talon
================================================================================


go call:            key(ctrl-shift-alt-v)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/mattermost.talon
================================================================================


edit last:             key(up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/mattermost.talon
================================================================================


jump to:               key(ctrl-k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/mattermost.talon
================================================================================


direct messages:       key(ctrl-shift-k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/mattermost.talon
================================================================================


channel last:          key(alt-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/mattermost.talon
================================================================================


channel next:          key(alt-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/mattermost.talon
================================================================================


channel unread last:   key(alt-shift-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/mattermost.talon
================================================================================


channel unread next:   key(alt-shift-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/mattermost.talon
================================================================================


next unread:           key(alt-shift-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/mattermost.talon
================================================================================


make meet:
    "/meet"
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/mattermost.talon
================================================================================


make meet external:
    "/meet-external"
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


speed down:                 key(shift-,)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


speed up:                   key(shift-.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


closed captions:            key(c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


mini player:                key(i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


theater mode:               key(t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


play | pause:               key(k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (choice
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


mute:                       key(m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


video last:                 key(shift-p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


video next:                 key(shift-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


seek left:                  key(j)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/youtube.talon
================================================================================


seek right:                 key(l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


sidebar (show | hide):       key(ctrl-shift-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


panel (show | hide):         key(ctrl-.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


go unreads:                  key(ctrl-shift-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


go threads:                  user.slack_open_search_result("Threads")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


go [direct] messages:        key(ctrl-shift-k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


go (mentions | reactions):   key(ctrl-shift-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


go drafts:                   user.slack_open_search_result("Drafts")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


scout channel [<user.text>]:
    key(ctrl-k)
    "{text or ''}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


pop channel <user.text>:
    user.slack_open_search_result(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


please [<user.text>]$:
    key(ctrl-k)
    sleep(100ms)
    edit.delete()
    sleep(100ms)
    "{text or ''}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


channel last:                key(alt-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


channel next:                key(alt-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


channel unread last:         key(alt-shift-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


channel unread next:         key(alt-shift-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


next unread:                 key(alt-shift-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


edit last:                   key(ctrl-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


edit:                        key(e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


format code:                 key(ctrl-shift-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


format [code] block:         key(ctrl-alt-shift-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/web/slack.talon
================================================================================


format quote:                key(ctrl-shift-9)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/maven/maven.talon
================================================================================


maven version:            "mvn -v\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/maven/maven.talon
================================================================================


maven install:            "mvn install\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/maven/maven.talon
================================================================================


maven package:            "mvn package\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/maven/maven.talon
================================================================================


maven clean install:      "mvn clean install\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/maven/maven.talon
================================================================================


maven clean package:      "mvn clean package\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/maven/maven.talon
================================================================================


maven install parallel:   "mvn -T 1C install\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/maven/maven.talon
================================================================================


maven deploy:             "mvn clean install -P deploy\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


tag(): user.bash


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


split auto:     key(ctrl-alt-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


split right:    key(ctrl-alt-right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


split down:     key(ctrl-alt-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


focus up:       key(alt-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


focus down:     key(alt-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


focus left:     key(alt-left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


focus right:    key(alt-right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


resize up:      key(alt-shift-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


resize down:    key(alt-shift-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


resize left:    key(alt-shift-left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


resize right:   key(alt-shift-right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


please:         key(ctrl-shift-p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/windows_terminal.talon
================================================================================


please <user.text>$:
    key(ctrl-shift-p)
    "{text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


tag(): terminal


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


cd:                            "cd "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


cd <user.text>$:               "cd {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


go home:                       "cd ~\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


list:                          "ls\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


list all:                      "ls -a\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


list long:                     "ls -lah\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


list long pipe:                "ls -lah | "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


history:                       "history "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


history tail:                  "history | tail\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


history tail <number_small>:   "history | tail -{number_small}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


history grep:                  "history | grep "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


run history <number>:          "!{number}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


run last:                      "!!\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


run last <number>:             "!-{number}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


head <number_small>:           "head -{number_small}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


tail <number_small>:           "tail -{number_small}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


# watch talon log:               "tail -f {user.talon_home()}/talon.log\n"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


watch talon log:               user.tail_talon_log()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


print dir:                     "pwd\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


copy dir:                      "pwd | clipboard\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


tar create:                    "tar -czvf "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


tar extractf:                  "tar -xzvf "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


echo:                          "echo "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


echo <user.text>$:             "echo {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


grep:                          "grep "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


make dir:                      "mkdir "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


move:                          "mv "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


# remove:                        "rm "


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


copy:                          "cp "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


less:                          "less "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


sudo:                          "sudo "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


apt install:                   "apt install "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


apt update:                    "apt update\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


word count:                    "wc "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


change mode:                   "chmod "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


change owner:                  "chown "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


exargs:                        "xargs "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


exec:                          "exec "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


cat:                           "cat "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


diff:                          "diff "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


unique:                        "uniq "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


clipboard:                     "clipboard"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


translate:                     "tr "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


vim:                           "vim "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


curl:                          "curl "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


yarn:                          "yarn "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


dev null:                      "/dev/null"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


print exit code:               "echo $?\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


pipe:                          " | "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


op and:                        " && "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


op or:                         " || "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


terminate:                     key(ctrl-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


clear:                         key(ctrl-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


revert:                        key(alt-r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


# head:                          "head "


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


# tail:                          "tail "


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


# find:                          "find "


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


# sed:                           "sed "


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


# set:                           "set "


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================


# pushd https://linuxhint.com/bash_pushd_command/


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Command andreas-talon/apps/terminal/bash.talon
================================================================================




--------------------------------------------------------------------------------

(source_file)

================================================================================
Command andreas-talon/apps/terminal/terminal.talon
================================================================================


tag(): user.file_manager


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/terminal/terminal.talon
================================================================================


tag(): user.git


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/terminal/terminal.talon
================================================================================


tag(): user.maven


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/terminal/terminal.talon
================================================================================


tag(): user.npm


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/terminal/terminal.talon
================================================================================


tag(): user.yarn


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/terminal/terminal.talon
================================================================================


vscode install:
    "vsce package -o bundle.vsix && code --install-extension bundle.vsix --force\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/terminal/terminal.talon
================================================================================


vscode package:
    "vsce package\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/kodi/kodi.talon
================================================================================


[go] back:        user.go_back()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/kodi/kodi.talon
================================================================================


full screen:      key(alt-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/kodi/kodi.talon
================================================================================


menu:             key(m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/kodi/kodi.talon
================================================================================


(pause | play):   key(space)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/yarn/yarn.talon
================================================================================


yarn:           "yarn "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/yarn/yarn.talon
================================================================================


yarn version:   "yarn -version\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/yarn/yarn.talon
================================================================================


yarn compile:   "yarn compile\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


tag(): user.zoom


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


tag(): user.find


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


tag(): user.navigation


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


go address:                 browser.focus_address()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


go home:                    browser.go_home()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


go {user.webpage}:          browser.go(webpage)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


open {user.webpage}:        user.browser_open(webpage)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


go private:                 browser.open_private_window()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


bookmark show:              browser.bookmarks()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


bookmark bar:               browser.bookmarks_bar()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


bookmark it:                browser.bookmark()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


bookmark tabs:              browser.bookmark_tabs()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


(refresh | reload) page:    browser.reload()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


(refresh | reload) page hard: browser.reload_hard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


show downloads:             browser.show_downloads()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


show extensions:            browser.show_extensions()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


show history:               browser.show_history()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


show cache:                 browser.show_clear_cache()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


dev tools:                  browser.toggle_dev_tools()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/browser.talon
================================================================================


fullscreen:                 key(f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


tag(): browser


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


tag(): user.scroll


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


tab search:
    browser.focus_address()
    "% "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


tab search <user.text>$:
    browser.focus_address()
    "% {text}"
    key(down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


tab mute:                   key(ctrl-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


(bitwarden | bit warden) show:
    key(ctrl-shift-y)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


login fill:
    key(ctrl-shift-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


password generate:
    key(ctrl-shift-9)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


tab split:                  app.tab_detach()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


hunting:
    user.stop_app()
    key(escape ctrl-alt-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


hunting new:
    user.stop_app()
    key(escape ctrl-alt-F)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


hunting open:
    user.stop_app()
    key(escape ctrl-alt-g)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


{user.rango_with_target_action} <user.rango_target>:
    user.rango_command_with_target(rango_with_target_action, rango_target)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


{user.rango_without_target_action}:
    user.rango_command_without_target(rango_without_target_action)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (list
        (identifier)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


rango explicit:
    user.rango_disable_direct_clicking()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


rango direct:
    user.rango_enable_direct_clicking()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


copy address:
    user.rango_command_without_target("copyLocationProperty", "href")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


hint bigger:
    user.rango_command_without_target("increaseHintSize")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


hint smaller:
    user.rango_command_without_target("decreaseHintSize")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


hint {user.rango_hint_styles}:
    user.rango_command_without_target("setHintStyle", user.rango_hint_styles)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


hint weight {user.rango_hint_weights}:
    user.rango_command_without_target("setHintWeight", user.rango_hint_weights)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


copy image:
    mouse_click(1)
    sleep(0.1)
    key(y)
    sleep(0.1)
    user.clipboard_manager_update()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/browser/firefox.talon
================================================================================


copy video:
    mouse_click(1)
    sleep(0.1)
    key(o:2 enter)
    key(o:2 enter)
    sleep(0.1)
    user.clipboard_manager_update()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager_win.talon
================================================================================


go <user.letter> colon:   user.file_manager_open_directory("{letter}:")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
Command andreas-talon/apps/file_manager/windows_explorer.talon
================================================================================


tag(): user.file_manager


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/file_manager/windows_explorer.talon
================================================================================


go up:     user.select_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/file_manager/windows_explorer.talon
================================================================================


go down:   user.select_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/file_manager/windows_explorer.talon
================================================================================


select:    user.select_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/file_manager/windows_explorer.talon
================================================================================


scout [<user.text>]$:
    edit.find(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/apps/file_manager/windows_explorer.talon
================================================================================


pop <user.text>$:
    edit.find(text)
    sleep("100ms")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


tag(): user.navigation


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


go parent:                 user.file_manager_go_parent()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


go address:                user.file_manager_focus_address()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


go {user.path}:            user.file_manager_open_directory(path)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


copy address:              user.file_manager_copy_address()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


file new:                  user.file_manager_new_file("")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


folder new:                user.file_manager_new_folder("")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


file new <user.text>$:     user.file_manager_new_file(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


folder new <user.text>$:   user.file_manager_new_folder(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


properties show:           user.file_manager_show_properties()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/file_manager/file_manager.talon
================================================================================


terminal here:             user.file_manager_terminal_here()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/windows_task_switching.talon
================================================================================


close:   key(ctrl-w)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/draft_editor.talon
================================================================================


draft (this | dis):
    user.draft_editor_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/draft_editor.talon
================================================================================


draft all:
    edit.select_all()
    user.draft_editor_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/draft_editor.talon
================================================================================


draft line:
    edit.select_line()
    user.draft_editor_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/draft_editor.talon
================================================================================


draft top:
    edit.extend_file_start()
    user.draft_editor_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/draft_editor.talon
================================================================================


draft bottom:
    edit.extend_file_end()
    user.draft_editor_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/draft_editor.talon
================================================================================


draft submit:
    user.draft_editor_paste_last()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_take_word.talon
================================================================================


take <user.cursorless_target> <user.repeater_phrase_all>:
    user.vscode_take_word(cursorless_target, repeater_phrase_all)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_take_word.talon
================================================================================


pre <user.cursorless_target> <user.repeater_phrase_all>:
    user.vscode_take_word(cursorless_target, repeater_phrase_all)
    edit.left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_take_word.talon
================================================================================


post <user.cursorless_target> <user.repeater_phrase_all>:
    user.vscode_take_word(cursorless_target, repeater_phrase_all)
    edit.right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_take_word.talon
================================================================================


cut <user.cursorless_target> <user.repeater_phrase_all>:
    user.vscode_take_word(cursorless_target, repeater_phrase_all)
    edit.cut()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_take_word.talon
================================================================================


copy <user.cursorless_target> <user.repeater_phrase_all>:
    user.vscode_take_word(cursorless_target, repeater_phrase_all)
    edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_take_word.talon
================================================================================


paste to <user.cursorless_target> <user.repeater_phrase_all>:
    user.vscode_take_word(cursorless_target, repeater_phrase_all)
    edit.paste()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_take_word.talon
================================================================================


clear <user.cursorless_target> <user.repeater_phrase_all>:
    user.vscode_take_word(cursorless_target, repeater_phrase_all)
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


tag(): user.scroll


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


tag(): user.navigation


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


tag(): user.zoom


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


tag(): user.find


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


tag(): user.comments


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


tag(): user.cursorless_experimental_snippets


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


settings():
    user.scroll_step = 0.025


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (float)))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


jest:                       code.complete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


jest first:
    code.complete()
    key(tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


jest param:                 user.vscode("editor.action.triggerParameterHints")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


format document:            user.format_document()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


refactor this:              user.vscode("editor.action.refactor")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


problem next:               user.vscode("editor.action.marker.nextInFiles")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


problem last:               user.vscode("editor.action.marker.prevInFiles")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


problem fix:                user.vscode("problems.action.showQuickFixes")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


imports organize:           user.vscode("editor.action.organizeImports")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


imports add:                user.vscode_add_missing_imports()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


imports fix:
    user.vscode_add_missing_imports()
    sleep(0.1)
    user.vscode("editor.action.organizeImports")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


split up:                   user.vscode("workbench.action.moveEditorToAboveGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


split down:                 user.vscode("workbench.action.moveEditorToBelowGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


split left:                 user.vscode("workbench.action.moveEditorToLeftGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


split right:                user.vscode("workbench.action.moveEditorToRightGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


focus up:                   user.vscode("workbench.action.focusAboveGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


focus down:                 user.vscode("workbench.action.focusBelowGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


focus left:                 user.vscode("workbench.action.focusLeftGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


focus right:                user.vscode("workbench.action.focusRightGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


shrink width:               user.vscode("workbench.action.decreaseViewWidth")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


shrink height:              user.vscode("workbench.action.decreaseViewHeight")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


expand width:               user.vscode("workbench.action.increaseViewWidth")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


expand height:              user.vscode("workbench.action.increaseViewHeight")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


split flip:                 user.vscode("workbench.action.toggleEditorGroupLayout")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


split clear:                user.vscode("workbench.action.joinTwoGroups")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


split solo:                 user.vscode("workbench.action.editorLayoutSingle")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


maximize:                   user.vscode("workbench.action.toggleEditorWidths")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


cross:                      user.vscode("workbench.action.focusNextGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


open cross:                 key(ctrl-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


bar (show | hide):          user.vscode("workbench.action.toggleSidebarVisibility")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


bar explore:                user.vscode("workbench.view.explorer")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


bar extensions:             user.vscode("workbench.view.extensions")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


bar outline:                user.vscode("outline.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


bar debug:                  user.vscode("workbench.view.debug")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


bar search:                 user.vscode("workbench.view.search")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


bar source:                 user.vscode("workbench.view.scm")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


bar file:                   user.vscode("workbench.files.action.showActiveFileInExplorer")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


bar collapse:               user.vscode("workbench.files.action.collapseExplorerFolders")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


ref last:                   user.vscode("references-view.prev")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


ref next:                   user.vscode("references-view.next")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


panel (show | hide):        user.vscode("workbench.action.togglePanel")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


panel (large | small):      user.vscode("workbench.action.toggleMaximizedPanel")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


panel control:              user.vscode("workbench.panel.repl.view.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


panel output:               user.vscode("workbench.panel.output.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


panel problems:             user.vscode("workbench.panel.markers.view.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


panel terminal:             user.vscode("workbench.action.terminal.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


panel debug:                user.vscode("workbench.debug.action.toggleRepl")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


panel clear:                user.vscode("workbench.debug.panel.action.clearReplAction")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


<user.vscode_panel> grab line:
    user.vscode_grab_line(vscode_panel)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


<user.vscode_panel> snap {user.resize_size}:
    user.vscode_resize_panel(vscode_panel, resize_size)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


hide all:
    user.vscode("workbench.action.closeSidebar")
    user.vscode("workbench.action.closePanel")
    user.vscode("closeFindWidget")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


folder open:                user.vscode("workbench.action.files.openFolder")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


folder add:                 user.vscode("workbench.action.addRootFolder")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


folder new:                 user.vscode("explorer.newFolder")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file open:                  user.vscode("workbench.action.files.openFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file new:                   user.vscode("explorer.newFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file open folder:           user.vscode("revealFileInOS")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file reveal:                user.vscode("workbench.files.action.showActiveFileInExplorer")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file copy path:
    user.vscode("copyFilePath")
    user.clipboard_manager_update()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file copy relative:
    user.vscode("copyRelativeFilePath")
    user.clipboard_manager_update()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file copy name:
    name = user.vscode_get("andreas.getFileName")
    clip.set_text(name)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file clone:                 user.vscode("fileutils.duplicateFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file rename:                user.vscode("fileutils.renameFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file remove:                user.vscode("fileutils.removeFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


file move:                  user.vscode("fileutils.moveFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


pop sibling:
    user.find_sibling_file()
    sleep(150ms)
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git open file:              user.git_open_working_file_url()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git copy file:              user.git_copy_working_file_url()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git changes:                user.vscode("git.openChange")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git changed files:          user.vscode("git.openAllChanges")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git add all:                user.vscode("git.stageAll")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git reset all:              user.vscode("git.unstageAll")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git pull:                   user.vscode("git.pull")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git push:                   user.vscode("git.push")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git push tags:              user.vscode("git.pushTags")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git checkout {user.git_branch}: user.git_find_branch(git_branch)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git checkout [<user.text>]: user.git_find_branch(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git commit [<user.text>]:
    user.vscode("git.commit")
    text = user.format_text(text or "", "CAPITALIZE_FIRST_WORD")
    "{text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))
            (string
              (string_content)))))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


fold this:                  user.vscode("editor.fold")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


unfold this:                user.vscode("editor.unfold")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


fold recursive:             user.vscode("editor.foldRecursively")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


unfold recursive:           user.vscode("editor.unfoldRecursively")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


fold all:                   user.vscode("editor.foldAll")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


unfold all:                 user.vscode("editor.unfoldAll")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


fold comments:              user.vscode("editor.foldAllBlockComments")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


go line <number>:           edit.jump_line(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


take last word:             user.vscode("editor.action.addSelectionToPreviousFindMatch")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


cursor back:                user.vscode("cursorUndo")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


cursor forward:             user.vscode("cursorRedo")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


cursor up:                  user.vscode("editor.action.insertCursorAbove")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


cursor down:                user.vscode("editor.action.insertCursorBelow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


cursor lines:               user.vscode("editor.action.insertCursorAtEndOfEachLineSelected")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


cursor expand:              user.vscode("editor.action.smartSelect.expand")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


cursor shrink:              user.vscode("editor.action.smartSelect.shrink")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


pop back:                   user.vscode("workbench.action.openPreviousRecentlyUsedEditor")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


pop forward:                user.vscode("workbench.action.openNextRecentlyUsedEditor")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


focus editor:               user.vscode("workbench.action.focusActiveEditorGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


build program:              user.vscode("workbench.action.tasks.build")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


run program:                user.vscode("workbench.action.debug.run")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


debug start:                user.vscode("workbench.action.debug.start")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


breakpoint:                 user.vscode("editor.debug.action.toggleBreakpoint")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


continue:                   user.vscode("workbench.action.debug.continue")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


step over:                  user.vscode("workbench.action.debug.stepOver")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


step into:                  user.vscode("workbench.action.debug.stepInto")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


step out:                   user.vscode("workbench.action.debug.stepOut")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


debug restart:              user.vscode("workbench.action.debug.restart")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


debug pause:                user.vscode("workbench.action.debug.pause")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


debug stop:                 user.vscode("workbench.action.debug.stop")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


debug select:               user.vscode("workbench.action.debug.selectandstart")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


debug extension:
    user.vscode("workbench.action.debug.selectandstart")
    "run extension"
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


debug test:
    user.vscode("workbench.action.debug.selectandstart")
    "extension tests"
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


debug subset:
    user.vscode("workbench.action.debug.selectandstart")
    "run test subset"
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


run task compile:
    user.vscode("workbench.action.tasks.runTask")
    "compile"
    sleep(0.2)
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (string
          (string_content)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


run task [<user.text>]:
    user.vscode("workbench.action.tasks.runTask")
    "{text or ''}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


dev tools:                  user.vscode("workbench.action.toggleDevTools")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


select element:             key(ctrl-shift-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


scout sesh [<user.text>]$:
    user.vscode_find_recent(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


pop sesh <user.text>$:
    user.vscode_find_recent(text)
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


pop sesh:
    user.vscode_find_recent("", 1)
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)
            (integer))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


scout symbol [<user.text>]$:
    user.vscode("workbench.action.gotoSymbol")
    "{text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


scout all symbol [<user.text>]$:
    user.vscode("workbench.action.showAllSymbols")
    "{text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


scout again:                user.vscode("rerunSearchEditorSearch")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


open settings json:
    user.vscode("workbench.action.openSettingsJson")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


open settings <user.text>:
    app.preferences()
    sleep(0.2)
    "{text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


align columns:              user.vscode("rainbow-csv.Align")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


shrink columns:             user.vscode("rainbow-csv.Shrink")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


^cursorless use release$:
    user.cursorless_use_release()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


^cursorless use develop$:
    user.cursorless_use_develop()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


^cursorless record$:
    user.vscode("cursorless.recordTestCase")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


^cursorless highlight record$:
    user.cursorless_record_highlight_test()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


copy <user.cursorless_target>:
    user.cursorless_command("copyToClipboard", cursorless_target)
    user.clipboard_manager_update()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


cut <user.cursorless_target>:
    user.cursorless_command("cutToClipboard", cursorless_target)
    user.clipboard_manager_update()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


break line <user.cursorless_target>:
    user.cursorless_command("setSelectionBefore", cursorless_target)
    key("enter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (variable
              (identifier)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git open <user.cursorless_target>:
    user.cursorless_command("setSelection", cursorless_target)
    user.git_open_working_file_url(1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


git copy <user.cursorless_target>:
    user.cursorless_command("setSelection", cursorless_target)
    user.git_copy_working_file_url(1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


paste <number_small> [and <number_small>]* <user.cursorless_positional_target>:
    user.clipboard_manager_copy(number_small_list)
    user.cursorless_command("pasteFromClipboard", cursorless_positional_target)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (repeat
          (optional
            (seq
              (word)
              (capture
                (identifier)))))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (variable
              (identifier))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


install extension:          user.vscode("workbench.extensions.action.installVSIX")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


window reload:              user.vscode("workbench.action.reloadWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


trim trailing:              user.vscode("editor.action.trimTrailingWhitespace")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


inspect scope:              user.vscode("editor.action.inspectTMScopes")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


disk raw:                   user.save_without_formatting()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


disk files:                 user.vscode("workbench.action.files.saveFiles")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


undo everything:            user.vscode("andreas.undoUntilNotDirty")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


copy command id:            user.copy_command_id()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


snip last:                  user.vscode("jumpToPrevSnippetPlaceholder")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


[snip] next:                user.vscode("jumpToNextSnippetPlaceholder")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


change language [<user.text>]:
    user.change_language(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode.talon
================================================================================


please [<user.text>]$:
    user.vscode("workbench.action.showCommands")
    "{user.text or ''}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/vscode/draft_editor_active.talon
================================================================================


draft submit:    user.draft_editor_submit()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/draft_editor_active.talon
================================================================================


draft discard:   user.draft_editor_discard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


render every cell0:    user.vscode("notebook.renderAllMarkdownCells")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


run cell:              user.vscode("notebook.cell.execute")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


run new:               user.vscode("notebook.cell.executeAndInsertBelow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


stop cell:             user.vscode("notebook.cell.cancelExecution")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


chuck cell:            user.vscode("notebook.cell.delete")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cut cell:              user.vscode("notebook.cell.cut")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


copy cell:             user.vscode("notebook.cell.copy")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


paste cell:            user.vscode("notebook.cell.paste")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


center cell:           user.vscode("notebook.centerActiveCell")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cell is code:          user.vscode("notebook.cell.changeToCode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cell is mark:          user.vscode("notebook.cell.changeToMarkdown")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cell show numbers:     user.vscode("notebook.cell.toggleLineNumbers")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cell top:              user.vscode("notebook.focusTop")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cell up:               user.vscode("notebook.focusPreviousEditor")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cell down:             user.vscode("notebook.focusNextEditor")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cell bottom:           user.vscode("notebook.focusBottom")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cell join above:       user.vscode("notebook.cell.joinAbove")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cell join below:       user.vscode("notebook.cell.joinBelow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


cell split:            user.vscode("notebook.cell.split")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


drink cell:
    user.vscode("notebook.cell.insertCodeCellAboveAndFocusContainer")
    user.vscode("notebook.cell.edit")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


pour cell:
    user.vscode("notebook.cell.insertCodeCellBelowAndFocusContainer")
    user.vscode("notebook.cell.edit")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


clone cell:
    user.vscode("notebook.cell.copyDown")
    user.vscode("notebook.cell.edit")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


clone cell up:
    user.vscode("notebook.cell.copyUp")
    user.vscode("notebook.cell.edit")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


fold cell:             user.vscode("notebook.cell.collapseCellInput")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


unfold cell:           user.vscode("notebook.cell.expandCellInput")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


fold every cell:       user.vscode("notebook.cell.collapseAllCellInputs")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


unfold every cell:     user.vscode("notebook.cell.expandAllCellInputs")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


chuck output:          user.vscode("notebook.cell.clearOutputs")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


chuck every output:    user.vscode("notebook.clearAllCellsOutputs")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


fold output:           user.vscode("notebook.cell.collapseCellOutput")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


unfold output:         user.vscode("notebook.cell.expandCellOutput")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


fold every output:     user.vscode("notebook.cell.collapseAllCellOutputs")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_notebook.talon
================================================================================


unfold every output:   user.vscode("notebook.cell.expandAllCellOutputs")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_bashbook.talon
================================================================================


tag(): user.vscode_notebook


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/vscode/vscode_bashbook.talon
================================================================================


open as markdown:    user.vscode("bashbook.openNotebookAsMarkdown")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_bashbook.talon
================================================================================


open every output:   user.vscode("bashbook.openAllOutputsInNewFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_bashbook.talon
================================================================================


run take:            user.vscode("bashbook.cell.executeAndSelect")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_bashbook.talon
================================================================================


run clear:           user.vscode("bashbook.cell.executeAndClear")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_bashbook.talon
================================================================================


run down:            user.vscode("bashbook.cell.executeWithMarkdownOutput")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_bashbook.talon
================================================================================


clear cell:          user.vscode("bashbook.cell.clearAndEdit")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_bashbook.talon
================================================================================


copy output:         user.vscode("bashbook.cell.copyOutput")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/vscode/vscode_bashbook.talon
================================================================================


open output:         user.vscode("bashbook.cell.openOutputInNewFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm version:            "npm -v\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm install:            "npm install\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm install global:     "npm install -g "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm prune:              "npm prune\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm clean:              "npm run clean\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm start:              "npm start\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm test:               "npm test\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm run:                "npm run "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm run <user.text>$:   "npm run {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm run build:          "npm run build\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm run mongodb:        "npm run mongodb\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm run keycloak:       "npm run keycloak\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm run wildfly:        "npm run wildfly\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm run start:          "npm run start "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/npm/npm.talon
================================================================================


npm run start local:    "npm run startLocal "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/notepad/notepad.talon
================================================================================


tag(): user.find


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git verison:                "git --version\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git init:                   "git init\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git status:                 "git status\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git log:                    "git log --graph --color=always --format='%C(auto)%h%d %s %C(green)(%cr) %C(bold blue)<%an>%Creset'\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git log original:           "git log\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git reflog:                 "git reflog\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git clean:                  "git clean "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git remove:                 "git rm "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git tag:                    "git tag "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git branch:                 "git branch "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git branch deli:            "git branch -d "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git clone:                  "git clone "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git cherry pick:            "git cherry-pick "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git rebase:                 "git rebase "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git merge:                  "git merge "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git merge {user.git_branch}:
    "git merge {git_branch}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git remote:                 "git remote "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git remote verbose:         "git remote -v\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git reset:                  "git reset "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git reset all:              "git reset .\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git reset head:             "git reset --soft HEAD^"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git reset soft:             "git reset --soft "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git reset hard:             "git reset --hard "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git fetch:                  "git fetch "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git fetch all:              "git fetch -a\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git fetch upstream:         "git fetch upstream\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git fetch prune:            "git fetch --prune origin\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git checkout:               "git checkout "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git checkout {user.git_branch}:
    "git checkout {git_branch}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git checkout <user.text>:   "git checkout {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git checkout branch:        "git checkout -b "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git checkout branch <user.text>:
    "git checkout -b {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git checkout last:          "git checkout -\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git add:                    "git add "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git add all:                "git add .\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git commit:
    'git commit -m ""'
    key(left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git commit <user.text>$:
    text = user.format_text(text, "CAPITALIZE_FIRST_WORD")
    'git commit -m "{text}"'
    key(left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content)))))
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git commit amend:           "git commit --amend "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git diff:                   "git diff\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git diff halt:              "git diff "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git diff <user.text>:       "git diff {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git pull:                   "git pull\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git pull upstream:          "git pull upstream\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git pull upstream master:   "git pull upstream master\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git pull upstream main:     "git pull upstream main\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git push:                   "git push\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git push tags:              "git push --tags\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git stash:                  "git stash "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git stash show:             "git stash show\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git stash pop:              "git stash pop"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git merge quit:
    ":q"
    ":q"
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)))
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git numstat:                user.git_numstat("")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git numstat year:           user.git_numstat("1 year")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git numstat month:          user.git_numstat("1 month")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
Command andreas-talon/apps/git/git.talon
================================================================================


git numstat week:           user.git_numstat("1 week")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))
