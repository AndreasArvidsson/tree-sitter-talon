================================================================================
1. Command settings.talon
================================================================================


settings():
    # Adjust the scale of the imgui to my liking
    imgui.scale = 1.3


--------------------------------------------------------------------------------

(source_file
  (settings
    (comment)
    (block
      (assignment
        (identifier)
        (float)))))

================================================================================
2. Command settings.talon
================================================================================


# tag(): user.mouse_cursor_commands_enable


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
3. Command misc/splits.talon
================================================================================


split right: user.split_window_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
4. Command misc/splits.talon
================================================================================


split left: user.split_window_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
5. Command misc/splits.talon
================================================================================


split down: user.split_window_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
6. Command misc/splits.talon
================================================================================


split up: user.split_window_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
7. Command misc/splits.talon
================================================================================


split (vertically | vertical): user.split_window_vertically()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
8. Command misc/splits.talon
================================================================================


split (horizontally | horizontal): user.split_window_horizontally()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
9. Command misc/splits.talon
================================================================================


split flip: user.split_flip()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
10. Command misc/splits.talon
================================================================================


split max: user.split_maximize()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
11. Command misc/splits.talon
================================================================================


split reset: user.split_reset()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
12. Command misc/splits.talon
================================================================================


split window: user.split_window()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
13. Command misc/splits.talon
================================================================================


split clear: user.split_clear()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
14. Command misc/splits.talon
================================================================================


split clear all: user.split_clear_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
15. Command misc/splits.talon
================================================================================


split next: user.split_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
16. Command misc/splits.talon
================================================================================


split last: user.split_last()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
17. Command misc/splits.talon
================================================================================


go split <number>: user.split_number(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
18. Command misc/talon_helpers.talon
================================================================================


talon check updates: menu.check_for_updates()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
19. Command misc/talon_helpers.talon
================================================================================


talon open log: menu.open_log()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
20. Command misc/talon_helpers.talon
================================================================================


talon open rebel: menu.open_repl()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
21. Command misc/talon_helpers.talon
================================================================================


talon home: menu.open_talon_home()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
22. Command misc/talon_helpers.talon
================================================================================


talon copy context pie: user.talon_add_context_clipboard_python()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
23. Command misc/talon_helpers.talon
================================================================================


talon copy context: user.talon_add_context_clipboard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
24. Command misc/talon_helpers.talon
================================================================================


talon copy name:
    name = app.name()
    clip.set_text(name)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
25. Command misc/talon_helpers.talon
================================================================================


talon copy executable:
    executable = app.executable()
    clip.set_text(executable)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
26. Command misc/talon_helpers.talon
================================================================================


talon copy bundle:
    bundle = app.bundle()
    clip.set_text(bundle)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
27. Command misc/talon_helpers.talon
================================================================================


talon copy title:
    title = win.title()
    clip.set_text(title)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
28. Command misc/talon_helpers.talon
================================================================================


talon dump version:
    result = user.talon_version_info()
    print(result)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
29. Command misc/talon_helpers.talon
================================================================================


talon insert version:
    result = user.talon_version_info()
    user.paste(result)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
30. Command misc/talon_helpers.talon
================================================================================


talon dump context:
    result = user.talon_get_active_context()
    print(result)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
31. Command misc/talon_helpers.talon
================================================================================


^talon test last$:
    phrase = user.history_get(1)
    user.talon_sim_phrase(phrase)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (integer))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
32. Command misc/talon_helpers.talon
================================================================================


^talon test numb <number_small>$:
    phrase = user.history_get(number_small)
    user.talon_sim_phrase(phrase)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
33. Command misc/talon_helpers.talon
================================================================================


^talon test <phrase>$:
    user.talon_sim_phrase(phrase)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
34. Command misc/talon_helpers.talon
================================================================================


^talon debug action {user.talon_actions}$:
    user.talon_action_find("{user.talon_actions}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
35. Command misc/talon_helpers.talon
================================================================================


^talon debug list {user.talon_lists}$:
    user.talon_debug_list(talon_lists)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
36. Command misc/talon_helpers.talon
================================================================================


^talon copy list {user.talon_lists}$:
    user.talon_copy_list(talon_lists)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
37. Command misc/talon_helpers.talon
================================================================================


^talon debug tags$:
    user.talon_debug_tags()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
38. Command misc/talon_helpers.talon
================================================================================


^talon debug modes$:
    user.talon_debug_modes()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
39. Command misc/talon_helpers.talon
================================================================================


^talon debug scope {user.talon_scopes}$:
    user.talon_debug_scope(talon_scopes)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
40. Command misc/talon_helpers.talon
================================================================================


^talon debug setting {user.talon_settings}$:
    user.talon_debug_setting(talon_settings)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
41. Command misc/talon_helpers.talon
================================================================================


^talon debug all settings$:
    user.talon_debug_all_settings()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
42. Command misc/talon_helpers.talon
================================================================================


^talon debug active app$:
    result = user.talon_get_active_application_info()
    print("**** Dumping active application **** ")
    print(result)
    print("***********************")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
43. Command misc/talon_helpers.talon
================================================================================


^talon copy active app$:
    result = user.talon_get_active_application_info()
    clip.set_text(result)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
44. Command misc/talon_helpers.talon
================================================================================


talon (bug report|report bug): user.open_url('https://github.com/knausj85/knausj_talon/issues')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
45. Command misc/messaging.talon
================================================================================


previous (workspace | server): user.messaging_workspace_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
46. Command misc/messaging.talon
================================================================================


next (workspace | server): user.messaging_workspace_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
47. Command misc/messaging.talon
================================================================================


channel: user.messaging_open_channel_picker()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
48. Command misc/messaging.talon
================================================================================


channel <user.text>:
    user.messaging_open_channel_picker()
    insert(user.formatted_text(user.text, "ALL_LOWERCASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
49. Command misc/messaging.talon
================================================================================


channel up: user.messaging_channel_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
50. Command misc/messaging.talon
================================================================================


channel down: user.messaging_channel_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
51. Command misc/messaging.talon
================================================================================


([channel] unread last | gopreev): user.messaging_unread_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (optional
              (word))
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
52. Command misc/messaging.talon
================================================================================


([channel] unread next | goneck): user.messaging_unread_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (optional
              (word))
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
53. Command misc/messaging.talon
================================================================================


go (find | search): user.messaging_open_search()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
54. Command misc/messaging.talon
================================================================================


mark (all | workspace | server) read: user.messaging_mark_workspace_read()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
55. Command misc/messaging.talon
================================================================================


mark channel read: user.messaging_mark_channel_read()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
56. Command misc/messaging.talon
================================================================================


upload file: user.messaging_upload_file()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
57. Command misc/standard.talon
================================================================================


#(jay son | jason ): "json"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
58. Command misc/standard.talon
================================================================================


#(http | htp): "http"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
59. Command misc/standard.talon
================================================================================


#tls: "tls"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
60. Command misc/standard.talon
================================================================================


#M D five: "md5"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
61. Command misc/standard.talon
================================================================================


#word (regex | rejex): "regex"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
62. Command misc/standard.talon
================================================================================


#word queue: "queue"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
63. Command misc/standard.talon
================================================================================


#word eye: "eye"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
64. Command misc/standard.talon
================================================================================


#word iter: "iter"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
65. Command misc/standard.talon
================================================================================


#word no: "NULL"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
66. Command misc/standard.talon
================================================================================


#word cmd: "cmd"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
67. Command misc/standard.talon
================================================================================


#word dup: "dup"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
68. Command misc/standard.talon
================================================================================


#word shell: "shell".


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
69. Command misc/standard.talon
================================================================================


zoom in: edit.zoom_in()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
70. Command misc/standard.talon
================================================================================


zoom out: edit.zoom_out()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
71. Command misc/standard.talon
================================================================================


zoom reset: edit.zoom_reset()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
72. Command misc/standard.talon
================================================================================


scroll up: edit.page_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
73. Command misc/standard.talon
================================================================================


scroll down: edit.page_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
74. Command misc/standard.talon
================================================================================


copy that: edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
75. Command misc/standard.talon
================================================================================


cut that: edit.cut()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
76. Command misc/standard.talon
================================================================================


paste that: edit.paste()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
77. Command misc/standard.talon
================================================================================


undo that: edit.undo()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
78. Command misc/standard.talon
================================================================================


redo that: edit.redo()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
79. Command misc/standard.talon
================================================================================


paste match: edit.paste_match_style()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
80. Command misc/standard.talon
================================================================================


file save: edit.save()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
81. Command misc/standard.talon
================================================================================


wipe: key(backspace)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
82. Command misc/standard.talon
================================================================================


slap: edit.line_insert_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
83. Command misc/chapters.talon
================================================================================


chapter next: user.chapter_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
84. Command misc/chapters.talon
================================================================================


chapter last: user.chapter_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
85. Command misc/chapters.talon
================================================================================


go chapter <number>: user.chapter_jump(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
86. Command misc/chapters.talon
================================================================================


go chapter final: user.chapter_final()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
87. Command misc/window_management.talon
================================================================================


window (new|open): app.window_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
88. Command misc/window_management.talon
================================================================================


window next: app.window_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
89. Command misc/window_management.talon
================================================================================


window last: app.window_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
90. Command misc/window_management.talon
================================================================================


window close: app.window_close()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
91. Command misc/window_management.talon
================================================================================


focus <user.running_applications>: user.switcher_focus(running_applications)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
92. Command misc/window_management.talon
================================================================================


focus$: user.switcher_menu()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word)
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
93. Command misc/window_management.talon
================================================================================


running list: user.switcher_toggle_running()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
94. Command misc/window_management.talon
================================================================================


running close: user.switcher_hide_running()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
95. Command misc/window_management.talon
================================================================================


launch <user.launch_applications>: user.switcher_launch(launch_applications)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
96. Command misc/window_management.talon
================================================================================


snap <user.window_snap_position>: user.snap_window(window_snap_position)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
97. Command misc/window_management.talon
================================================================================


snap next [screen]: user.move_window_next_screen()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
98. Command misc/window_management.talon
================================================================================


snap last [screen]: user.move_window_previous_screen()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
99. Command misc/window_management.talon
================================================================================


snap screen <number>: user.move_window_to_screen(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
100. Command misc/window_management.talon
================================================================================


snap <user.running_applications> <user.window_snap_position>:
    user.snap_app(running_applications, window_snap_position)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
101. Command misc/window_management.talon
================================================================================


snap <user.running_applications> [screen] <number>:
    user.move_app_to_screen(running_applications, number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
102. Command misc/microphone_selection.talon
================================================================================


^microphone show$: user.microphone_selection_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
103. Command misc/microphone_selection.talon
================================================================================


^microphone close$: user.microphone_selection_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
104. Command misc/microphone_selection.talon
================================================================================


^microphone pick <number_small>$: user.microphone_select(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
105. Command misc/media.talon
================================================================================


volume up: key(volup)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
106. Command misc/media.talon
================================================================================


volume down: key(voldown)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
107. Command misc/media.talon
================================================================================


set volume <number>: user.media_set_volume(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
108. Command misc/media.talon
================================================================================


(volume|media) mute: key(mute)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
109. Command misc/media.talon
================================================================================


[media] play next: key(next)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
110. Command misc/media.talon
================================================================================


[media] play previous: key(prev)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
111. Command misc/media.talon
================================================================================


media (play | pause): user.play_pause()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
112. Command misc/macro.talon
================================================================================


macro record: user.macro_record()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
113. Command misc/macro.talon
================================================================================


macro stop: user.macro_stop()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
114. Command misc/macro.talon
================================================================================


macro play: user.macro_play()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
115. Command misc/abbreviate.talon
================================================================================


(abbreviate|abreviate|brief) {user.abbreviation}: "{abbreviation}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
116. Command misc/formatters.talon
================================================================================


phrase <user.text>$: user.insert_with_history(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
117. Command misc/formatters.talon
================================================================================


phrase <user.text> over: user.insert_with_history(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
118. Command misc/formatters.talon
================================================================================


{user.prose_formatter} <user.prose>$: user.insert_formatted(prose, prose_formatter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
119. Command misc/formatters.talon
================================================================================


{user.prose_formatter} <user.prose> over: user.insert_formatted(prose, prose_formatter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
120. Command misc/formatters.talon
================================================================================


<user.format_text>+$: user.insert_many(format_text_list)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (repeat1
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
121. Command misc/formatters.talon
================================================================================


<user.format_text>+ over: user.insert_many(format_text_list)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (repeat1
          (capture
            (identifier)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
122. Command misc/formatters.talon
================================================================================


<user.formatters> that: user.formatters_reformat_selection(user.formatters)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
123. Command misc/formatters.talon
================================================================================


word <user.word>: user.insert_with_history(user.word)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
124. Command misc/formatters.talon
================================================================================


recent list: user.toggle_phrase_history()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
125. Command misc/formatters.talon
================================================================================


recent close: user.phrase_history_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
126. Command misc/formatters.talon
================================================================================


recent repeat <number_small>: user.insert_with_history(user.get_recent_phrase(number_small))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))))))))))

================================================================================
127. Command misc/formatters.talon
================================================================================


recent copy <number_small>: clip.set_text(user.get_recent_phrase(number_small))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))))))))))

================================================================================
128. Command misc/formatters.talon
================================================================================


select that: user.select_last_phrase()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
129. Command misc/formatters.talon
================================================================================


before that: user.before_last_phrase()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
130. Command misc/formatters.talon
================================================================================


nope that | scratch that: user.clear_last_phrase()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (choice
        (seq
          (word)
          (word))
        (seq
          (word)
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
131. Command misc/formatters.talon
================================================================================


nope that was <user.formatters>: user.formatters_reformat_last(formatters)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
132. Command misc/websites_and_search_engines.talon
================================================================================


open {user.website}: user.open_url(website)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
133. Command misc/websites_and_search_engines.talon
================================================================================


{user.search_engine} hunt <user.text>$: user.search_with_search_engine(search_engine, user.text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
134. Command misc/websites_and_search_engines.talon
================================================================================


{user.search_engine} (that|this):
    text = edit.selected_text()
    user.search_with_search_engine(search_engine, text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
135. Command misc/help_scope_open.talon
================================================================================


scope (hide | close)$:   user.help_scope_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
136. Command misc/git_add_patch.talon
================================================================================


yank:
  key(y)
  key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
137. Command misc/git_add_patch.talon
================================================================================


near:
  key(n)
  key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
138. Command misc/git_add_patch.talon
================================================================================


quench:
  key(q)
  key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
139. Command misc/git_add_patch.talon
================================================================================


drum:
  key(d)
  key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
140. Command misc/git_add_patch.talon
================================================================================


air:
  key(a)
  key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
141. Command misc/repeater.talon
================================================================================


<user.ordinals>: core.repeat_command(ordinals-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
142. Command misc/repeater.talon
================================================================================


<number_small> times: core.repeat_command(number_small-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
143. Command misc/repeater.talon
================================================================================


(repeat that|twice): core.repeat_command(1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
144. Command misc/repeater.talon
================================================================================


repeat that <number_small> [times]: core.repeat_command(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
145. Command misc/cancel.talon
================================================================================


cancel cancel$: skip()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
146. Command misc/cancel.talon
================================================================================


ignore [<phrase>]$: app.notify("Command ignored")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
147. Command misc/git.talon
================================================================================


git add patch: "git add . -p\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
148. Command misc/git.talon
================================================================================


git add: "git add "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
149. Command misc/git.talon
================================================================================


git add everything: "git add -u\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
150. Command misc/git.talon
================================================================================


git bisect: "git bisect "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
151. Command misc/git.talon
================================================================================


git blame: "git blame "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
152. Command misc/git.talon
================================================================================


git branch: "git branch "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
153. Command misc/git.talon
================================================================================


git branch list: "git branch -vv\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
154. Command misc/git.talon
================================================================================


git remote branches: "git branch --remote\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
155. Command misc/git.talon
================================================================================


git branch <user.text>: "git branch {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
156. Command misc/git.talon
================================================================================


git checkout: "git checkout "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
157. Command misc/git.talon
================================================================================


git checkout master: "git checkout master\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
158. Command misc/git.talon
================================================================================


git checkout main: "git checkout main\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
159. Command misc/git.talon
================================================================================


git checkout <user.text>: "git checkout {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
160. Command misc/git.talon
================================================================================


git cherry pick: "git cherry-pick "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
161. Command misc/git.talon
================================================================================


git cherry pick continue: "git cherry-pick --continue "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
162. Command misc/git.talon
================================================================================


git cherry pick abort: "git cherry-pick --abort "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
163. Command misc/git.talon
================================================================================


git cherry pick skip: "git cherry-pick --skip "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
164. Command misc/git.talon
================================================================================


git clone: "git clone "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
165. Command misc/git.talon
================================================================================


git clean everything: "git clean -dfx"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
166. Command misc/git.talon
================================================================================


git commit message <user.text>: "git commit -m '{text}'"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
167. Command misc/git.talon
================================================================================


git commit: "git commit\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
168. Command misc/git.talon
================================================================================


git commit amend: "git commit --amend\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
169. Command misc/git.talon
================================================================================


git commit no verify: "git commit -n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
170. Command misc/git.talon
================================================================================


git commit existing: "git commit -a\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
171. Command misc/git.talon
================================================================================


git diff (colour|color) words: "git diff --color-words "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
172. Command misc/git.talon
================================================================================


git diff: "git diff "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
173. Command misc/git.talon
================================================================================


git diff cached: "git diff --cached\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
174. Command misc/git.talon
================================================================================


git diff tool: "git difftool -d\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
175. Command misc/git.talon
================================================================================


git diff tool cached: "git difftool --cached -d\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
176. Command misc/git.talon
================================================================================


git fetch: "git fetch\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
177. Command misc/git.talon
================================================================================


git fetch all: "git fetch --all\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
178. Command misc/git.talon
================================================================================


git fetch <user.text>: "git fetch {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
179. Command misc/git.talon
================================================================================


git fetch prune: "git fetch --prune\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
180. Command misc/git.talon
================================================================================


git in it: "git init\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
181. Command misc/git.talon
================================================================================


git log all: "git log\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
182. Command misc/git.talon
================================================================================


git log all changes: "git log -c\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
183. Command misc/git.talon
================================================================================


git log: "git log "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
184. Command misc/git.talon
================================================================================


git log changes: "git log -c "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
185. Command misc/git.talon
================================================================================


git merge: "git merge "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
186. Command misc/git.talon
================================================================================


git merge <user.text>:"git merge {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
187. Command misc/git.talon
================================================================================


git merge tool: "git mergetool\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
188. Command misc/git.talon
================================================================================


git move: "git mv "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
189. Command misc/git.talon
================================================================================


git pull: "git pull\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
190. Command misc/git.talon
================================================================================


git pull origin: "git pull origin "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
191. Command misc/git.talon
================================================================================


git pull rebase: "git pull --rebase\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
192. Command misc/git.talon
================================================================================


git pull fast forward: "git pull --ff-only\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
193. Command misc/git.talon
================================================================================


git pull <user.text>: "git pull {text} "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
194. Command misc/git.talon
================================================================================


git push: "git push\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
195. Command misc/git.talon
================================================================================


git push origin: "git push origin "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
196. Command misc/git.talon
================================================================================


git push up stream origin: "git push -u origin"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
197. Command misc/git.talon
================================================================================


git push <user.text>: "git push {text} "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
198. Command misc/git.talon
================================================================================


git push tags: "git push --tags\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
199. Command misc/git.talon
================================================================================


git rebase: "git rebase "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
200. Command misc/git.talon
================================================================================


git rebase continue: "git rebase --continue"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
201. Command misc/git.talon
================================================================================


git rebase skip: "git rebase --skip"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
202. Command misc/git.talon
================================================================================


git remove: "git rm "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
203. Command misc/git.talon
================================================================================


git (remove|delete) branch: "git branch -d "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
204. Command misc/git.talon
================================================================================


git (remove|delete) remote branch: "git push --delete origin "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
205. Command misc/git.talon
================================================================================


git reset: "git reset "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
206. Command misc/git.talon
================================================================================


git reset soft: "git reset --soft "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
207. Command misc/git.talon
================================================================================


git reset hard: "git reset --hard "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
208. Command misc/git.talon
================================================================================


git restore: "git restore "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
209. Command misc/git.talon
================================================================================


git restore staged: "git restore --staged "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
210. Command misc/git.talon
================================================================================


git restore source: "git restore --source="


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
211. Command misc/git.talon
================================================================================


git remote: "git remote "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
212. Command misc/git.talon
================================================================================


git remote add: "git remote add "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
213. Command misc/git.talon
================================================================================


git remote list: "git remote -v\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
214. Command misc/git.talon
================================================================================


git remote set url: "git remote set-url "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
215. Command misc/git.talon
================================================================================


git remote add upstream: "git remote add upstream "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
216. Command misc/git.talon
================================================================================


git remote remove: "git remote remove "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
217. Command misc/git.talon
================================================================================


git remote show origin: "git remote show origin\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
218. Command misc/git.talon
================================================================================


git show: "git show "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
219. Command misc/git.talon
================================================================================


git stash pop: "git stash pop\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
220. Command misc/git.talon
================================================================================


git stash: "git stash\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
221. Command misc/git.talon
================================================================================


git stash push:
  insert("git stash push -m ''")
  key(left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
222. Command misc/git.talon
================================================================================


git stash apply: "git stash apply\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
223. Command misc/git.talon
================================================================================


git stash list: "git stash list\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
224. Command misc/git.talon
================================================================================


git stash show: "git stash show"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
225. Command misc/git.talon
================================================================================


git status: "git status\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
226. Command misc/git.talon
================================================================================


git switch [<user.text>]: "git switch {user.formatted_text(text or '', 'DASH_SEPARATED')}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
227. Command misc/git.talon
================================================================================


git switch master: "git switch master "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
228. Command misc/git.talon
================================================================================


git switch main: "git switch main "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
229. Command misc/git.talon
================================================================================


git switch detached: "git switch --detach "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
230. Command misc/git.talon
================================================================================


git (switch create | new branch) [<user.text>]:
  "git switch -c {user.formatted_text(text or '', 'DASH_SEPARATED')}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (seq
              (word)
              (word))))
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
231. Command misc/git.talon
================================================================================


git switch orphan: "git switch --orphan "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
232. Command misc/git.talon
================================================================================


git submodule add:  "git submodule add "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
233. Command misc/git.talon
================================================================================


git tag: "git tag "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
234. Command misc/git.talon
================================================================================


git edit config: "git config --local -e\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
235. Command misc/git.talon
================================================================================


git clone clipboard:
  insert("git clone ")
  edit.paste()
  key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
236. Command misc/git.talon
================================================================================


git diff highlighted:
    edit.copy()
    insert("git diff ")
    edit.paste()
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
237. Command misc/git.talon
================================================================================


git diff clipboard:
    insert("git diff ")
    edit.paste()
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
238. Command misc/git.talon
================================================================================


git add highlighted:
    edit.copy()
    insert("git add ")
    edit.paste()
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
239. Command misc/git.talon
================================================================================


git add clipboard:
    insert("git add ")
    edit.paste()
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
240. Command misc/git.talon
================================================================================


git commit highlighted:
    edit.copy()
    insert("git add ")
    edit.paste()
    insert("\ngit commit\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_escape_sequence)
              (string_content)
              (string_escape_sequence))))))))

================================================================================
241. Command misc/history.talon
================================================================================


command history: user.history_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
242. Command misc/history.talon
================================================================================


command history close: user.history_disable()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
243. Command misc/history.talon
================================================================================


command history clear: user.history_clear()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
244. Command misc/history.talon
================================================================================


command history less: user.history_less()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
245. Command misc/history.talon
================================================================================


command history more: user.history_more()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
246. Command misc/vocabulary.talon
================================================================================


copy to vocab [as <phrase>]$: user.add_selection_to_vocabulary(phrase or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (seq
            (word)
            (capture
              (identifier)))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
247. Command misc/vocabulary.talon
================================================================================


copy name to vocab [as <phrase>]$: user.add_selection_to_vocabulary(phrase or "", "name")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (optional
          (seq
            (word)
            (capture
              (identifier)))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))
            (string
              (string_content))))))))

================================================================================
248. Command misc/vocabulary.talon
================================================================================


copy noun to vocab [as <phrase>]$: user.add_selection_to_vocabulary(phrase or "", "noun")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (optional
          (seq
            (word)
            (capture
              (identifier)))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))
            (string
              (string_content))))))))

================================================================================
249. Command misc/vocabulary.talon
================================================================================


copy to replacements as <phrase>$: user.add_selection_to_words_to_replace(phrase)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
250. Command misc/vocabulary.talon
================================================================================


copy name to replacements as <phrase>$: user.add_selection_to_words_to_replace(phrase, "name")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content))))))))

================================================================================
251. Command misc/vocabulary.talon
================================================================================


copy noun to replacements as <phrase>$: user.add_selection_to_words_to_replace(phrase, "noun")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content))))))))

================================================================================
252. Command misc/desktops.talon
================================================================================


desk <number_small>: user.desktop(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
253. Command misc/desktops.talon
================================================================================


desk next: user.desktop_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
254. Command misc/desktops.talon
================================================================================


desk last: user.desktop_last()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
255. Command misc/desktops.talon
================================================================================


desk show: user.desktop_show()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
256. Command misc/desktops.talon
================================================================================


window move desk <number>: user.window_move_desktop(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
257. Command misc/desktops.talon
================================================================================


window move desk left: user.window_move_desktop_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
258. Command misc/desktops.talon
================================================================================


window move desk right: user.window_move_desktop_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
259. Command misc/edit_settings.talon
================================================================================


customize {user.talon_settings_csv}:
  user.edit_text_file(talon_settings_csv)
  sleep(500ms)
  edit.file_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
260. Command misc/keys.talon
================================================================================


go <user.arrow_keys>: user.move_cursor(arrow_keys)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
261. Command misc/keys.talon
================================================================================


<user.letter>: key(letter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
262. Command misc/keys.talon
================================================================================


(ship | uppercase) <user.letters> [(lowercase | sunk)]:
    user.insert_formatted(letters, "ALL_CAPS")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))
        (optional
          (parenthesized_rule
            (choice
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content))))))))

================================================================================
263. Command misc/keys.talon
================================================================================


<user.symbol_key>: key(symbol_key)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
264. Command misc/keys.talon
================================================================================


<user.function_key>: key(function_key)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
265. Command misc/keys.talon
================================================================================


<user.special_key>: key(special_key)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
266. Command misc/keys.talon
================================================================================


<user.modifiers> <user.unmodified_key>: key("{modifiers}-{unmodified_key}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
267. Command misc/keys.talon
================================================================================


press <user.modifiers>: key(modifiers)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
268. Command misc/keys.talon
================================================================================


press <user.keys>: key(keys)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
269. Command misc/screenshot.talon
================================================================================


^grab screen$:                       user.screenshot()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
270. Command misc/screenshot.talon
================================================================================


^grab screen <number_small>$:        user.screenshot(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
271. Command misc/screenshot.talon
================================================================================


^grab window$:                       user.screenshot_window()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
272. Command misc/screenshot.talon
================================================================================


^grab selection$:                    user.screenshot_selection()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
273. Command misc/screenshot.talon
================================================================================


^grab settings$:                     user.screenshot_settings()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
274. Command misc/screenshot.talon
================================================================================


^grab screen clip$:                  user.screenshot_clipboard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
275. Command misc/screenshot.talon
================================================================================


^grab screen <number_small> clip$:   user.screenshot_clipboard(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
276. Command misc/screenshot.talon
================================================================================


^grab window clip$:                  user.screenshot_window_clipboard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
277. Command misc/tabs.talon
================================================================================


tab (open | new): app.tab_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
278. Command misc/tabs.talon
================================================================================


tab (last | previous): app.tab_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
279. Command misc/tabs.talon
================================================================================


tab next: app.tab_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
280. Command misc/tabs.talon
================================================================================


tab close: user.tab_close_wrapper()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
281. Command misc/tabs.talon
================================================================================


tab (reopen|restore): app.tab_reopen()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
282. Command misc/tabs.talon
================================================================================


go tab <number>: user.tab_jump(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
283. Command misc/tabs.talon
================================================================================


go tab final: user.tab_final()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
284. Command misc/tabs.talon
================================================================================


tab duplicate: user.tab_duplicate()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
285. Command misc/screens.talon
================================================================================


screen numbers:   user.screens_show_numbering()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
286. Command misc/extensions.talon
================================================================================


{user.file_extension}: "{file_extension}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (list
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
287. Command misc/multiple_cursors.talon
================================================================================


cursor multiple: user.multi_cursor_enable()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
288. Command misc/multiple_cursors.talon
================================================================================


cursor stop: user.multi_cursor_disable()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
289. Command misc/multiple_cursors.talon
================================================================================


cursor up: user.multi_cursor_add_above()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
290. Command misc/multiple_cursors.talon
================================================================================


cursor down: user.multi_cursor_add_below()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
291. Command misc/multiple_cursors.talon
================================================================================


cursor less: user.multi_cursor_select_fewer_occurrences()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
292. Command misc/multiple_cursors.talon
================================================================================


cursor more: user.multi_cursor_select_more_occurrences()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
293. Command misc/multiple_cursors.talon
================================================================================


cursor skip: user.multi_cursor_skip_occurrence()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
294. Command misc/multiple_cursors.talon
================================================================================


cursor all: user.multi_cursor_select_all_occurrences()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
295. Command misc/multiple_cursors.talon
================================================================================


cursor lines: user.multi_cursor_add_to_line_ends()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
296. Command misc/pages.talon
================================================================================


page next: user.page_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
297. Command misc/pages.talon
================================================================================


page last: user.page_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
298. Command misc/pages.talon
================================================================================


go page <number>: user.page_jump(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
299. Command misc/pages.talon
================================================================================


go page final: user.page_final()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
300. Command misc/datetimeinsert.talon
================================================================================


date insert:
    insert(user.time_format("%Y-%m-%d"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (string
                  (string_content))))))))))

================================================================================
301. Command misc/datetimeinsert.talon
================================================================================


date insert UTC:
    insert(user.time_format_utc("%Y-%m-%d"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (string
                  (string_content))))))))))

================================================================================
302. Command misc/datetimeinsert.talon
================================================================================


timestamp insert:
    insert(user.time_format("%Y-%m-%d %H:%M:%S"))
    insert(user.time_format("%Y-%m-%d %H:%M:%S"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (string
                  (string_content)))))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (string
                  (string_content))))))))))

================================================================================
303. Command misc/datetimeinsert.talon
================================================================================


timestamp insert high resolution:
    insert(user.time_format("%Y-%m-%d %H:%M:%S.%f"))
    insert(user.time_format("%Y-%m-%d %H:%M:%S.%f"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (string
                  (string_content)))))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (string
                  (string_content))))))))))

================================================================================
304. Command misc/datetimeinsert.talon
================================================================================


timestamp insert UTC:
    insert(user.time_format_utc("%Y-%m-%d %H:%M:%S"))
    insert(user.time_format_utc("%Y-%m-%d %H:%M:%S"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (string
                  (string_content)))))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (string
                  (string_content))))))))))

================================================================================
305. Command misc/datetimeinsert.talon
================================================================================


timestamp insert UTC high resolution:
    insert(user.time_format_utc("%Y-%m-%d %H:%M:%S.%f"))
    insert(user.time_format_utc("%Y-%m-%d %H:%M:%S.%f"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (string
                  (string_content)))))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (string
                  (string_content))))))))))

================================================================================
306. Command misc/help_open.talon
================================================================================


help next$: user.help_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
307. Command misc/help_open.talon
================================================================================


help previous$: user.help_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
308. Command misc/help_open.talon
================================================================================


help <number>$: user.help_select_index(number - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
309. Command misc/help_open.talon
================================================================================


help return$: user.help_return()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
310. Command misc/help_open.talon
================================================================================


help refresh$: user.help_refresh()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
311. Command misc/help_open.talon
================================================================================


help close$: user.help_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
312. Command misc/mouse.talon
================================================================================


control mouse: user.mouse_toggle_control_mouse()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
313. Command misc/mouse.talon
================================================================================


zoom mouse: user.mouse_toggle_zoom_mouse()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
314. Command misc/mouse.talon
================================================================================


camera overlay: user.mouse_toggle_camera_overlay()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
315. Command misc/mouse.talon
================================================================================


run calibration: user.mouse_calibrate()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
316. Command misc/mouse.talon
================================================================================


end drag | drag end:
    user.mouse_drag_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (choice
        (seq
          (word)
          (word))
        (seq
          (word)
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
317. Command misc/mouse.talon
================================================================================


wheel down: user.mouse_scroll_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
318. Command misc/mouse.talon
================================================================================


wheel down here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
319. Command misc/mouse.talon
================================================================================


wheel tiny [down]: user.mouse_scroll_down(0.2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (float)))))))

================================================================================
320. Command misc/mouse.talon
================================================================================


wheel tiny [down] here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_down(0.2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (float)))))))

================================================================================
321. Command misc/mouse.talon
================================================================================


wheel downer: user.mouse_scroll_down_continuous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
322. Command misc/mouse.talon
================================================================================


wheel downer here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_down_continuous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
323. Command misc/mouse.talon
================================================================================


wheel up: user.mouse_scroll_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
324. Command misc/mouse.talon
================================================================================


wheel up here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
325. Command misc/mouse.talon
================================================================================


wheel tiny up: user.mouse_scroll_up(0.2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (float)))))))

================================================================================
326. Command misc/mouse.talon
================================================================================


wheel tiny up here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_up(0.2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (float)))))))

================================================================================
327. Command misc/mouse.talon
================================================================================


wheel upper: user.mouse_scroll_up_continuous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
328. Command misc/mouse.talon
================================================================================


wheel upper here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_up_continuous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
329. Command misc/mouse.talon
================================================================================


wheel gaze: user.mouse_gaze_scroll()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
330. Command misc/mouse.talon
================================================================================


wheel gaze here:
    user.mouse_move_center_active_window()
    user.mouse_gaze_scroll()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
331. Command misc/mouse.talon
================================================================================


wheel stop: user.mouse_scroll_stop()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
332. Command misc/mouse.talon
================================================================================


wheel stop here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_stop()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
333. Command misc/mouse.talon
================================================================================


wheel left: user.mouse_scroll_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
334. Command misc/mouse.talon
================================================================================


wheel left here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
335. Command misc/mouse.talon
================================================================================


wheel tiny left: user.mouse_scroll_left(0.5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (float)))))))

================================================================================
336. Command misc/mouse.talon
================================================================================


wheel tiny left here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_left(0.5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (float)))))))

================================================================================
337. Command misc/mouse.talon
================================================================================


wheel right: user.mouse_scroll_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
338. Command misc/mouse.talon
================================================================================


wheel right here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
339. Command misc/mouse.talon
================================================================================


wheel tiny right: user.mouse_scroll_right(0.5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (float)))))))

================================================================================
340. Command misc/mouse.talon
================================================================================


wheel tiny right here:
    user.mouse_move_center_active_window()
    user.mouse_scroll_right(0.5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (float)))))))

================================================================================
341. Command misc/mouse.talon
================================================================================


copy mouse position: user.copy_mouse_position()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
342. Command misc/mouse.talon
================================================================================


curse no:
    # Command added 2021-12-13, can remove after 2022-06-01
    app.notify("Please activate the user.mouse_cursor_commands_enable tag to enable this command")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (comment)
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
343. Command misc/help.talon
================================================================================


help alphabet: user.help_list("user.letter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
344. Command misc/help.talon
================================================================================


help symbols: user.help_list("user.symbol_key")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
345. Command misc/help.talon
================================================================================


help numbers: user.help_list("user.number_key")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
346. Command misc/help.talon
================================================================================


help punctuation: user.help_list("user.punctuation")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
347. Command misc/help.talon
================================================================================


help modifier: user.help_list("user.modifier_key")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
348. Command misc/help.talon
================================================================================


help special keys: user.help_list("user.special_key")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
349. Command misc/help.talon
================================================================================


help function keys: user.help_list("user.function_key")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
350. Command misc/help.talon
================================================================================


help arrows: user.help_list("user.arrow_key")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
351. Command misc/help.talon
================================================================================


(help formatters | help format | format help) : user.help_formatters(user.get_formatters_words())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
352. Command misc/help.talon
================================================================================


help context$: user.help_context()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
353. Command misc/help.talon
================================================================================


help active$: user.help_context_enabled()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
354. Command misc/help.talon
================================================================================


help search <user.text>$: user.help_search(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
355. Command misc/help.talon
================================================================================


help context {user.help_contexts}$: user.help_selected_context(help_contexts)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
356. Command misc/help.talon
================================================================================


help help: user.help_search("help")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
357. Command misc/help.talon
================================================================================


help scope$: user.help_scope_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
358. Command misc/mouse_cursor.talon
================================================================================


curse yes: user.mouse_show_cursor()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
359. Command misc/mouse_cursor.talon
================================================================================


curse no: user.mouse_hide_cursor()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
360. Command draft_editor/draft_editor.talon
================================================================================


draft top:
  edit.extend_file_start()
  user.draft_editor_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
361. Command draft_editor/draft_editor.talon
================================================================================


draft bottom:
  edit.extend_file_end()
  user.draft_editor_open()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
362. Command draft_editor/draft_editor.talon
================================================================================


draft submit:
  user.draft_editor_paste_last()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
363. Command draft_editor/draft_editor_open.talon
================================================================================


draft submit:    user.draft_editor_submit()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
364. Command draft_editor/draft_editor_open.talon
================================================================================


draft discard:   user.draft_editor_discard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
365. Command modes/language_modes.talon
================================================================================


^force {user.language_mode}$: user.code_set_language_mode(language_mode)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
366. Command modes/language_modes.talon
================================================================================


^clear language modes$: user.code_clear_language_mode()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
367. Command modes/language_modes.talon
================================================================================


[enable] debug mode:
    mode.enable("user.gdb")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
368. Command modes/language_modes.talon
================================================================================


disable debug mode:
    mode.disable("user.gdb")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
369. Command modes/dictation_mode.talon
================================================================================


^press <user.modifiers>$: key(modifiers)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
370. Command modes/dictation_mode.talon
================================================================================


^press <user.keys>$: key(keys)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
371. Command modes/dictation_mode.talon
================================================================================


<user.raw_prose>: auto_insert(raw_prose)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
372. Command modes/dictation_mode.talon
================================================================================


cap: user.dictation_format_cap()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
373. Command modes/dictation_mode.talon
================================================================================


(no cap | no-caps): user.dictation_format_no_cap()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
374. Command modes/dictation_mode.talon
================================================================================


(no space | no-space): user.dictation_format_no_space()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
375. Command modes/dictation_mode.talon
================================================================================


^cap that$: user.dictation_reformat_cap()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
376. Command modes/dictation_mode.talon
================================================================================


^(no cap | no-caps) that$: user.dictation_reformat_no_cap()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
377. Command modes/dictation_mode.talon
================================================================================


^(no space | no-space) that$: user.dictation_reformat_no_space()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
378. Command modes/dictation_mode.talon
================================================================================


go up <number_small> (line|lines):
    edit.up()
    repeat(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
379. Command modes/dictation_mode.talon
================================================================================


go down <number_small> (line|lines):
    edit.down()
    repeat(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
380. Command modes/dictation_mode.talon
================================================================================


go left <number_small> (word|words):
    edit.word_left()
    repeat(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
381. Command modes/dictation_mode.talon
================================================================================


go right <number_small> (word|words):
    edit.word_right()
    repeat(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
382. Command modes/dictation_mode.talon
================================================================================


go line start: edit.line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
383. Command modes/dictation_mode.talon
================================================================================


go line end: edit.line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
384. Command modes/dictation_mode.talon
================================================================================


select left <number_small> (word|words):
    edit.extend_word_left()
    repeat(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
385. Command modes/dictation_mode.talon
================================================================================


select right <number_small> (word|words):
    edit.extend_word_right()
    repeat(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
386. Command modes/dictation_mode.talon
================================================================================


select left <number_small> (character|characters):
    edit.extend_left()
    repeat(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
387. Command modes/dictation_mode.talon
================================================================================


select right <number_small> (character|characters):
    edit.extend_right()
    repeat(number_small - 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
388. Command modes/dictation_mode.talon
================================================================================


clear left <number_small> (word|words):
    edit.extend_word_left()
    repeat(number_small - 1)
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
389. Command modes/dictation_mode.talon
================================================================================


clear right <number_small> (word|words):
    edit.extend_word_right()
    repeat(number_small - 1)
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
390. Command modes/dictation_mode.talon
================================================================================


clear left <number_small> (character|characters):
    edit.extend_left()
    repeat(number_small - 1)
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
391. Command modes/dictation_mode.talon
================================================================================


clear right <number_small> (character|characters):
    edit.extend_right()
    repeat(number_small - 1)
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
392. Command modes/dictation_mode.talon
================================================================================


formatted <user.format_text>:
    user.dictation_insert_raw(format_text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
393. Command modes/dictation_mode.talon
================================================================================


^format selection <user.formatters>$:
    user.formatters_reformat_selection(formatters)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
394. Command modes/dictation_mode.talon
================================================================================


scratch that: user.clear_last_phrase()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
395. Command modes/dictation_mode.talon
================================================================================


scratch selection: edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
396. Command modes/dictation_mode.talon
================================================================================


select that: user.select_last_phrase()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
397. Command modes/dictation_mode.talon
================================================================================


spell that <user.letters>: auto_insert(letters)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
398. Command modes/dictation_mode.talon
================================================================================


spell that <user.formatters> <user.letters>:
    result = user.formatted_text(letters, formatters)
    user.dictation_insert_raw(result)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
399. Command modes/dictation_mode.talon
================================================================================


^escape <user.text>$:
    auto_insert(user.text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
400. Command modes/dragon_modes.talon
================================================================================


dragon mode: user.dragon_mode()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
401. Command modes/dragon_modes.talon
================================================================================


talon mode: user.talon_mode()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
402. Command modes/sleep_mode.talon
================================================================================


settings():
    #stop continuous scroll/gaze scroll with a pop
    user.mouse_enable_pop_stops_scroll = 0


--------------------------------------------------------------------------------

(source_file
  (settings
    (comment)
    (block
      (assignment
        (identifier)
        (integer)))))

================================================================================
403. Command modes/sleep_mode.talon
================================================================================




--------------------------------------------------------------------------------

(source_file)

================================================================================
404. Command modes/modes.talon
================================================================================


^dictation mode$:
    mode.disable("sleep")
    mode.disable("command")
    mode.enable("dictation")
    user.code_clear_language_mode()
    mode.disable("user.gdb")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
405. Command modes/modes.talon
================================================================================


^command mode$:
    mode.disable("sleep")
    mode.disable("dictation")
    mode.enable("command")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
406. Command modes/wake_up.talon
================================================================================


^welcome back$:
    user.mouse_wake()
    user.history_enable()
    user.talon_mode()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
407. Command modes/wake_up.talon
================================================================================


^sleep all [<phrase>]$:
    user.switcher_hide_running()
    user.history_disable()
    user.homophones_hide()
    user.help_hide()
    user.mouse_sleep()
    speech.disable()
    user.engine_sleep()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
408. Command modes/wake_up.talon
================================================================================


^talon sleep [<phrase>]$: speech.disable()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier))))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
409. Command modes/wake_up.talon
================================================================================


^talon wake$: speech.enable()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
410. Command modes/sleep_mode_wav2letter.talon
================================================================================


<phrase>: skip()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
411. Command emoji/emoji.talon
================================================================================


emoticon {user.emoticon}: "{emoticon}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
412. Command emoji/emoji.talon
================================================================================


emoji {user.emoji}: user.paste(emoji)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
413. Command emoji/emoji.talon
================================================================================


kaomoji {user.kaomoji}: user.paste(kaomoji)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
414. Command talon_draft_window/draft_window_open.talon
================================================================================


draft hide: user.draft_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
415. Command talon_draft_window/draft_window_open.talon
================================================================================


draft submit:
  content = user.draft_get_text()
  user.draft_hide()
  insert(content)
  # user.paste may be somewhat faster, but seems to be unreliable on MacOSX, see
  # https://github.com/talonvoice/talon/issues/254#issuecomment-789355238
  # https://github.com/talonvoice/talon/issues/254#issuecomment-789355238
  # user.paste(content)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (comment)
      (comment)
      (comment)
      (comment))))

================================================================================
416. Command talon_draft_window/draft_window.talon
================================================================================


settings():
  # Enable 'Smart dictation mode', see https://github.com/knausj85/knausj_talon/pull/356
  # Enable 'Smart dictation mode', see https://github.com/knausj85/knausj_talon/pull/356
  user.context_sensitive_dictation = 1


--------------------------------------------------------------------------------

(source_file
  (settings
    (comment)
    (comment)
    (block
      (assignment
        (identifier)
        (integer)))))

================================================================================
417. Command talon_draft_window/draft_window.talon
================================================================================


replace <user.draft_anchor> with <user.text>:
  user.draft_select("{draft_anchor}")
  result = user.formatted_text(text, "NOOP")
  insert(result)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)))))
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
418. Command talon_draft_window/draft_window.talon
================================================================================


(pre | cursor | cursor before) <user.draft_anchor>:
  user.draft_position_caret("{draft_anchor}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (seq
              (word)
              (word))))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
419. Command talon_draft_window/draft_window.talon
================================================================================


(post | cursor after) <user.draft_anchor>:
  user.draft_position_caret("{draft_anchor}", 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))
            (integer)))))))

================================================================================
420. Command talon_draft_window/draft_window.talon
================================================================================


(take | select) <user.draft_anchor>:
  user.draft_select("{draft_anchor}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
421. Command talon_draft_window/draft_window.talon
================================================================================


(take | select) <user.draft_anchor> (through | past) <user.draft_anchor>:
  user.draft_select("{draft_anchor_1}", "{draft_anchor_2}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))
            (string
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
422. Command talon_draft_window/draft_window.talon
================================================================================


(change | chuck | clear) <user.draft_anchor>:
  user.draft_select("{draft_anchor}", "", 1)
  key(backspace)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))
            (string)
            (integer))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
423. Command talon_draft_window/draft_window.talon
================================================================================


(change | chuck | clear) <user.draft_anchor> (through | past) <user.draft_anchor>:
  user.draft_select(draft_anchor_1, draft_anchor_2, 1)
  key(backspace)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))
            (integer))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
424. Command talon_draft_window/draft_window.talon
================================================================================


<user.formatters> word <user.draft_anchor>:
  user.draft_select("{draft_anchor}", "", 1)
  user.formatters_reformat_selection(user.formatters)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))
            (string)
            (integer))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
425. Command talon_draft_window/draft_window.talon
================================================================================


<user.formatters> <user.draft_anchor> (through | past) <user.draft_anchor>:
    user.draft_select(draft_anchor_1, draft_anchor_2, 1)
    user.formatters_reformat_selection(user.formatters)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))
            (integer))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
426. Command talon_draft_window/draft_global.talon
================================================================================


^draft show:
    # Do this toggle so we can have focus when saying 'draft show'
    user.draft_hide()
    user.draft_show()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)))
    (comment)
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
427. Command talon_draft_window/draft_global.talon
================================================================================


^draft show <user.draft_window_position>:
    # Do this toggle so we can have focus when saying 'draft show'
    user.draft_hide()
    user.draft_show()
    user.draft_named_move(draft_window_position)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (comment)
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
428. Command talon_draft_window/draft_global.talon
================================================================================


^draft show small:
    # Do this toggle so we can have focus when saying 'draft show'
    user.draft_hide()
    user.draft_show()
    user.draft_resize(600, 200)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)))
    (comment)
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (integer)
            (integer)))))))

================================================================================
429. Command talon_draft_window/draft_global.talon
================================================================================


^draft show large:
    # Do this toggle so we can have focus when saying 'draft show'
    user.draft_hide()
    user.draft_show()
    user.draft_resize(800, 500)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)))
    (comment)
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (integer)
            (integer)))))))

================================================================================
430. Command talon_draft_window/draft_global.talon
================================================================================


^draft empty: user.draft_show("")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)))))))

================================================================================
431. Command talon_draft_window/draft_global.talon
================================================================================


^draft edit:
    text = edit.selected_text()
    key(backspace)
    user.draft_show(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
432. Command talon_draft_window/draft_global.talon
================================================================================


^draft edit all:
    edit.select_all()
    text = edit.selected_text()
    key(backspace)
    user.draft_show(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
433. Command lang/terraform/terraform.talon
================================================================================


tag(): user.code_comment_block_c_like


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
434. Command lang/terraform/terraform.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
435. Command lang/terraform/terraform.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
436. Command lang/terraform/terraform.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
437. Command lang/terraform/terraform.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
438. Command lang/terraform/terraform.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
439. Command lang/terraform/terraform.talon
================================================================================


tag(): user.code_operators_lambda


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
440. Command lang/terraform/terraform.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
441. Command lang/terraform/terraform.talon
================================================================================


state {user.terraform_module_block}:
    user.code_terraform_module_block(user.terraform_module_block)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
442. Command lang/terraform/terraform.talon
================================================================================


resource <user.text>:
    user.code_terraform_resource(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
443. Command lang/terraform/terraform.talon
================================================================================


data [source] <user.text>:
    user.code_terraform_data_source(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
444. Command lang/terraform/terraform.talon
================================================================================


[state] prop {user.terraform_common_property}:
    insert(user.terraform_common_property)
    user.code_operator_assignment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
445. Command lang/terraform/terraform.talon
================================================================================


type {user.code_type}: insert("{code_type}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
446. Command lang/talon/talon.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
447. Command lang/talon/talon.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
448. Command lang/talon/talon.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
449. Command lang/talon/talon.talon
================================================================================


tag(): user.code_functions_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
450. Command lang/talon/talon.talon
================================================================================


# see https://github.com/knausj85/knausj_talon/issues/600


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
451. Command lang/talon/talon.talon
================================================================================


# tag(): user.talon_populate_lists


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
452. Command lang/talon/talon.talon
================================================================================


dot talon: insert(".talon")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
453. Command lang/talon/talon.talon
================================================================================


action block:
    user.insert_between("action(", "):")
    user.insert_between("action(", "):")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
454. Command lang/talon/talon.talon
================================================================================


setting block:
    insert("settings():\n\t")
    insert("settings():\n\t")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_escape_sequence)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_escape_sequence))))))))

================================================================================
455. Command lang/talon/talon.talon
================================================================================


setting {user.talon_settings}:
    user.paste("{talon_settings} = ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
456. Command lang/talon/talon.talon
================================================================================


win require:
    insert("os: windows\n")
    insert("os: windows\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence))))))))

================================================================================
457. Command lang/talon/talon.talon
================================================================================


mac require:
    insert("os: mac\n")
    insert("os: mac\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence))))))))

================================================================================
458. Command lang/talon/talon.talon
================================================================================


linux require:
    insert("os: linux\n")
    insert("os: linux\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence))))))))

================================================================================
459. Command lang/talon/talon.talon
================================================================================


title require:
    insert("win.title: ")
    insert("win.title: ")


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (identifier))
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
460. Command lang/talon/talon.talon
================================================================================


application [require] [{user.talon_apps}]:
    app = talon_apps or ""
    user.paste("app: {app}")
    user.paste("app: {app}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (list
            (identifier)))))
    (block
      (assignment
        (identifier)
        (binary_operator
          (variable
            (identifier))
          (operator)
          (string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
461. Command lang/talon/talon.talon
================================================================================


mode require [{user.talon_modes}]:
    mode = talon_modes or ""
    user.paste("mode: {mode}")
    user.paste("mode: {mode}")


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (identifier))
  (command
    (rule
      (seq
        (word)
        (optional
          (list
            (identifier)))))
    (block
      (assignment
        (identifier)
        (binary_operator
          (variable
            (identifier))
          (operator)
          (string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
462. Command lang/talon/talon.talon
================================================================================


tag require [{user.talon_tags}]:
    tag = talon_tags or ""
    user.paste("tag: {tag}")
    user.paste("tag: {tag}")


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (identifier))
  (command
    (rule
      (seq
        (word)
        (optional
          (list
            (identifier)))))
    (block
      (assignment
        (identifier)
        (binary_operator
          (variable
            (identifier))
          (operator)
          (string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
463. Command lang/talon/talon.talon
================================================================================


tag set [{user.talon_tags}]:
    tag = talon_tags or ""
    user.paste("tag(): {tag}")
    user.paste("tag(): {tag}")


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (identifier))
  (command
    (rule
      (seq
        (word)
        (optional
          (list
            (identifier)))))
    (block
      (assignment
        (identifier)
        (binary_operator
          (variable
            (identifier))
          (operator)
          (string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
464. Command lang/talon/talon.talon
================================================================================


list {user.talon_lists}: "{{{talon_lists}}}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
465. Command lang/talon/talon.talon
================================================================================


capture {user.talon_captures}: "<{talon_captures}>"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
466. Command lang/talon/talon.talon
================================================================================


key <user.keys> over: "{keys}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
467. Command lang/talon/talon.talon
================================================================================


key <user.modifiers> over: "{modifiers}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
468. Command lang/talon/talon.talon
================================================================================


funk {user.talon_actions}: user.code_insert_function(talon_actions, edit.selected_text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (action
              (identifier)
              (argument_list))))))))

================================================================================
469. Command lang/talon/talon.talon
================================================================================


funk cell <number>:
    user.code_select_function(number - 1, "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))
            (string)))))))

================================================================================
470. Command lang/talon/talon.talon
================================================================================


funk wrap <user.code_common_function>:
    user.code_insert_function(code_common_function, edit.selected_text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (action
              (identifier)
              (argument_list))))))))

================================================================================
471. Command lang/talon/talon.talon
================================================================================


funk wrap <number>:
    user.code_select_function(number - 1, edit.selected_text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))
            (action
              (identifier)
              (argument_list))))))))

================================================================================
472. Command lang/vimscript/vimscript.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
473. Command lang/vimscript/vimscript.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
474. Command lang/vimscript/vimscript.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
475. Command lang/vimscript/vimscript.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
476. Command lang/vimscript/vimscript.talon
================================================================================


settings():
    user.code_private_function_formatter = "SNAKE_CASE"
    user.code_protected_function_formatter = "SNAKE_CASE"
    user.code_public_function_formatter = "SNAKE_CASE"
    user.code_private_variable_formatter = "SNAKE_CASE"
    user.code_protected_variable_formatter = "SNAKE_CASE"
    user.code_public_variable_formatter = "SNAKE_CASE"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
477. Command lang/vimscript/vimscript.talon
================================================================================


assign [<user.vimscript_scope>] (variable|var) [<user.text>] [over]:
    insert("let ")
    insert(vimscript_scope or '')
    user.code_private_variable_formatter(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (capture
            (identifier)))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
478. Command lang/vimscript/vimscript.talon
================================================================================


[<user.vimscript_scope>] (variable|var) [<user.text>] [over]:
    insert(vimscript_scope or '')
    user.code_private_variable_formatter(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (capture
            (identifier)))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (capture
            (identifier)))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
479. Command lang/vimscript/vimscript.talon
================================================================================


<user.vimscript_functions>:
    insert("{vimscript_functions} ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
480. Command lang/vimscript/vimscript.talon
================================================================================


state command: "command! "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
481. Command lang/vimscript/vimscript.talon
================================================================================


state end if: "endif"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
482. Command lang/vimscript/vimscript.talon
================================================================================


state end for: "endfor"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
483. Command lang/vimscript/vimscript.talon
================================================================================


state end while: "endwhile"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
484. Command lang/vimscript/vimscript.talon
================================================================================


state end function: "endfunction"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
485. Command lang/vimscript/vimscript.talon
================================================================================


state continue: "continue"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
486. Command lang/go/go.talon
================================================================================


variadic: "..."


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
487. Command lang/go/go.talon
================================================================================


logical and: " && "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
488. Command lang/go/go.talon
================================================================================


logical or: " || "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
489. Command lang/go/go.talon
================================================================================


state comment: "// "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
490. Command lang/go/go.talon
================================================================================


[line] comment <user.text>:
    key("cmd-right")
    insert(" // ")
    insert(user.formatted_text(text, "sentence"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
491. Command lang/go/go.talon
================================================================================


# "add comment <user.text> [over]:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
492. Command lang/go/go.talon
================================================================================


# "[state] context: insert("ctx")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
493. Command lang/go/go.talon
================================================================================


state (funk | func | fun): "func "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
494. Command lang/go/go.talon
================================================================================


function (Annette | init) [over]: "func init() {\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
495. Command lang/go/go.talon
================================================================================


function <user.text> [over]:
    insert("func ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))
    insert("(")
    sleep(100ms)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content)))))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string))))))

================================================================================
496. Command lang/go/go.talon
================================================================================


method <user.text> [over]:
    insert("meth ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))
    sleep(100ms)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content)))))))
      (expression
        (sleep_action
          (implicit_string))))))

================================================================================
497. Command lang/go/go.talon
================================================================================


state var: "var "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
498. Command lang/go/go.talon
================================================================================


variable [<user.text>] [over]:
    insert("var ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))
    # insert(" ")
    sleep(100ms)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content)))))))
      (comment)
      (expression
        (sleep_action
          (implicit_string))))))

================================================================================
499. Command lang/go/go.talon
================================================================================


of type [<user.text>] [over]:
    insert(" ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
500. Command lang/go/go.talon
================================================================================


# "set <user.text> [over]:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
501. Command lang/go/go.talon
================================================================================


#     insert(" := ")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
502. Command lang/go/go.talon
================================================================================


state break: "break"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
503. Command lang/go/go.talon
================================================================================


state (chan | channel): " chan "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
504. Command lang/go/go.talon
================================================================================


state go: "go "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
505. Command lang/go/go.talon
================================================================================


state if: "if "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
506. Command lang/go/go.talon
================================================================================


if <user.text> [over]:
  insert("if ")
  insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
507. Command lang/go/go.talon
================================================================================


spawn <user.text> [over]:
  insert("go ")
  insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
508. Command lang/go/go.talon
================================================================================


state else if: " else if "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
509. Command lang/go/go.talon
================================================================================


else if <user.text> [over]:
    insert(" else if ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
510. Command lang/go/go.talon
================================================================================


state else: " else "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
511. Command lang/go/go.talon
================================================================================


else <user.text> [over]:
    insert(" else {")
    key("enter")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
512. Command lang/go/go.talon
================================================================================


state while: "while "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
513. Command lang/go/go.talon
================================================================================


while <user.text> [over]:
    insert("while ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
514. Command lang/go/go.talon
================================================================================


state for: "for "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
515. Command lang/go/go.talon
================================================================================


for <user.text> [over]:
    insert("for ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
516. Command lang/go/go.talon
================================================================================


state for range: "forr "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
517. Command lang/go/go.talon
================================================================================


range <user.text> [over]:
    insert("forr ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
518. Command lang/go/go.talon
================================================================================


state format: "fmt"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
519. Command lang/go/go.talon
================================================================================


format <user.text> [over]:
    insert("fmt.")
    insert(user.formatted_text(text, "PUBLIC_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
520. Command lang/go/go.talon
================================================================================


state switch: "switch "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
521. Command lang/go/go.talon
================================================================================


switch <user.text> [over]:
    insert("switch ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
522. Command lang/go/go.talon
================================================================================


state select: "select "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
523. Command lang/go/go.talon
================================================================================


# "select <user.text>:insert("select "), insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE")]


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
524. Command lang/go/go.talon
================================================================================


state (const | constant): " const "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
525. Command lang/go/go.talon
================================================================================


constant <user.text> [over]:
    insert("const ")
    insert(user.formatted_text(text, "PUBLIC_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
526. Command lang/go/go.talon
================================================================================


state case: " case "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
527. Command lang/go/go.talon
================================================================================


state default: " default:"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
528. Command lang/go/go.talon
================================================================================


case <user.text> [over]:
    insert("case ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
529. Command lang/go/go.talon
================================================================================


state type: " type "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
530. Command lang/go/go.talon
================================================================================


type <user.text> [over]:
    insert("type ")
    insert(user.formatted_text(text, "PUBLIC_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
531. Command lang/go/go.talon
================================================================================


state true: " true "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
532. Command lang/go/go.talon
================================================================================


state false: " false "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
533. Command lang/go/go.talon
================================================================================


state (start | struct | struck):
  insert(" struct {")
  key("enter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
534. Command lang/go/go.talon
================================================================================


(struct | struck) <user.text> [over]:
    insert(" struct {")
    key("enter")
    insert(user.formatted_text(text, "PUBLIC_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
535. Command lang/go/go.talon
================================================================================


[state] empty interface: " interface{} "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
536. Command lang/go/go.talon
================================================================================


state interface:
  insert(" interface {")
  key("enter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
537. Command lang/go/go.talon
================================================================================


interface <user.text> [over]:
    insert(" interface {")
    key("enter")
    insert(user.formatted_text(text, "PUBLIC_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
538. Command lang/go/go.talon
================================================================================


state string: " string "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
539. Command lang/go/go.talon
================================================================================


[state] (int | integer | ant): "int"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
540. Command lang/go/go.talon
================================================================================


state slice: " []"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
541. Command lang/go/go.talon
================================================================================


slice of: "[]"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
542. Command lang/go/go.talon
================================================================================


[state] (no | nil): "nil"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
543. Command lang/go/go.talon
================================================================================


state (int | integer | ant) 64: " int64 "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
544. Command lang/go/go.talon
================================================================================


state tag:
  user.insert_between(" `", "`")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
545. Command lang/go/go.talon
================================================================================


field tag <user.text> [over]:
    user.insert_between(" `", "`")
    sleep(100ms)
    insert(user.formatted_text(text, "snake"))
    insert(" ")
    sleep(100ms)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content)))))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string))))))

================================================================================
546. Command lang/go/go.talon
================================================================================


state return: " return "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
547. Command lang/go/go.talon
================================================================================


return  <user.text> [over]:
    insert("return ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
548. Command lang/go/go.talon
================================================================================


map of string to string: " map[string]string "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
549. Command lang/go/go.talon
================================================================================


map of <user.text> [over]:
    insert("map[")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))
    key("right")
    sleep(100ms)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content)))))))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string))))))

================================================================================
550. Command lang/go/go.talon
================================================================================


receive: " <- "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
551. Command lang/go/go.talon
================================================================================


make: "make("


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
552. Command lang/go/go.talon
================================================================================


loggers [<user.text>] [over]:
    insert("logrus.")
    insert(user.formatted_text(text, "PUBLIC_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
553. Command lang/go/go.talon
================================================================================


length <user.text> [over]:
    insert("len(")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
554. Command lang/go/go.talon
================================================================================


append <user.text> [over]:
    insert("append(")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
555. Command lang/go/go.talon
================================================================================


state (air | err): "err"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
556. Command lang/go/go.talon
================================================================================


error: " err "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
557. Command lang/go/go.talon
================================================================================


loop over [<user.text>] [over]:
    insert("forr ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
558. Command lang/go/go.talon
================================================================================


item <user.text> [over]:
  insert(", ")
  insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
559. Command lang/go/go.talon
================================================================================


value <user.text> [over]:
    insert(": ")
    insert(": ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
560. Command lang/go/go.talon
================================================================================


address of [<user.text>] [over]:
    insert("&")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
561. Command lang/go/go.talon
================================================================================


pointer to [<user.text>] [over]:
    insert("*")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
562. Command lang/go/go.talon
================================================================================


swipe [<user.text>] [over]:
    key("right")
    insert(", ")
    insert(user.formatted_text(text, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
563. Command lang/proto/proto.talon
================================================================================


state message: "message "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
564. Command lang/proto/proto.talon
================================================================================


state package: "package "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
565. Command lang/proto/proto.talon
================================================================================


state reserved: "reserved "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
566. Command lang/proto/proto.talon
================================================================================


state enum: "enum "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
567. Command lang/proto/proto.talon
================================================================================


op equals: " = "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
568. Command lang/proto/proto.talon
================================================================================


state import: "import "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
569. Command lang/proto/proto.talon
================================================================================


state import public: "import public "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
570. Command lang/proto/proto.talon
================================================================================


state option: "option "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
571. Command lang/proto/proto.talon
================================================================================


state repeated: "repeated "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
572. Command lang/proto/proto.talon
================================================================================


type {user.code_type}: "{code_type}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
573. Command lang/proto/proto.talon
================================================================================


repeated type {user.code_type}: "repeated {code_type}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
574. Command lang/python/python.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
575. Command lang/python/python.talon
================================================================================


tag(): user.code_object_oriented


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
576. Command lang/python/python.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
577. Command lang/python/python.talon
================================================================================


tag(): user.code_comment_documentation


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
578. Command lang/python/python.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
579. Command lang/python/python.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
580. Command lang/python/python.talon
================================================================================


tag(): user.code_functions


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
581. Command lang/python/python.talon
================================================================================


tag(): user.code_functions_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
582. Command lang/python/python.talon
================================================================================


tag(): user.code_keywords


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
583. Command lang/python/python.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
584. Command lang/python/python.talon
================================================================================


tag(): user.code_libraries_gui


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
585. Command lang/python/python.talon
================================================================================


tag(): user.code_operators_array


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
586. Command lang/python/python.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
587. Command lang/python/python.talon
================================================================================


tag(): user.code_operators_bitwise


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
588. Command lang/python/python.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
589. Command lang/python/python.talon
================================================================================


settings():
    user.code_private_function_formatter = "SNAKE_CASE"
    user.code_protected_function_formatter = "SNAKE_CASE"
    user.code_public_function_formatter = "SNAKE_CASE"
    user.code_private_variable_formatter = "SNAKE_CASE"
    user.code_protected_variable_formatter = "SNAKE_CASE"
    user.code_public_variable_formatter = "SNAKE_CASE"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
590. Command lang/python/python.talon
================================================================================


dunder in it: "__init__"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
591. Command lang/python/python.talon
================================================================================


state (def | deaf | deft): "def "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
592. Command lang/python/python.talon
================================================================================


state try: "try:\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
593. Command lang/python/python.talon
================================================================================


state except: "except "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
594. Command lang/python/python.talon
================================================================================


state raise: "raise "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
595. Command lang/python/python.talon
================================================================================


self taught: "self."


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
596. Command lang/python/python.talon
================================================================================


pie test: "pytest"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
597. Command lang/python/python.talon
================================================================================


state past: "pass"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
598. Command lang/python/python.talon
================================================================================


raise {user.python_exception}: user.insert_between("raise {python_exception}(", ")")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))
            (string
              (string_content))))))))

================================================================================
599. Command lang/python/python.talon
================================================================================


except {user.python_exception}: "except {python_exception}:"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
600. Command lang/python/python.talon
================================================================================


dock string:
    user.code_comment_documentation()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
601. Command lang/python/python.talon
================================================================================


dock {user.python_docstring_fields}:
    insert("{python_docstring_fields}")
    edit.left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
602. Command lang/python/python.talon
================================================================================


dock type {user.code_type}:
    user.insert_between(":type ", ": {code_type}")
    user.insert_between(":type ", ": {code_type}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
603. Command lang/python/python.talon
================================================================================


dock returns type {user.code_type}:
    user.insert_between(":rtype ", ": {code_type}")
    user.insert_between(":rtype ", ": {code_type}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
604. Command lang/python/python.talon
================================================================================


toggle imports: user.code_toggle_libraries()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
605. Command lang/python/python.talon
================================================================================


import <user.code_libraries>:
    user.code_insert_library(code_libraries, "")
    key(end enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
606. Command lang/python/python.talon
================================================================================


from import: user.insert_between("from ", " import ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
607. Command lang/css/css.talon
================================================================================


tag(): user.code_comment_block_c_like


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
608. Command lang/css/css.talon
================================================================================


tag(): user.code_functions_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
609. Command lang/css/css.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
610. Command lang/css/css.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
611. Command lang/css/css.talon
================================================================================


settings():
    user.code_public_variable_formatter = "DASH_SEPARATED"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
612. Command lang/css/css.talon
================================================================================


block: user.code_block()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
613. Command lang/css/css.talon
================================================================================


attribute [<user.text>]:
    name = user.formatted_text(text or "", "DASH_SEPARATED")
    user.insert_between("[{name}", "]")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))
            (string
              (string_content))))))))

================================================================================
614. Command lang/css/css.talon
================================================================================


prop <user.text>:
    name = user.formatted_text(text, "DASH_SEPARATED")
    user.insert_between("{name}: ", ";")
    user.insert_between("{name}: ", ";")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))
            (string
              (string_content))))))))

================================================================================
615. Command lang/css/css.talon
================================================================================


rule <user.text>:
    name = user.formatted_text(text, "DASH_SEPARATED")
    insert("{name}: ")
    insert("{name}: ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
616. Command lang/css/css.talon
================================================================================


value <user.number_string> [{user.css_unit}]:
    "{number_string}{css_unit or ''}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (list
            (identifier)))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
617. Command lang/css/css.talon
================================================================================


value <user.number_string> point <digit_string> [{user.css_unit}]:
    "{number_string}.{digit_string}{css_unit or ''}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))
        (optional
          (list
            (identifier)))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
618. Command lang/css/css.talon
================================================================================


(value|state) {user.css_global_value}: "{css_global_value}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
619. Command lang/css/css.talon
================================================================================


value <user.text>: user.insert_formatted(text, "DASH_SEPARATED")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string
              (string_content))))))))

================================================================================
620. Command lang/css/css.talon
================================================================================


variable <user.text>:
    name = user.formatted_text(text, settings.get("user.code_public_variable_formatter"))
    insert("var(--{name})")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (action
              (identifier)
              (argument_list
                (string
                  (string_content)))))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
621. Command lang/css/css.talon
================================================================================


op var: user.insert_between("var(--", ")")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
622. Command lang/css/css.talon
================================================================================


at {user.css_at_rule}: "@{css_at_rule} "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
623. Command lang/css/css.talon
================================================================================


unit {user.css_unit}: insert(css_unit)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
624. Command lang/css/css.talon
================================================================================


[value] current color: "currentColor"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
625. Command lang/css/css.talon
================================================================================


op important: " !important"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
626. Command lang/markdown/markdown.talon
================================================================================


level one: "# "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
627. Command lang/markdown/markdown.talon
================================================================================


level two: "## "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
628. Command lang/markdown/markdown.talon
================================================================================


level three: "### "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
629. Command lang/markdown/markdown.talon
================================================================================


level four: "#### "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
630. Command lang/markdown/markdown.talon
================================================================================


level five: "##### "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
631. Command lang/markdown/markdown.talon
================================================================================


level six: "###### "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
632. Command lang/markdown/markdown.talon
================================================================================


{user.markdown_code_block_language} block:
    "```{markdown_code_block_language}"
    key(enter:2)
    key(enter:2)
    "```"
    key(up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (list
          (identifier))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
633. Command lang/typescript/typescript.talon
================================================================================


tag(): user.javascript


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
634. Command lang/typescript/typescriptreact.talon
================================================================================


tag(): user.typescript


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
635. Command lang/typescript/typescriptreact.talon
================================================================================


tag(): user.javascriptreact


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
636. Command lang/rust/rust.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
637. Command lang/rust/rust.talon
================================================================================


tag(): user.code_comment_block_c_like


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
638. Command lang/rust/rust.talon
================================================================================


tag(): user.code_comment_documentation


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
639. Command lang/rust/rust.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
640. Command lang/rust/rust.talon
================================================================================


tag(): user.code_object_oriented


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
641. Command lang/rust/rust.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
642. Command lang/rust/rust.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
643. Command lang/rust/rust.talon
================================================================================


tag(): user.code_functions


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
644. Command lang/rust/rust.talon
================================================================================


tag(): user.code_functions_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
645. Command lang/rust/rust.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
646. Command lang/rust/rust.talon
================================================================================


tag(): user.code_libraries_gui


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
647. Command lang/rust/rust.talon
================================================================================


tag(): user.code_operators_array


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
648. Command lang/rust/rust.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
649. Command lang/rust/rust.talon
================================================================================


tag(): user.code_operators_bitwise


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
650. Command lang/rust/rust.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
651. Command lang/rust/rust.talon
================================================================================


settings():
    user.code_private_function_formatter = "SNAKE_CASE"
    user.code_protected_function_formatter = "SNAKE_CASE"
    user.code_public_function_formatter = "SNAKE_CASE"
    user.code_private_variable_formatter = "SNAKE_CASE"
    user.code_protected_variable_formatter = "SNAKE_CASE"
    user.code_public_variable_formatter = "SNAKE_CASE"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
652. Command lang/rust/rust.talon
================================================================================


state unsafe: "unsafe "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
653. Command lang/rust/rust.talon
================================================================================


unsafe block: user.code_state_unsafe()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
654. Command lang/rust/rust.talon
================================================================================


state (struct | structure) <user.text>:
    insert("struct ")
    insert(user.formatted_text(text, "PUBLIC_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
655. Command lang/rust/rust.talon
================================================================================


state enum <user.text>:
    insert("enum ")
    insert(user.formatted_text(text, "PUBLIC_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
656. Command lang/rust/rust.talon
================================================================================


toggle use: user.code_toggle_libraries()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
657. Command lang/rust/rust.talon
================================================================================


borrow: "&"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
658. Command lang/rust/rust.talon
================================================================================


borrow mutable: "&mut "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
659. Command lang/rust/rust.talon
================================================================================


state (pub | public): "pub "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
660. Command lang/rust/rust.talon
================================================================================


state (pub | public) crate: "pub(crate) "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
661. Command lang/rust/rust.talon
================================================================================


state (dyn | dynamic): "dyn "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
662. Command lang/rust/rust.talon
================================================================================


state constant: "const "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
663. Command lang/rust/rust.talon
================================================================================


state (funk | func | function): "fn "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
664. Command lang/rust/rust.talon
================================================================================


state (imp | implements): "impl "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
665. Command lang/rust/rust.talon
================================================================================


state let mute: "let mut "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
666. Command lang/rust/rust.talon
================================================================================


state let: "let "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
667. Command lang/rust/rust.talon
================================================================================


state (mute | mutable): "mut "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
668. Command lang/rust/rust.talon
================================================================================


state (mod | module): "mod "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
669. Command lang/rust/rust.talon
================================================================================


state ref (mute | mutable): "ref mut "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
670. Command lang/rust/rust.talon
================================================================================


state ref: "ref "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
671. Command lang/rust/rust.talon
================================================================================


state trait: "trait "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
672. Command lang/rust/rust.talon
================================================================================


state match: user.code_state_switch()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
673. Command lang/rust/rust.talon
================================================================================


state (some | sum): "Some"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
674. Command lang/rust/rust.talon
================================================================================


state static: "static "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
675. Command lang/rust/rust.talon
================================================================================


self taught: "self."


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
676. Command lang/rust/rust.talon
================================================================================


state use: user.code_import()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
677. Command lang/rust/rust.talon
================================================================================


use <user.code_libraries>:
    user.code_insert_library(code_libraries, "")
    key(semicolon enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
678. Command lang/rust/rust.talon
================================================================================


state if let some: user.code_insert_if_let_some()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
679. Command lang/rust/rust.talon
================================================================================


state if let error: user.code_insert_if_let_error()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
680. Command lang/rust/rust.talon
================================================================================


is some: user.code_insert_is_not_null()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
681. Command lang/rust/rust.talon
================================================================================


implement (struct | structure): user.code_state_implements()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
682. Command lang/rust/rust.talon
================================================================================


is implemented trait {user.code_trait}: user.code_insert_trait_annotation(code_trait)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
683. Command lang/rust/rust.talon
================================================================================


is implemented trait: ": impl "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
684. Command lang/rust/rust.talon
================================================================================


returns implemented trait {user.code_trait}: user.code_insert_return_trait(code_trait)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
685. Command lang/rust/rust.talon
================================================================================


returns implemented trait: " -> impl "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
686. Command lang/rust/rust.talon
================================================================================


trait {user.code_trait}: insert("{code_trait}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
687. Command lang/rust/rust.talon
================================================================================


implemented trait {user.code_trait}: insert("impl {code_trait}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
688. Command lang/rust/rust.talon
================================================================================


dynamic trait {user.code_trait}: insert("dyn {code_trait}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
689. Command lang/rust/rust.talon
================================================================================


macro {user.code_macros}:
    user.code_insert_macro(code_macros, "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string)))))))

================================================================================
690. Command lang/rust/rust.talon
================================================================================


macro wrap {user.code_macros}:
    user.code_insert_macro(code_macros, edit.selected_text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (action
              (identifier)
              (argument_list))))))))

================================================================================
691. Command lang/rust/rust.talon
================================================================================


block dock comment: user.code_comment_documentation_block()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
692. Command lang/rust/rust.talon
================================================================================


inner dock comment: user.code_comment_documentation_inner()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
693. Command lang/rust/rust.talon
================================================================================


inner block dock comment: user.code_comment_documentation_block_inner()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
694. Command lang/r/r.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
695. Command lang/r/r.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
696. Command lang/r/r.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
697. Command lang/r/r.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
698. Command lang/r/r.talon
================================================================================


tag(): user.code_functions


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
699. Command lang/r/r.talon
================================================================================


tag(): user.code_functions_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
700. Command lang/r/r.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
701. Command lang/r/r.talon
================================================================================


tag(): user.code_libraries_gui


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
702. Command lang/r/r.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
703. Command lang/r/r.talon
================================================================================


tag(): user.code_operators_bitwise


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
704. Command lang/r/r.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
705. Command lang/r/r.talon
================================================================================


settings():
    user.code_private_function_formatter = "SNAKE_CASE"
    user.code_protected_function_formatter = "SNAKE_CASE"
    user.code_public_function_formatter = "SNAKE_CASE"
    user.code_private_variable_formatter = "SNAKE_CASE"
    user.code_protected_variable_formatter = "SNAKE_CASE"
    user.code_public_variable_formatter = "SNAKE_CASE"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
706. Command lang/r/r.talon
================================================================================


# NOTE: migrated from generic as it is only use here


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
707. Command lang/r/r.talon
================================================================================


(op | is) in: " %in% "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
708. Command lang/r/r.talon
================================================================================


toggle library: user.code_toggle_libraries()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
709. Command lang/r/r.talon
================================================================================


library <user.code_libraries>:
    user.code_insert_library(code_libraries, "")
    key(end enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
710. Command lang/r/r.talon
================================================================================


(chain|pipe that):
    key(end)
    " %>%"
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
711. Command lang/r/r.talon
================================================================================


state na:
    insert("NA")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
712. Command lang/r/r.talon
================================================================================


# TODO: migrate to function tag


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
713. Command lang/r/r.talon
================================================================================


^function define <user.text>$: user.code_private_function(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
714. Command lang/r/r.talon
================================================================================


named arg {user.code_parameter_name}: user.code_insert_named_argument(code_parameter_name)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
715. Command lang/java/java.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
716. Command lang/java/java.talon
================================================================================


tag(): user.code_object_oriented


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
717. Command lang/java/java.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
718. Command lang/java/java.talon
================================================================================


tag(): user.code_comment_block_c_like


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
719. Command lang/java/java.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
720. Command lang/java/java.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
721. Command lang/java/java.talon
================================================================================


tag(): user.code_functions


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
722. Command lang/java/java.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
723. Command lang/java/java.talon
================================================================================


tag(): user.code_operators_array


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
724. Command lang/java/java.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
725. Command lang/java/java.talon
================================================================================


tag(): user.code_operators_bitwise


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
726. Command lang/java/java.talon
================================================================================


tag(): user.code_operators_lambda


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
727. Command lang/java/java.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
728. Command lang/java/java.talon
================================================================================


settings():
    user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
    user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
    user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
729. Command lang/java/java.talon
================================================================================


boxed [type] {user.java_boxed_type}:
    insert(user.java_boxed_type + " ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string
                (string_content)))))))))

================================================================================
730. Command lang/java/java.talon
================================================================================


generic [type] {user.java_generic_data_structure}:
    user.insert_between(java_generic_data_structure + "<", ">")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string
                (string_content)))
            (string
              (string_content))))))))

================================================================================
731. Command lang/java/java.talon
================================================================================


type {user.code_type} array:
    insert(user.code_type)
    user.code_operator_subscript()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
732. Command lang/java/java.talon
================================================================================


[state] {user.java_modifier}:
    insert(user.java_modifier + " ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string
                (string_content)))))))))

================================================================================
733. Command lang/java/java.talon
================================================================================


op array:
    user.code_operator_subscript()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
734. Command lang/java/java.talon
================================================================================


op new:
    insert("new ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
735. Command lang/php/php.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
736. Command lang/php/php.talon
================================================================================


tag(): user.code_object_oriented


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
737. Command lang/php/php.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
738. Command lang/php/php.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
739. Command lang/php/php.talon
================================================================================


tag(): user.code_comment_block


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
740. Command lang/php/php.talon
================================================================================


tag(): user.code_comment_documentation


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
741. Command lang/php/php.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
742. Command lang/php/php.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
743. Command lang/php/php.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
744. Command lang/php/php.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
745. Command lang/php/php.talon
================================================================================


tag(): user.code_functions


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
746. Command lang/php/php.talon
================================================================================


settings():
    user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
    user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
    user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
747. Command lang/php/php.talon
================================================================================


(op | is) loosely equal: " == "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
748. Command lang/php/php.talon
================================================================================


(op | is) loosely not equal: " != "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
749. Command lang/php/php.talon
================================================================================


state try: "try {\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
750. Command lang/php/php.talon
================================================================================


state catch: "catch (\\Throwable $exception) {\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
751. Command lang/php/php.talon
================================================================================


var <phrase> [over]:
    insert("$")
    insert(user.formatted_text(phrase, "PRIVATE_CAMEL_CASE"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
752. Command lang/tags/comment_block.talon
================================================================================


block comment: user.code_comment_block()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
753. Command lang/tags/comment_block.talon
================================================================================


block comment line <user.text> over:
    #todo: this should probably be a single function once
    #todo: this should probably be a single function once
    #.talon supports implementing actions with parameters?
    edit.line_start()
    user.code_comment_block()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier))
        (word)))
    (comment)
    (comment)
    (comment)
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
754. Command lang/tags/comment_block.talon
================================================================================


block comment <user.text>$:
    #todo: this should probably be a single function once
    #todo: this should probably be a single function once
    #.talon supports implementing actions with parameters?
    user.code_comment_block()
    insert(user.text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (comment)
    (comment)
    (comment)
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
755. Command lang/tags/comment_block.talon
================================================================================


open block comment:
    user.code_comment_block_prefix()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
756. Command lang/tags/comment_block.talon
================================================================================


close block comment:
    user.code_comment_block_suffix()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
757. Command lang/tags/comment_documentation.talon
================================================================================


dock comment: user.code_comment_documentation()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
758. Command lang/tags/keywords.talon
================================================================================


keyword (<user.code_keyword>+): user.code_keyword(code_keyword_list)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (repeat1
            (capture
              (identifier))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
759. Command lang/tags/functions_common.talon
================================================================================


toggle funk: user.code_toggle_functions()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
760. Command lang/tags/functions_common.talon
================================================================================


funk <user.code_common_function>:
    user.code_insert_function(code_common_function, "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string)))))))

================================================================================
761. Command lang/tags/functions_common.talon
================================================================================


funk cell <number>:
    user.code_select_function(number - 1, "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))
            (string)))))))

================================================================================
762. Command lang/tags/functions_common.talon
================================================================================


funk wrap <user.code_common_function>:
    user.code_insert_function(code_common_function, edit.selected_text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (action
              (identifier)
              (argument_list))))))))

================================================================================
763. Command lang/tags/functions_common.talon
================================================================================


funk wrap <number>:
    user.code_select_function(number - 1, edit.selected_text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))
            (action
              (identifier)
              (argument_list))))))))

================================================================================
764. Command lang/tags/comment_line.talon
================================================================================


comment: user.code_comment_line_prefix()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
765. Command lang/tags/comment_line.talon
================================================================================


comment line <user.text> over:
    #todo: this should probably be a single function once
    #todo: this should probably be a single function once
    #.talon supports implementing actions with parameters?
    edit.line_start()
    user.code_comment_line_prefix()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (word)))
    (comment)
    (comment)
    (comment)
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
766. Command lang/tags/comment_line.talon
================================================================================


comment <user.text>$:
    #todo: this should probably be a single function once
    #todo: this should probably be a single function once
    #.talon supports implementing actions with parameters?
    user.code_comment_line_prefix()
    insert(user.text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (comment)
    (comment)
    (comment)
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
767. Command lang/tags/data_null.talon
================================================================================


state (no | none | nil | null): user.code_insert_null()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
768. Command lang/tags/data_null.talon
================================================================================


is not (none|null): user.code_insert_is_not_null()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
769. Command lang/tags/data_null.talon
================================================================================


is (none|null): user.code_insert_is_null()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
770. Command lang/tags/object_oriented.talon
================================================================================


self dot:
      user.code_self()
      user.code_operator_object_accessor()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
771. Command lang/tags/object_oriented.talon
================================================================================


state self:
      user.code_self()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
772. Command lang/tags/object_oriented.talon
================================================================================


state class:
      user.code_define_class()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
773. Command lang/tags/data_bool.talon
================================================================================


state true: user.code_insert_true()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
774. Command lang/tags/data_bool.talon
================================================================================


state false: user.code_insert_false()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
775. Command lang/tags/library_gui_open.talon
================================================================================


toggle libraries close: user.code_toggle_libraries()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
776. Command lang/tags/operators_lambda.talon
================================================================================


# In many languages, anonymous functions aren't merely infix syntax:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
777. Command lang/tags/operators_lambda.talon
================================================================================


op lambda: user.code_operator_lambda()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
778. Command lang/tags/operators_array.talon
================================================================================


op subscript: user.code_operator_subscript()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
779. Command lang/tags/operators_math.talon
================================================================================


op (minus | subtract): user.code_operator_subtraction()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
780. Command lang/tags/operators_math.talon
================================================================================


op (plus | add): user.code_operator_addition()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
781. Command lang/tags/operators_math.talon
================================================================================


op (times | multiply): user.code_operator_multiplication()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
782. Command lang/tags/operators_math.talon
================================================================================


op divide: user.code_operator_division()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
783. Command lang/tags/operators_math.talon
================================================================================


op mod: user.code_operator_modulo()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
784. Command lang/tags/operators_math.talon
================================================================================


(op (power | exponent) | to the power [of]): user.code_operator_exponent()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (parenthesized_rule
              (choice
                (word)
                (word))))
          (seq
            (word)
            (word)
            (word)
            (optional
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
785. Command lang/tags/operators_math.talon
================================================================================


(op | is) equal: user.code_operator_equal()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
786. Command lang/tags/operators_math.talon
================================================================================


(op | is) not equal: user.code_operator_not_equal()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
787. Command lang/tags/operators_math.talon
================================================================================


(op | is) (greater | more): user.code_operator_greater_than()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
788. Command lang/tags/operators_math.talon
================================================================================


(op | is) (less | below) [than]: user.code_operator_less_than()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
789. Command lang/tags/operators_math.talon
================================================================================


(op | is) greater [than] or equal: user.code_operator_greater_than_or_equal_to()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
790. Command lang/tags/operators_math.talon
================================================================================


(op | is) less [than] or equal: user.code_operator_less_than_or_equal_to()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
791. Command lang/tags/operators_math.talon
================================================================================


(op | logical) and: user.code_operator_and()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
792. Command lang/tags/operators_math.talon
================================================================================


(op | logical) or: user.code_operator_or()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
793. Command lang/tags/operators_math.talon
================================================================================


(op | is) in: user.code_operator_in()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
794. Command lang/tags/operators_math.talon
================================================================================


(op | is) not in: user.code_operator_not_in()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
795. Command lang/tags/operators_math.talon
================================================================================


# TODO: This operator should either be abstracted into a function or removed.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
796. Command lang/tags/operators_math.talon
================================================================================


(op | pad) colon: " : "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
797. Command lang/tags/libraries.talon
================================================================================


state import: user.code_import()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
798. Command lang/tags/functions_common_gui_active.talon
================================================================================


toggle funk: user.code_toggle_functions()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
799. Command lang/tags/functions.talon
================================================================================


# order: private pro pub static


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
800. Command lang/tags/functions.talon
================================================================================


# (funky is added here for searchability) and calls the function on the right:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
801. Command lang/tags/functions.talon
================================================================================


^{user.code_function_modifier}* funky <user.text>$:
  user.code_modified_function(code_function_modifier_list or 0, text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (repeat
          (list
            (identifier)))
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))
            (variable
              (identifier))))))))

================================================================================
802. Command lang/tags/functions.talon
================================================================================


is type <user.code_type>: user.code_insert_type_annotation(code_type)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
803. Command lang/tags/functions.talon
================================================================================


returns [type] <user.code_type>: user.code_insert_return_type(code_type)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
804. Command lang/tags/functions.talon
================================================================================


type <user.code_type>: insert(code_type)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
805. Command lang/tags/operators_assignment.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
806. Command lang/tags/operators_assignment.talon
================================================================================


tag(): user.code_operators_bitwise


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
807. Command lang/tags/operators_assignment.talon
================================================================================


op (equals | assign): user.code_operator_assignment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
808. Command lang/tags/operators_assignment.talon
================================================================================


op (minus | subtract) equals: user.code_operator_subtraction_assignment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
809. Command lang/tags/operators_assignment.talon
================================================================================


op (plus | add) equals: user.code_operator_addition_assignment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
810. Command lang/tags/operators_assignment.talon
================================================================================


op (times | multiply) equals: user.code_operator_multiplication_assignment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
811. Command lang/tags/operators_assignment.talon
================================================================================


op divide equals: user.code_operator_division_assignment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
812. Command lang/tags/operators_assignment.talon
================================================================================


op mod equals: user.code_operator_modulo_assignment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
813. Command lang/tags/operators_assignment.talon
================================================================================


[op] increment: user.code_operator_increment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
814. Command lang/tags/operators_assignment.talon
================================================================================


(op | logical | bitwise) (ex | exclusive) or equals: user.code_operator_bitwise_exclusive_or_equals()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
815. Command lang/tags/operators_assignment.talon
================================================================================


[(op | logical | bitwise)] (left shift | shift left) equals: user.code_operator_bitwise_left_shift_equals()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (parenthesized_rule
            (choice
              (word)
              (word)
              (word))))
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (seq
              (word)
              (word))))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
816. Command lang/tags/operators_assignment.talon
================================================================================


[(op | logical | bitwise)] (left right | shift right) equals: user.code_operator_bitwise_right_shift_equals()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (parenthesized_rule
            (choice
              (word)
              (word)
              (word))))
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (seq
              (word)
              (word))))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
817. Command lang/tags/imperative.talon
================================================================================


block: user.code_block()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
818. Command lang/tags/imperative.talon
================================================================================


state if: user.code_state_if()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
819. Command lang/tags/imperative.talon
================================================================================


state else if: user.code_state_else_if()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
820. Command lang/tags/imperative.talon
================================================================================


state else: user.code_state_else()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
821. Command lang/tags/imperative.talon
================================================================================


state while: user.code_state_while()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
822. Command lang/tags/imperative.talon
================================================================================


state loop: user.code_state_infinite_loop()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
823. Command lang/tags/imperative.talon
================================================================================


state for: user.code_state_for()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
824. Command lang/tags/imperative.talon
================================================================================


state for in: user.code_state_for_each()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
825. Command lang/tags/imperative.talon
================================================================================


state switch: user.code_state_switch()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
826. Command lang/tags/imperative.talon
================================================================================


state case: user.code_state_case()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
827. Command lang/tags/imperative.talon
================================================================================


state do: user.code_state_do()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
828. Command lang/tags/imperative.talon
================================================================================


state goto: user.code_state_go_to()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
829. Command lang/tags/imperative.talon
================================================================================


state return: user.code_state_return()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
830. Command lang/tags/imperative.talon
================================================================================


state break: user.code_break()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
831. Command lang/tags/imperative.talon
================================================================================


state next: user.code_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
832. Command lang/tags/operators_bitwise.talon
================================================================================


[op] bitwise and: user.code_operator_bitwise_and()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
833. Command lang/tags/operators_bitwise.talon
================================================================================


[op] bitwise or: user.code_operator_bitwise_or()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
834. Command lang/tags/operators_bitwise.talon
================================================================================


# TODO: split these out into separate logical and bitwise operator commands


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
835. Command lang/tags/operators_bitwise.talon
================================================================================


(op | logical | bitwise) (ex | exclusive) or: user.code_operator_bitwise_exclusive_or()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
836. Command lang/tags/operators_bitwise.talon
================================================================================


(op | logical | bitwise) (left shift | shift left): user.code_operator_bitwise_left_shift()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
837. Command lang/tags/operators_bitwise.talon
================================================================================


(op | logical | bitwise) (right shift | shift right): user.code_operator_bitwise_right_shift()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
838. Command lang/tags/libraries_gui.talon
================================================================================


# NOTE: This file does not define any commands, as the commands vary from


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
839. Command lang/tags/libraries_gui.talon
================================================================================


# TODO: If this ever becomes possible, we should abstract over these commands


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
840. Command lang/tags/libraries_gui.talon
================================================================================




--------------------------------------------------------------------------------

(source_file)

================================================================================
841. Command lang/tags/operators_pointer.talon
================================================================================


op dereference: user.code_operator_indirection()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
842. Command lang/tags/operators_pointer.talon
================================================================================


op address of: user.code_operator_address_of()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
843. Command lang/tags/operators_pointer.talon
================================================================================


op arrow: user.code_operator_structure_dereference()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
844. Command lang/scala/scala.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
845. Command lang/scala/scala.talon
================================================================================


tag(): user.code_object_oriented


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
846. Command lang/scala/scala.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
847. Command lang/scala/scala.talon
================================================================================


tag(): user.code_comment_block_c_like


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
848. Command lang/scala/scala.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
849. Command lang/scala/scala.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
850. Command lang/scala/scala.talon
================================================================================


tag(): user.code_functions


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
851. Command lang/scala/scala.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
852. Command lang/scala/scala.talon
================================================================================


tag(): user.code_operators_array


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
853. Command lang/scala/scala.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
854. Command lang/scala/scala.talon
================================================================================


tag(): user.code_operators_bitwise


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
855. Command lang/scala/scala.talon
================================================================================


tag(): user.code_operators_lambda


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
856. Command lang/scala/scala.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
857. Command lang/scala/scala.talon
================================================================================


settings():
    user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
    user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
    user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
858. Command lang/scala/scala.talon
================================================================================


state {user.scala_modifier}:
    insert("{user.scala_modifier} ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
859. Command lang/scala/scala.talon
================================================================================


state {user.scala_keyword}:
    insert("{scala_keyword} ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
860. Command lang/scala/scala.talon
================================================================================


op right arrow: " -> "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
861. Command lang/scala/scala.talon
================================================================================


op left arrow: " <- "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
862. Command lang/scala/scala.talon
================================================================================


op plus plus: " ++ "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
863. Command lang/scala/scala.talon
================================================================================


op subtype: " <: "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
864. Command lang/scala/scala.talon
================================================================================


state match: user.code_state_switch()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
865. Command lang/scala/scala.talon
================================================================================


block string:
  insert('""""""')
  key("left left left")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
866. Command lang/batch/batch.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
867. Command lang/batch/batch.talon
================================================================================


soft exit: "exit /B 1\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
868. Command lang/batch/batch.talon
================================================================================


hard exit: "exit 1\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
869. Command lang/batch/batch.talon
================================================================================


echo: "echo "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
870. Command lang/batch/batch.talon
================================================================================


echo off: "@echo off\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
871. Command lang/batch/batch.talon
================================================================================


call: "call "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
872. Command lang/batch/batch.talon
================================================================================


call shell: "call cmd \\c "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence)
          (string_content))))))

================================================================================
873. Command lang/batch/batch.talon
================================================================================


if error: "if errorlevel 1 "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
874. Command lang/batch/batch.talon
================================================================================


go to: "goto "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
875. Command lang/batch/batch.talon
================================================================================


delayed expansion: "SETLOCAL EnableDelayedExpansion\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
876. Command lang/batch/batch.talon
================================================================================


arg <number_small>: "%{number_small}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
877. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
878. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_object_oriented


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
879. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
880. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_comment_block_c_like


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
881. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
882. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
883. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_functions


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
884. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_functions_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
885. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
886. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_operators_array


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
887. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
888. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_operators_bitwise


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
889. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_operators_lambda


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
890. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
891. Command lang/csharp/csharp.talon
================================================================================


tag(): user.code_operators_pointer


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
892. Command lang/csharp/csharp.talon
================================================================================


settings():
    user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_protected_function_formatter = "PUBLIC_CAMEL_CASE"
    user.code_public_function_formatter = "PUBLIC_CAMEL_CASE"
    user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
    user.code_protected_variable_formatter = "PUBLIC_CAMEL_CASE"
    user.code_public_variable_formatter = "PUBLIC_CAMEL_CASE"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
893. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
894. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_object_oriented


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
895. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
896. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_comment_block_c_like


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
897. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
898. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
899. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_functions


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
900. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_functions_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
901. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_keywords


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
902. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
903. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_operators_array


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
904. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
905. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_operators_bitwise


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
906. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_operators_lambda


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
907. Command lang/javascript/javascript.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
908. Command lang/javascript/javascript.talon
================================================================================


settings():
    user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
    user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
    user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
    user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
909. Command lang/javascript/javascript.talon
================================================================================


(op | is) strict equal: " === "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
910. Command lang/javascript/javascript.talon
================================================================================


(op | is) strict not equal: " !== "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
911. Command lang/javascript/javascript.talon
================================================================================


op null else: " ?? "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
912. Command lang/javascript/javascript.talon
================================================================================


state const: "const "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
913. Command lang/javascript/javascript.talon
================================================================================


state let: "let "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
914. Command lang/javascript/javascript.talon
================================================================================


state var: "var "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
915. Command lang/javascript/javascript.talon
================================================================================


state export: "export "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
916. Command lang/javascript/javascript.talon
================================================================================


state async: "async "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
917. Command lang/javascript/javascript.talon
================================================================================


state await: "await "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
918. Command lang/javascript/javascript.talon
================================================================================


dot {user.code_common_member_function}:
    user.insert_between(".{code_common_member_function}(", ")")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))
            (string
              (string_content))))))))

================================================================================
919. Command lang/javascript/javascript.talon
================================================================================


state map: app.notify('ERROR: Command deprecated; please use "dot map"')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
920. Command lang/javascript/javascript.talon
================================================================================


state filter: app.notify('ERROR: Command deprecated; please use "dot filter"')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
921. Command lang/javascript/javascript.talon
================================================================================


state reduce: app.notify('ERROR: Command deprecated; please use "dot reduce"')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
922. Command lang/javascript/javascript.talon
================================================================================


state spread: "..."


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
923. Command lang/javascript/javascript.talon
================================================================================


from import:
    user.insert_between(' from  "', '"')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
924. Command lang/javascript/javascriptreact.talon
================================================================================


tag(): user.javascript


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
925. Command lang/c/c.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
926. Command lang/c/c.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
927. Command lang/c/c.talon
================================================================================


tag(): user.code_comment_block_c_like


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
928. Command lang/c/c.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
929. Command lang/c/c.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
930. Command lang/c/c.talon
================================================================================


tag(): user.code_functions


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
931. Command lang/c/c.talon
================================================================================


tag(): user.code_functions_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
932. Command lang/c/c.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
933. Command lang/c/c.talon
================================================================================


tag(): user.code_libraries_gui


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
934. Command lang/c/c.talon
================================================================================


tag(): user.code_operators_array


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
935. Command lang/c/c.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
936. Command lang/c/c.talon
================================================================================


tag(): user.code_operators_bitwise


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
937. Command lang/c/c.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
938. Command lang/c/c.talon
================================================================================


tag(): user.code_operators_pointer


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
939. Command lang/c/c.talon
================================================================================


settings():
    user.code_private_function_formatter = "SNAKE_CASE"
    user.code_protected_function_formatter = "SNAKE_CASE"
    user.code_public_function_formatter = "SNAKE_CASE"
    user.code_private_variable_formatter = "SNAKE_CASE"
    user.code_protected_variable_formatter = "SNAKE_CASE"
    user.code_public_variable_formatter = "SNAKE_CASE"
    # whether or not to use uint_8 style datatypes
    #    user.use_stdint_datatypes = 1


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (comment)
      (comment))))

================================================================================
940. Command lang/c/c.talon
================================================================================


# NOTE: migrated from generic, as they were only used here, though once cpp support is added, perhaps these should be migrated to a tag together with the commands below


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
941. Command lang/c/c.talon
================================================================================


state include:
    insert('#include ')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
942. Command lang/c/c.talon
================================================================================


state include system:
    user.insert_between("#include <", ">")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
943. Command lang/c/c.talon
================================================================================


state include local:
    user.insert_between('#include "', '"')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
944. Command lang/c/c.talon
================================================================================


state type deaf:
    insert('typedef ')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
945. Command lang/c/c.talon
================================================================================


state type deaf struct:
    insert('typedef struct')
    insert('{\n\n}')
    edit.up()
    key('tab')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_escape_sequence)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
946. Command lang/c/c.talon
================================================================================


state define: "#define "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
947. Command lang/c/c.talon
================================================================================


state undefine: "#undef "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
948. Command lang/c/c.talon
================================================================================


state if define: "#ifdef "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
949. Command lang/c/c.talon
================================================================================


state pre if: "#if "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
950. Command lang/c/c.talon
================================================================================


state error: "#error "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
951. Command lang/c/c.talon
================================================================================


state pre else if: "#elif "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
952. Command lang/c/c.talon
================================================================================


state pre end: "#endif "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
953. Command lang/c/c.talon
================================================================================


state pragma: "#pragma "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
954. Command lang/c/c.talon
================================================================================


state default: "default:\nbreak;"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence)
          (string_content))))))

================================================================================
955. Command lang/c/c.talon
================================================================================


push brackets:
    edit.line_end()
    #insert("{")
    #key(enter)
    insert("{}")
    edit.left()
    key(enter)
    key(enter)
    edit.up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (comment)
      (comment)
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
956. Command lang/c/c.talon
================================================================================


<user.c_variable> <phrase>:
    insert("{c_variable} ")
    insert(user.formatted_text(phrase, "PRIVATE_CAMEL_CASE,NO_SPACES"))


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (string
                  (string_content))))))))))

================================================================================
957. Command lang/c/c.talon
================================================================================


<user.c_variable> <user.letter>:
    insert("{c_variable} {letter} ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
958. Command lang/c/c.talon
================================================================================


cast to <user.c_cast>: "{c_cast}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
959. Command lang/c/c.talon
================================================================================


standard cast to <user.stdint_cast>: "{stdint_cast}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
960. Command lang/c/c.talon
================================================================================


<user.c_types>: "{c_types}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
961. Command lang/c/c.talon
================================================================================


<user.c_pointers>: "{c_pointers}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
962. Command lang/c/c.talon
================================================================================


<user.c_keywords>: "{c_keywords}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
963. Command lang/c/c.talon
================================================================================


<user.c_signed>: "{c_signed}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
964. Command lang/c/c.talon
================================================================================


standard <user.stdint_types>: "{stdint_types}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
965. Command lang/c/c.talon
================================================================================


int main:
    user.insert_between("int main(", ")")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
966. Command lang/c/c.talon
================================================================================


toggle includes: user.code_toggle_libraries()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
967. Command lang/c/c.talon
================================================================================


include <user.code_libraries>:
    user.code_insert_library(code_libraries, "")
    key(end enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (string))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
968. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_imperative


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
969. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_object_oriented


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
970. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
971. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_comment_documentation


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
972. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_data_bool


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
973. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
974. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_functions


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
975. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_libraries


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
976. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_operators_array


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
977. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_operators_assignment


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
978. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_operators_bitwise


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
979. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_operators_lambda


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
980. Command lang/ruby/ruby.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
981. Command lang/ruby/ruby.talon
================================================================================


settings():
    user.code_private_function_formatter = "SNAKE_CASE"
    user.code_protected_function_formatter = "SNAKE_CASE"
    user.code_public_function_formatter = "SNAKE_CASE"
    user.code_private_variable_formatter = "SNAKE_CASE"
    user.code_protected_variable_formatter = "SNAKE_CASE"
    user.code_public_variable_formatter = "SNAKE_CASE"


--------------------------------------------------------------------------------

(source_file
  (settings
    (block
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content)))
      (assignment
        (identifier)
        (string
          (string_content))))))

================================================================================
982. Command lang/ruby/ruby.talon
================================================================================


args pipe:
    insert("||")
    key(left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
983. Command lang/ruby/ruby.talon
================================================================================


# NOTE: this command is created for backward compatibility, but the documentation comments are not actually strings in Ruby.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
984. Command lang/ruby/ruby.talon
================================================================================


dock string:
    user.code_comment_documentation()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
985. Command lang/ruby/ruby.talon
================================================================================


state end: "end"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
986. Command lang/ruby/ruby.talon
================================================================================


state begin: "begin"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
987. Command lang/ruby/ruby.talon
================================================================================


state rescue: "rescue "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
988. Command lang/ruby/ruby.talon
================================================================================


state module: "module "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
989. Command lang/ruby/ruby.talon
================================================================================


^instance <user.text>$:
    insert("@")
    user.code_public_variable_formatter(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
990. Command lang/sql/sql.talon
================================================================================


tag(): user.code_operators_math


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
991. Command lang/sql/sql.talon
================================================================================


tag(): user.code_comment_line


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
992. Command lang/sql/sql.talon
================================================================================


tag(): user.code_comment_block_c_like


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
993. Command lang/sql/sql.talon
================================================================================


tag(): user.code_data_null


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
994. Command lang/sql/sql.talon
================================================================================


tag(): user.code_functions_common


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
995. Command lang/sql/sql.talon
================================================================================


select: "SELECT "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
996. Command lang/sql/sql.talon
================================================================================


distinct: "DISTINCT "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
997. Command lang/sql/sql.talon
================================================================================


from: "FROM "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
998. Command lang/sql/sql.talon
================================================================================


select star from: "SELECT *\nFROM "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence)
          (string_content))))))

================================================================================
999. Command lang/sql/sql.talon
================================================================================


where: "WHERE "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1000. Command lang/sql/sql.talon
================================================================================


order by: "ORDER BY "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1001. Command lang/sql/sql.talon
================================================================================


group by: "GROUP BY "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1002. Command lang/sql/sql.talon
================================================================================


having: "HAVING "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1003. Command lang/sql/sql.talon
================================================================================


descending: " DESC"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1004. Command lang/sql/sql.talon
================================================================================


ascending: " ASC"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1005. Command lang/sql/sql.talon
================================================================================


dot i d: ".id"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1006. Command lang/sql/sql.talon
================================================================================


inner join: user.insert_between("INNER JOIN ", " ON ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
1007. Command lang/sql/sql.talon
================================================================================


inner join using: user.insert_between("INNER JOIN ", " USING ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
1008. Command lang/sql/sql.talon
================================================================================


left outer join: user.insert_between("LEFT OUTER JOIN ", " ON ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
1009. Command lang/sql/sql.talon
================================================================================


right outer join: user.insert_between("RIGHT OUTER JOIN ", " ON ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
1010. Command lang/sql/sql.talon
================================================================================


with:
    key(enter up)
    "WITH  AS ("
    key(enter tab)
    "SELECT "
    key(enter shift-tab)
    edit.extend_line_end()
    edit.delete()
    ") "
    key(delete up:2 right:3)
    key(delete up:2 right:3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1011. Command lang/sql/sql.talon
================================================================================


column:
    key(return)
    ", "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (string
          (string_content))))))

================================================================================
1012. Command lang/sql/sql.talon
================================================================================


count: user.code_insert_function("Count", "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string)))))))

================================================================================
1013. Command lang/sql/sql.talon
================================================================================


date: user.insert_between("DATE '", "'")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
1014. Command text/text_navigation.talon
================================================================================


## If you use this command a lot, you may wish to have a shorter syntax that omits the navigate keyword. Note that you then at least have to say either a navigation_action or before_or_after:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1015. Command text/text_navigation.talon
================================================================================


#({user.navigation_action} [{user.arrow_key}] [{user.navigation_target_name}] [{user.before_or_after}] | [{user.arrow_key}] {user.before_or_after}) [<user.ordinals>] <user.navigation_target>:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1016. Command text/text_navigation.talon
================================================================================


#   navigate comma: moves after the next "," on the line.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1017. Command text/text_navigation.talon
================================================================================


#   navigate before five: moves before the next "5" on the line.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1018. Command text/text_navigation.talon
================================================================================


#   navigate left underscore: moves before the previous "_" on the line.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1019. Command text/text_navigation.talon
================================================================================


#   navigate left after second plex: moves after the second-previous "x" on the line.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1020. Command text/text_navigation.talon
================================================================================


# Besides characters, we can find phrases or move in predetermined units:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1021. Command text/text_navigation.talon
================================================================================


#   navigate phrase hello world: moves after the next "hello world" on the line.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1022. Command text/text_navigation.talon
================================================================================


#   navigate left third word: moves left over three words.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1023. Command text/text_navigation.talon
================================================================================


#   navigate before second big: moves before the second-next 'big' word (a chunk of anything except white space).


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1024. Command text/text_navigation.talon
================================================================================


#   navigate left second small: moves left over two 'small' words (chunks of a camelCase name).


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1025. Command text/text_navigation.talon
================================================================================


# We can search several lines (default 10) above or below the cursor:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1026. Command text/text_navigation.talon
================================================================================


#   navigate up phrase john: moves before the previous "john" (case-insensitive) on the preceding lines.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1027. Command text/text_navigation.talon
================================================================================


#   navigate down third period: moves after the third period on the following lines.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1028. Command text/text_navigation.talon
================================================================================


# Besides movement, we can cut, copy, select, clear (delete), or extend the current selection:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1029. Command text/text_navigation.talon
================================================================================


#   navigate cut after comma: cut the word following the next comma on the line.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1030. Command text/text_navigation.talon
================================================================================


#   navigate left copy third word: copy the third word to the left.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1031. Command text/text_navigation.talon
================================================================================


#   navigate extend third big: extend the selection three big words right.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1032. Command text/text_navigation.talon
================================================================================


#   navigate down clear phrase I think: delete the next occurrence of "I think" on the following lines.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1033. Command text/text_navigation.talon
================================================================================


#   navigate up select colon: select the closest colon on the preceeding lines.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1034. Command text/text_navigation.talon
================================================================================


# We can specify what gets selected before or after the given input:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1035. Command text/text_navigation.talon
================================================================================


#	navigate select parens after equals: Select the first "(" and everything until the first ")" after the "="


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1036. Command text/text_navigation.talon
================================================================================


#	navigate left copy all before equals: Copy everything from the start of the line until the first "=" you encounter while moving left


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1037. Command text/text_navigation.talon
================================================================================


#	navigate clear constant before semicolon: Delete the last word consisting of only uppercase characters or underscores before a ";"


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1038. Command text/text_navigation.talon
================================================================================


# [{user.arrow_key}]: left, right, up, down (default: right)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1039. Command text/text_navigation.talon
================================================================================


#   up/down work on the closest lines (default: 10) above or below.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1040. Command text/text_navigation.talon
================================================================================


# [{user.navigation_action}]: move, extend, select, clear, cut, copy (default: move)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1041. Command text/text_navigation.talon
================================================================================


# [{user.navigation_target_name}]: word, small, big, parens, squares, braces, quotes, angles, all, method, constant (default: word)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1042. Command text/text_navigation.talon
================================================================================


# [{user.before_or_after}]: before, after (default: special behavior)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1043. Command text/text_navigation.talon
================================================================================


#   For move/extend: where to leave the cursor, before or after the target.


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1044. Command text/text_navigation.talon
================================================================================


#   For select/copy/cut: if absent, select/copy/cut the target iself. If


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1045. Command text/text_navigation.talon
================================================================================


# [<user.ordinals>]: an english ordinal, like "second" (default: first)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1046. Command text/text_navigation.talon
================================================================================


# <user.navigation_target>: one of the following:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1047. Command text/text_navigation.talon
================================================================================


word neck [<number_small>]: user.navigation_by_name("SELECT", "RIGHT", "DEFAULT", "word", number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
1048. Command text/text_navigation.talon
================================================================================


word pre [<number_small>]: user.navigation_by_name("SELECT", "LEFT", "DEFAULT", "word", number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
1049. Command text/text_navigation.talon
================================================================================


small word neck [<number_small>]: user.navigation_by_name("SELECT", "RIGHT", "DEFAULT", "small", number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
1050. Command text/text_navigation.talon
================================================================================


small word pre [<number_small>]: user.navigation_by_name("SELECT", "LEFT", "DEFAULT", "small", number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
1051. Command text/text_navigation.talon
================================================================================


big word neck [<number_small>]: user.navigation_by_name("SELECT", "RIGHT", "DEFAULT", "big", number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
1052. Command text/text_navigation.talon
================================================================================


big word pre [<number_small>]: user.navigation_by_name("SELECT", "LEFT", "DEFAULT", "big", number_small or 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (string
              (string_content))
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer))))))))

================================================================================
1053. Command text/symbols.talon
================================================================================


question [mark]: "?"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1054. Command text/symbols.talon
================================================================================


(downscore | underscore): "_"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (word))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1055. Command text/symbols.talon
================================================================================


double dash: "--"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1056. Command text/symbols.talon
================================================================================


(bracket | brack | left bracket): "{"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (word)
          (seq
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1057. Command text/symbols.talon
================================================================================


(rbrack | are bracket | right bracket): "}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1058. Command text/symbols.talon
================================================================================


triple quote: "'''"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1059. Command text/symbols.talon
================================================================================


(triple grave | triple back tick | gravy):
    insert("```")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1060. Command text/symbols.talon
================================================================================


(dot dot | dotdot): ".."


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1061. Command text/symbols.talon
================================================================================


ellipses: "..."


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1062. Command text/symbols.talon
================================================================================


(comma and | spamma): ", "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1063. Command text/symbols.talon
================================================================================


plus: "+"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1064. Command text/symbols.talon
================================================================================


arrow: "->"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1065. Command text/symbols.talon
================================================================================


dub arrow: "=>"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1066. Command text/symbols.talon
================================================================================


new line: "\\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_escape_sequence)
          (string_content))))))

================================================================================
1067. Command text/symbols.talon
================================================================================


carriage return: "\\r"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_escape_sequence)
          (string_content))))))

================================================================================
1068. Command text/symbols.talon
================================================================================


line feed: "\\r\\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_escape_sequence)
          (string_content)
          (string_escape_sequence)
          (string_content))))))

================================================================================
1069. Command text/symbols.talon
================================================================================


empty dubstring:
    '""'
    key(left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1070. Command text/symbols.talon
================================================================================


empty escaped (dubstring|dub quotes):
    '\\"\\"'
    key(left)
    key(left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (string
          (string_escape_sequence)
          (string_content)
          (string_escape_sequence)
          (string_content)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1071. Command text/symbols.talon
================================================================================


empty string:
    "''"
    key(left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1072. Command text/symbols.talon
================================================================================


empty escaped string:
    "\\'\\'"
    key(left)
    key(left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_escape_sequence)
          (string_content)
          (string_escape_sequence)
          (string_content)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1073. Command text/symbols.talon
================================================================================


inside (double quotes | dubquotes):
    insert('""')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1074. Command text/symbols.talon
================================================================================


angle that:
    text = edit.selected_text()
    user.paste("<{text}>")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1075. Command text/symbols.talon
================================================================================


(square | square bracket) that:
    text = edit.selected_text()
    user.paste("[{text}]")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1076. Command text/symbols.talon
================================================================================


(bracket | brace) that:
    text = edit.selected_text()
    user.paste("{{{text}}}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1077. Command text/symbols.talon
================================================================================


(parens | args) that:
    text = edit.selected_text()
    user.paste("({text})")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1078. Command text/symbols.talon
================================================================================


percent that:
    text = edit.selected_text()
    user.paste("%{text}%")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1079. Command text/symbols.talon
================================================================================


quote that:
    text = edit.selected_text()
    user.paste("'{text}'")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1080. Command text/symbols.talon
================================================================================


(double quote | dubquote) that:
    text = edit.selected_text()
    user.paste('"{text}"')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1081. Command text/symbols.talon
================================================================================


(grave | back tick) that:
    text = edit.selected_text()
    user.paste('`{text}`')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))
        (word)))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1082. Command text/numbers.talon
================================================================================


<user.number_string>: "{number_string}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1083. Command text/homophones.talon
================================================================================


phones <user.homophones_canonical>: user.homophones_show(homophones_canonical)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
1084. Command text/homophones.talon
================================================================================


phones that: user.homophones_show_selection()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1085. Command text/homophones.talon
================================================================================


phones force <user.homophones_canonical>: user.homophones_force_show(homophones_canonical)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
1086. Command text/homophones.talon
================================================================================


phones force: user.homophones_force_show_selection()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1087. Command text/homophones.talon
================================================================================


phones hide: user.homophones_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1088. Command text/homophones.talon
================================================================================


phones word:
  edit.select_word()
  user.homophones_show_selection()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1089. Command text/homophones.talon
================================================================================


phones [<user.ordinals>] word left:
  n = ordinals or 1
  user.words_left(n - 1)
  edit.extend_word_left()
  user.homophones_show_selection()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (binary_operator
          (variable
            (identifier))
          (operator)
          (integer)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1090. Command text/homophones.talon
================================================================================


phones [<user.ordinals>] word right:
  n = ordinals or 1
  user.words_right(n - 1)
  edit.extend_word_right()
  user.homophones_show_selection()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))
        (word)
        (word)))
    (block
      (assignment
        (identifier)
        (binary_operator
          (variable
            (identifier))
          (operator)
          (integer)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1091. Command text/homophones_open.talon
================================================================================


choose <number_small>:
    result = user.homophones_select(number_small)
    insert(result)
    user.homophones_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1092. Command text/homophones_open.talon
================================================================================


choose <user.formatters> <number_small>:
    result = user.homophones_select(number_small)
    insert(user.formatted_text(result, formatters))
    user.homophones_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (capture
          (identifier))))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list
                (variable
                  (identifier))
                (variable
                  (identifier)))))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1093. Command text/find_and_replace.talon
================================================================================


hunt this: user.find("")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)))))))

================================================================================
1094. Command text/find_and_replace.talon
================================================================================


hunt this <user.text>: user.find(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
1095. Command text/find_and_replace.talon
================================================================================


hunt all: user.find_everywhere("")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)))))))

================================================================================
1096. Command text/find_and_replace.talon
================================================================================


hunt all <user.text>: user.find_everywhere(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
1097. Command text/find_and_replace.talon
================================================================================


hunt case : user.find_toggle_match_by_case()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1098. Command text/find_and_replace.talon
================================================================================


hunt word : user.find_toggle_match_by_word()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1099. Command text/find_and_replace.talon
================================================================================


hunt expression : user.find_toggle_match_by_regex()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1100. Command text/find_and_replace.talon
================================================================================


hunt next: user.find_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1101. Command text/find_and_replace.talon
================================================================================


hunt previous: user.find_previous()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1102. Command text/find_and_replace.talon
================================================================================


replace this [<user.text>]: user.replace(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
1103. Command text/find_and_replace.talon
================================================================================


replace all: user.replace_everywhere("")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)))))))

================================================================================
1104. Command text/find_and_replace.talon
================================================================================


replace <user.text> all: user.replace_everywhere(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
1105. Command text/find_and_replace.talon
================================================================================


replace confirm that: user.replace_confirm()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1106. Command text/find_and_replace.talon
================================================================================


replace confirm all: user.replace_confirm_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1107. Command text/find_and_replace.talon
================================================================================


clear last <user.text> [over]:
    user.select_previous_occurrence(text)
    sleep(100ms)
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1108. Command text/find_and_replace.talon
================================================================================


clear next <user.text> [over]:
    user.select_next_occurrence(text)
    sleep(100ms)
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1109. Command text/find_and_replace.talon
================================================================================


clear last clip:
    user.select_previous_occurrence(clip.text())
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1110. Command text/find_and_replace.talon
================================================================================


clear next clip:
    user.select_next_occurrence(clip.text())
    sleep(100ms)
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1111. Command text/find_and_replace.talon
================================================================================


comment last <user.text> [over]:
    user.select_previous_occurrence(text)
    sleep(100ms)
    code.toggle_comment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1112. Command text/find_and_replace.talon
================================================================================


comment last clip:
    user.select_previous_occurrence(clip.text())
    sleep(100ms)
    code.toggle_comment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1113. Command text/find_and_replace.talon
================================================================================


comment next <user.text> [over]:
    user.select_next_occurrence(text)
    sleep(100ms)
    code.toggle_comment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1114. Command text/find_and_replace.talon
================================================================================


comment next clip:
    user.select_next_occurrence(clip.text())
    sleep(100ms)
    code.toggle_comment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1115. Command text/find_and_replace.talon
================================================================================


go last <user.text> [over]:
    user.select_previous_occurrence(text)
    sleep(100ms)
    edit.right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1116. Command text/find_and_replace.talon
================================================================================


go last clip:
    user.select_previous_occurrence(clip.text())
    sleep(100ms)
    edit.right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1117. Command text/find_and_replace.talon
================================================================================


go next <user.text> [over]:
    user.select_next_occurrence(text)
    edit.right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1118. Command text/find_and_replace.talon
================================================================================


go next clip:
    user.select_next_occurrence(clip.text())
    edit.right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1119. Command text/find_and_replace.talon
================================================================================


paste last <user.text> [over]:
    user.select_previous_occurrence(text)
    sleep(100ms)
    edit.right()
    edit.paste()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1120. Command text/find_and_replace.talon
================================================================================


paste next <user.text> [over]:
    user.select_next_occurrence(text)
    sleep(100ms)
    edit.right()
    edit.paste()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1121. Command text/find_and_replace.talon
================================================================================


replace last <user.text> [over]:
    user.select_previous_occurrence(text)
    sleep(100ms)
    edit.paste()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1122. Command text/find_and_replace.talon
================================================================================


replace next <user.text> [over]:
    user.select_next_occurrence(text)
    sleep(100ms)
    edit.paste()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1123. Command text/find_and_replace.talon
================================================================================


select last <user.text> [over]: user.select_previous_occurrence(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
1124. Command text/find_and_replace.talon
================================================================================


select next <user.text> [over]: user.select_next_occurrence(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
1125. Command text/find_and_replace.talon
================================================================================


select last clip: user.select_previous_occurrence(clip.text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
1126. Command text/find_and_replace.talon
================================================================================


select next clip: user.select_next_occurrence(clip.text())


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (action
              (identifier)
              (argument_list))))))))

================================================================================
1127. Command text/line_commands.talon
================================================================================


lend: edit.line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1128. Command text/line_commands.talon
================================================================================


bend: edit.line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1129. Command text/line_commands.talon
================================================================================


go <number>: edit.jump_line(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
1130. Command text/line_commands.talon
================================================================================


go <number> end:
    edit.jump_line(number)
    edit.line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1131. Command text/line_commands.talon
================================================================================


comment [line] <number>:
    user.select_range(number, number)
    code.toggle_comment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1132. Command text/line_commands.talon
================================================================================


comment <number> until <number>:
    user.select_range(number_1, number_2)
    code.toggle_comment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1133. Command text/line_commands.talon
================================================================================


clear [line] <number>:
    edit.jump_line(number)
    user.select_range(number, number)
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1134. Command text/line_commands.talon
================================================================================


clear <number> until <number>:
    user.select_range(number_1, number_2)
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1135. Command text/line_commands.talon
================================================================================


copy [line] <number>:
    user.select_range(number, number)
    edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1136. Command text/line_commands.talon
================================================================================


copy <number> until <number>:
    user.select_range(number_1, number_2)
    edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1137. Command text/line_commands.talon
================================================================================


cut [line] <number>:
    user.select_range(number, number)
    edit.cut()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1138. Command text/line_commands.talon
================================================================================


cut [line] <number> until <number>:
    user.select_range(number_1, number_2)
    edit.cut()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1139. Command text/line_commands.talon
================================================================================


(paste | replace) <number> until <number>:
    user.select_range(number_1, number_2)
    edit.paste()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1140. Command text/line_commands.talon
================================================================================


(select | cell | sell) [line] <number>: user.select_range(number, number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
1141. Command text/line_commands.talon
================================================================================


(select | cell | sell) <number> until <number>: user.select_range(number_1, number_2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier))))))))

================================================================================
1142. Command text/line_commands.talon
================================================================================


tab that: edit.indent_more()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1143. Command text/line_commands.talon
================================================================================


tab [line] <number>:
    edit.jump_line(number)
    edit.indent_more()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1144. Command text/line_commands.talon
================================================================================


tab <number> until <number>:
    user.select_range(number_1, number_2)
    edit.indent_more()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1145. Command text/line_commands.talon
================================================================================


retab that: edit.indent_less()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1146. Command text/line_commands.talon
================================================================================


retab [line] <number>:
    user.select_range(number, number)
    edit.indent_less()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1147. Command text/line_commands.talon
================================================================================


retab <number> until <number>:
    user.select_range(number_1, number_2)
    edit.indent_less()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1148. Command text/line_commands.talon
================================================================================


drag [line] down: edit.line_swap_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1149. Command text/line_commands.talon
================================================================================


drag [line] up: edit.line_swap_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1150. Command text/line_commands.talon
================================================================================


drag up [line] <number>:
    user.select_range(number, number)
    edit.line_swap_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1151. Command text/line_commands.talon
================================================================================


drag up <number> until <number>:
    user.select_range(number_1, number_2)
    edit.line_swap_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1152. Command text/line_commands.talon
================================================================================


drag down [line] <number>:
    user.select_range(number, number)
    edit.line_swap_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1153. Command text/line_commands.talon
================================================================================


drag down <number> until <number>:
    user.select_range(number_1, number_2)
    edit.line_swap_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1154. Command text/line_commands.talon
================================================================================


clone (line|that): edit.line_clone()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1155. Command text/line_commands.talon
================================================================================


select camel left: user.extend_camel_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1156. Command text/line_commands.talon
================================================================================


select camel right: user.extend_camel_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1157. Command text/line_commands.talon
================================================================================


go camel left: user.camel_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1158. Command text/line_commands.talon
================================================================================


go camel right: user.camel_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1159. Command text/generic_editor.talon
================================================================================


find it:
    edit.find()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1160. Command text/generic_editor.talon
================================================================================


next one:
    edit.find_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1161. Command text/generic_editor.talon
================================================================================


go word left:
    edit.word_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1162. Command text/generic_editor.talon
================================================================================


go word right:
    edit.word_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1163. Command text/generic_editor.talon
================================================================================


go left:
    edit.left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1164. Command text/generic_editor.talon
================================================================================


go right:
    edit.right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1165. Command text/generic_editor.talon
================================================================================


go up:
    edit.up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1166. Command text/generic_editor.talon
================================================================================


go down:
    edit.down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1167. Command text/generic_editor.talon
================================================================================


go line start:
    edit.line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1168. Command text/generic_editor.talon
================================================================================


go line end:
    edit.line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1169. Command text/generic_editor.talon
================================================================================


go way left:
    edit.line_start()
    edit.line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1170. Command text/generic_editor.talon
================================================================================


go way right:
    edit.line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1171. Command text/generic_editor.talon
================================================================================


go way down:
    edit.file_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1172. Command text/generic_editor.talon
================================================================================


go way up:
    edit.file_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1173. Command text/generic_editor.talon
================================================================================


go bottom:
    edit.file_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1174. Command text/generic_editor.talon
================================================================================


go top:
    edit.file_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1175. Command text/generic_editor.talon
================================================================================


go page down:
    edit.page_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1176. Command text/generic_editor.talon
================================================================================


go page up:
    edit.page_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1177. Command text/generic_editor.talon
================================================================================


select line:
    edit.select_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1178. Command text/generic_editor.talon
================================================================================


select all:
    edit.select_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1179. Command text/generic_editor.talon
================================================================================


select left:
    edit.extend_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1180. Command text/generic_editor.talon
================================================================================


select right:
    edit.extend_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1181. Command text/generic_editor.talon
================================================================================


select up:
    edit.extend_line_up()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1182. Command text/generic_editor.talon
================================================================================


select down:
    edit.extend_line_down()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1183. Command text/generic_editor.talon
================================================================================


select word:
    edit.select_word()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1184. Command text/generic_editor.talon
================================================================================


select word left:
    edit.extend_word_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1185. Command text/generic_editor.talon
================================================================================


select word right:
    edit.extend_word_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1186. Command text/generic_editor.talon
================================================================================


select way left:
    edit.extend_line_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1187. Command text/generic_editor.talon
================================================================================


select way right:
    edit.extend_line_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1188. Command text/generic_editor.talon
================================================================================


select way up:
    edit.extend_file_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1189. Command text/generic_editor.talon
================================================================================


select way down:
    edit.extend_file_end()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1190. Command text/generic_editor.talon
================================================================================


indent [more]:
    edit.indent_more()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1191. Command text/generic_editor.talon
================================================================================


(indent less | out dent):
    edit.indent_less()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1192. Command text/generic_editor.talon
================================================================================


clear line:
    edit.delete_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1193. Command text/generic_editor.talon
================================================================================


clear left:
    key(backspace)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1194. Command text/generic_editor.talon
================================================================================


clear right:
    key(delete)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1195. Command text/generic_editor.talon
================================================================================


clear up:
    edit.extend_line_up()
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1196. Command text/generic_editor.talon
================================================================================


clear down:
    edit.extend_line_down()
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1197. Command text/generic_editor.talon
================================================================================


clear word:
    edit.delete_word()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1198. Command text/generic_editor.talon
================================================================================


clear word left:
    edit.extend_word_left()
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1199. Command text/generic_editor.talon
================================================================================


clear word right:
    edit.extend_word_right()
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1200. Command text/generic_editor.talon
================================================================================


clear way left:
    edit.extend_line_start()
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1201. Command text/generic_editor.talon
================================================================================


clear way right:
    edit.extend_line_end()
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1202. Command text/generic_editor.talon
================================================================================


clear way up:
    edit.extend_file_start()
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1203. Command text/generic_editor.talon
================================================================================


clear way down:
    edit.extend_file_end()
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1204. Command text/generic_editor.talon
================================================================================


clear all:
    edit.select_all()
    edit.delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1205. Command text/generic_editor.talon
================================================================================


copy all:
    edit.select_all()
    edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1206. Command text/generic_editor.talon
================================================================================


#to do: do we want these variants, seem to conflict


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1207. Command text/generic_editor.talon
================================================================================


# copy left:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1208. Command text/generic_editor.talon
================================================================================


# copy right:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1209. Command text/generic_editor.talon
================================================================================


# copy up:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1210. Command text/generic_editor.talon
================================================================================


# copy down:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1211. Command text/generic_editor.talon
================================================================================


copy word:
    edit.select_word()
    edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1212. Command text/generic_editor.talon
================================================================================


copy word left:
    edit.extend_word_left()
    edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1213. Command text/generic_editor.talon
================================================================================


copy word right:
    edit.extend_word_right()
    edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1214. Command text/generic_editor.talon
================================================================================


copy line:
    edit.select_line()
    edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1215. Command text/generic_editor.talon
================================================================================


cut all:
    edit.select_all()
    edit.cut()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1216. Command text/generic_editor.talon
================================================================================


#to do: do we want these variants


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1217. Command text/generic_editor.talon
================================================================================


# cut left:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1218. Command text/generic_editor.talon
================================================================================


# cut right:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1219. Command text/generic_editor.talon
================================================================================


# cut up:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1220. Command text/generic_editor.talon
================================================================================


# cut down:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1221. Command text/generic_editor.talon
================================================================================


cut word:
    edit.select_word()
    edit.cut()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1222. Command text/generic_editor.talon
================================================================================


cut word left:
    edit.extend_word_left()
    edit.cut()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1223. Command text/generic_editor.talon
================================================================================


cut word right:
    edit.extend_word_right()
    edit.cut()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1224. Command text/generic_editor.talon
================================================================================


cut line:
    edit.select_line()
    edit.cut()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1225. Command apps/firefox/firefox.talon
================================================================================


tag(): browser


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1226. Command apps/firefox/firefox.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1227. Command apps/firefox/firefox.talon
================================================================================


tab search:
    browser.focus_address()
    insert("% ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1228. Command apps/firefox/firefox.talon
================================================================================


tab search <user.text>$:
    browser.focus_address()
    insert("% {text}")
    key(down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1229. Command apps/anaconda/anaconda.talon
================================================================================


anaconda:         "conda "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1230. Command apps/anaconda/anaconda.talon
================================================================================


anaconda help:    "conda --help\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1231. Command apps/anaconda/anaconda.talon
================================================================================


anaconda version: "conda --version\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1232. Command apps/anaconda/anaconda.talon
================================================================================


anaconda environment list:   "conda env list\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1233. Command apps/anaconda/anaconda.talon
================================================================================


anaconda environment create: "conda env create -f "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1234. Command apps/anaconda/anaconda.talon
================================================================================


anaconda environment remove: "conda env remove -n "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1235. Command apps/anaconda/anaconda.talon
================================================================================


anaconda activate:  "conda activate "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1236. Command apps/anaconda/anaconda.talon
================================================================================


anaconda clean:     "conda clean "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1237. Command apps/anaconda/anaconda.talon
================================================================================


anaconda compare:   "conda compare "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1238. Command apps/anaconda/anaconda.talon
================================================================================


anaconda config:    "conda config "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1239. Command apps/anaconda/anaconda.talon
================================================================================


anaconda create:    "conda create "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1240. Command apps/anaconda/anaconda.talon
================================================================================


anaconda info:      "conda info "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1241. Command apps/anaconda/anaconda.talon
================================================================================


anaconda init:      "conda init "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1242. Command apps/anaconda/anaconda.talon
================================================================================


anaconda install:   "conda install "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1243. Command apps/anaconda/anaconda.talon
================================================================================


anaconda list:      "conda list "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1244. Command apps/anaconda/anaconda.talon
================================================================================


anaconda package:   "conda package "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1245. Command apps/anaconda/anaconda.talon
================================================================================


anaconda remove:    "conda remove "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1246. Command apps/anaconda/anaconda.talon
================================================================================


anaconda uninstall: "conda uninstall "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1247. Command apps/anaconda/anaconda.talon
================================================================================


anaconda run:       "conda run "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1248. Command apps/anaconda/anaconda.talon
================================================================================


anaconda search:    "conda search "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1249. Command apps/anaconda/anaconda.talon
================================================================================


anaconda update:    "conda update "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1250. Command apps/anaconda/anaconda.talon
================================================================================


anaconda upgrade:   "conda upgrade "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1251. Command apps/anaconda/anaconda.talon
================================================================================


anaconda build:       "conda build "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1252. Command apps/anaconda/anaconda.talon
================================================================================


anaconda convert:     "conda convert "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1253. Command apps/anaconda/anaconda.talon
================================================================================


anaconda debug:       "conda debug "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1254. Command apps/anaconda/anaconda.talon
================================================================================


anaconda develop:     "conda develop "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1255. Command apps/anaconda/anaconda.talon
================================================================================


anaconda environment: "conda env "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1256. Command apps/anaconda/anaconda.talon
================================================================================


anaconda index:       "conda index "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1257. Command apps/anaconda/anaconda.talon
================================================================================


anaconda inspect:     "conda inspect "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1258. Command apps/anaconda/anaconda.talon
================================================================================


anaconda metapackage: "conda metapackage "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1259. Command apps/anaconda/anaconda.talon
================================================================================


anaconda render:      "conda render "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1260. Command apps/anaconda/anaconda.talon
================================================================================


anaconda server:      "conda server "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1261. Command apps/anaconda/anaconda.talon
================================================================================


anaconda skeleton:    "conda skeleton "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1262. Command apps/anaconda/anaconda.talon
================================================================================


anaconda verify:      "conda verify "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1263. Command apps/kindle/kindle.talon
================================================================================


tag(): user.pages


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1264. Command apps/terraform/terraform.talon
================================================================================


terraform: "terraform "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1265. Command apps/terraform/terraform.talon
================================================================================


terraform apply: "terraform apply "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1266. Command apps/terraform/terraform.talon
================================================================================


terraform destroy: "terraform destroy "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1267. Command apps/terraform/terraform.talon
================================================================================


terraform format recursive: "terraform fmt -recursive\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1268. Command apps/terraform/terraform.talon
================================================================================


terraform format: "terraform fmt\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1269. Command apps/terraform/terraform.talon
================================================================================


terraform help: "terraform -help"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1270. Command apps/terraform/terraform.talon
================================================================================


terraform init upgrade: "terraform init -upgrade\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1271. Command apps/terraform/terraform.talon
================================================================================


terraform init: "terraform init\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1272. Command apps/terraform/terraform.talon
================================================================================


terraform plan: "terraform plan\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1273. Command apps/terraform/terraform.talon
================================================================================


terraform state move: "terraform state mv "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1274. Command apps/terraform/terraform.talon
================================================================================


terraform validate: "terraform validate\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1275. Command apps/generic_browser.talon
================================================================================


address bar | go address | go url: browser.focus_address()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (choice
        (seq
          (word)
          (word))
        (seq
          (word)
          (word))
        (seq
          (word)
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1276. Command apps/generic_browser.talon
================================================================================


address copy | url copy | copy address | copy url:
    browser.focus_address()
    sleep(50ms)
    edit.copy()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (choice
        (seq
          (word)
          (word))
        (seq
          (word)
          (word))
        (seq
          (word)
          (word))
        (seq
          (word)
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1277. Command apps/generic_browser.talon
================================================================================


go home: browser.go_home()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1278. Command apps/generic_browser.talon
================================================================================


[go] forward: browser.go_forward()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1279. Command apps/generic_browser.talon
================================================================================


go (back | backward): browser.go_back()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1280. Command apps/generic_browser.talon
================================================================================


go to {user.website}: browser.go(website)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
1281. Command apps/generic_browser.talon
================================================================================


go private: browser.open_private_window()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1282. Command apps/generic_browser.talon
================================================================================


bookmark it: browser.bookmark()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1283. Command apps/generic_browser.talon
================================================================================


bookmark tabs: browser.bookmark_tabs()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1284. Command apps/generic_browser.talon
================================================================================


(refresh | reload) it: browser.reload()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1285. Command apps/generic_browser.talon
================================================================================


(refresh | reload) it hard: browser.reload_hard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1286. Command apps/generic_browser.talon
================================================================================


bookmark show: browser.bookmarks()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1287. Command apps/generic_browser.talon
================================================================================


bookmark bar [show]: browser.bookmarks_bar()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1288. Command apps/generic_browser.talon
================================================================================


downloads show: browser.show_downloads()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1289. Command apps/generic_browser.talon
================================================================================


extensions show: browser.show_extensions()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1290. Command apps/generic_browser.talon
================================================================================


history show: browser.show_history()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1291. Command apps/generic_browser.talon
================================================================================


cache show: browser.show_clear_cache()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1292. Command apps/generic_browser.talon
================================================================================


dev tools [show]: browser.toggle_dev_tools()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1293. Command apps/generic_browser.talon
================================================================================


show downloads: browser.show_downloads()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1294. Command apps/generic_browser.talon
================================================================================


show extensions: browser.show_extensions()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1295. Command apps/generic_browser.talon
================================================================================


show history: browser.show_history()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1296. Command apps/generic_browser.talon
================================================================================


show cache: browser.show_clear_cache()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1297. Command apps/generic_browser.talon
================================================================================


# help: key(?)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1298. Command apps/generic_browser.talon
================================================================================


# scroll tiny down: key(j)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1299. Command apps/generic_browser.talon
================================================================================


# scroll tiny up: key(k)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1300. Command apps/generic_browser.talon
================================================================================


# scroll left: key(h)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1301. Command apps/generic_browser.talon
================================================================================


# scroll right: key(l)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1302. Command apps/generic_browser.talon
================================================================================


# scroll (pop | spring): key(z H)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1303. Command apps/generic_browser.talon
================================================================================


# scroll push: key(z L)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1304. Command apps/generic_browser.talon
================================================================================


# scroll top: key(gg)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1305. Command apps/generic_browser.talon
================================================================================


# scroll (bottom | end): key(G)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1306. Command apps/generic_browser.talon
================================================================================


# (scroll half down | mini page): key(d)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1307. Command apps/generic_browser.talon
================================================================================


# scroll half up: key(u)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1308. Command apps/generic_browser.talon
================================================================================


# [open] link: key(f)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1309. Command apps/generic_browser.talon
================================================================================


# [open] link new: key(F)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1310. Command apps/generic_browser.talon
================================================================================


# copy link: key(y f)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1311. Command apps/generic_browser.talon
================================================================================


# copy (address | url): key(escape y y)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1312. Command apps/generic_browser.talon
================================================================================


# (refresh | reload): browser.reload()


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1313. Command apps/generic_browser.talon
================================================================================


# view source: key(g s)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1314. Command apps/generic_browser.talon
================================================================================


# insert mode: key(i)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1315. Command apps/generic_browser.talon
================================================================================


# next frame: key(g f)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1316. Command apps/generic_browser.talon
================================================================================


# main frame: key(g F)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1317. Command apps/generic_browser.talon
================================================================================


# (open | go) (url | history): key(o)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1318. Command apps/generic_browser.talon
================================================================================


# (open | go) (url | history) new: key(O)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1319. Command apps/generic_browser.talon
================================================================================


# (open | go) bookmark: key(b)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1320. Command apps/generic_browser.talon
================================================================================


# (open | go) bookmark new: key(B)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1321. Command apps/generic_browser.talon
================================================================================


# find mode: key(/)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1322. Command apps/generic_browser.talon
================================================================================


# next match: key(n)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1323. Command apps/generic_browser.talon
================================================================================


# previous match: key(N)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1324. Command apps/generic_browser.talon
================================================================================


# history back: key(H)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1325. Command apps/generic_browser.talon
================================================================================


# history forward: key(L)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1326. Command apps/generic_browser.talon
================================================================================


# last visited: key(^)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1327. Command apps/generic_browser.talon
================================================================================


# dupe tab: key(y t)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1328. Command apps/generic_browser.talon
================================================================================


# restore: key(X)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1329. Command apps/generic_browser.talon
================================================================================


# search tabs: key(T)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1330. Command apps/generic_browser.talon
================================================================================


# move to window: key(W)


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1331. Command apps/calibre/calibre_viewer.talon
================================================================================


tag(): user.pages


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1332. Command apps/calibre/calibre_viewer.talon
================================================================================


tag(): user.chapters


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1333. Command apps/okular/okular.talon
================================================================================


tag(): user.pages


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1334. Command apps/platforms/win/wsl/wsl.talon
================================================================================


tag(): terminal


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1335. Command apps/platforms/win/wsl/wsl.talon
================================================================================


tag(): user.file_manager


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1336. Command apps/platforms/win/wsl/wsl.talon
================================================================================


tag(): user.generic_unix_shell


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1337. Command apps/platforms/win/wsl/wsl.talon
================================================================================


tag(): user.git


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1338. Command apps/platforms/win/wsl/wsl.talon
================================================================================


tag(): user.kubectl


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1339. Command apps/platforms/win/wsl/wsl.talon
================================================================================


^go <user.letter>$: user.file_manager_open_volume("/mnt/{letter}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1340. Command apps/platforms/win/wsl/wsl.talon
================================================================================


(wsl|weasel) reset path detection: user.wsl_reset_path_detection()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1341. Command apps/platforms/win/wsl/wsl.talon
================================================================================


(wsl|weasel) speak: user.wsl_speak()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1342. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


tag(): terminal


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1343. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


tag(): user.generic_windows_shell


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1344. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


tag(): user.git


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1345. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


tag(): user.anaconda


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1346. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


# tag(): user.kubectl


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1347. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1348. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


# TODO: file_manager


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1349. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


tag(): user.splits


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1350. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


settings open : key(ctrl-,)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1351. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


focus left: key(ctrl-alt-shift-left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1352. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


focus right: key(ctrl-alt-shift-right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1353. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


focus up: key(ctrl-alt-shift-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1354. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


focus down: key(ctrl-alt-shift-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1355. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


term menu: key(ctrl-shift-f1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1356. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


find it:
    edit.find()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1357. Command apps/platforms/win/windows_terminal/windows_terminal.talon
================================================================================


find it <phrase>$:
    # handle consecutive finds by first escaping out of any previous one
    key(escape)
    # make it so
    edit.find("{phrase}\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (comment)
    (block
      (expression
        (key_action
          (implicit_string)))
      (comment)
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_escape_sequence))))))))

================================================================================
1358. Command apps/platforms/win/sumatrapdf/sumatrapdf.talon
================================================================================


tag(): user.pages


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1359. Command apps/platforms/win/sumatrapdf/sumatrapdf.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1360. Command apps/platforms/win/explorer/explorer.talon
================================================================================


tag(): user.file_manager


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1361. Command apps/platforms/win/explorer/explorer.talon
================================================================================


^go <user.letter>$: user.file_manager_open_volume("{letter}:")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1362. Command apps/platforms/win/explorer/explorer.talon
================================================================================


go app data: user.file_manager_open_directory("%AppData%")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1363. Command apps/platforms/win/explorer/explorer.talon
================================================================================


go program files: user.file_manager_open_directory("%programfiles%")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1364. Command apps/platforms/win/powershell/power_shell.talon
================================================================================


tag(): terminal


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1365. Command apps/platforms/win/powershell/power_shell.talon
================================================================================


tag(): user.generic_windows_shell


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1366. Command apps/platforms/win/powershell/power_shell.talon
================================================================================


tag(): user.git


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1367. Command apps/platforms/win/powershell/power_shell.talon
================================================================================


tag(): user.anaconda


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1368. Command apps/platforms/win/powershell/power_shell.talon
================================================================================


# tag(): user.kubectl


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1369. Command apps/platforms/win/nitro_reader/nitro_reader_5.talon
================================================================================


tag(): user.pages


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1370. Command apps/platforms/win/nitro_reader/nitro_reader_5.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1371. Command apps/platforms/win/outlook/outlook.talon
================================================================================


archive: key(alt h o 1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1372. Command apps/platforms/win/outlook/outlook.talon
================================================================================


new e-mail: key(ctrl-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1373. Command apps/platforms/win/outlook/outlook.talon
================================================================================


calendar: key(ctrl-2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1374. Command apps/platforms/win/outlook/outlook.talon
================================================================================


inbox: key(ctrl-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1375. Command apps/platforms/win/outlook/outlook.talon
================================================================================


Reply: key(ctrl-r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1376. Command apps/platforms/win/outlook/outlook.talon
================================================================================


Reply all: key(ctrl-shift-r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1377. Command apps/platforms/win/outlook/outlook.talon
================================================================================


Forward: key(ctrl-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1378. Command apps/platforms/win/outlook/outlook.talon
================================================================================


accept: key(shift-f10 c c enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1379. Command apps/platforms/mac/iterm/iterm.talon
================================================================================


tag(): terminal


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1380. Command apps/platforms/mac/iterm/iterm.talon
================================================================================


# todo: filemanager support


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1381. Command apps/platforms/mac/iterm/iterm.talon
================================================================================


#tag(): user.file_manager


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1382. Command apps/platforms/mac/iterm/iterm.talon
================================================================================


tag(): user.generic_unix_shell


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1383. Command apps/platforms/mac/iterm/iterm.talon
================================================================================


tag(): user.git


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1384. Command apps/platforms/mac/iterm/iterm.talon
================================================================================


tag(): user.kubectl


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1385. Command apps/platforms/mac/iterm/iterm.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1386. Command apps/platforms/mac/terminal/apple_terminal.talon
================================================================================


tag(): terminal


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1387. Command apps/platforms/mac/terminal/apple_terminal.talon
================================================================================


tag(): user.generic_unix_shell


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1388. Command apps/platforms/mac/terminal/apple_terminal.talon
================================================================================


tag(): user.git


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1389. Command apps/platforms/mac/terminal/apple_terminal.talon
================================================================================


tag(): user.anaconda


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1390. Command apps/platforms/mac/terminal/apple_terminal.talon
================================================================================


tag(): user.kubectl


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1391. Command apps/platforms/mac/terminal/apple_terminal.talon
================================================================================


# TODO: explain


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1392. Command apps/platforms/mac/terminal/apple_terminal.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1393. Command apps/platforms/mac/terminal/apple_terminal.talon
================================================================================


tag(): user.file_manager


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1394. Command apps/platforms/mac/terminal/apple_terminal.talon
================================================================================


suspend:
    key(ctrl-z)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1395. Command apps/platforms/mac/terminal/apple_terminal.talon
================================================================================


resume:
    insert("fg")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1396. Command apps/platforms/mac/notes/notes.talon
================================================================================


new note: key(cmd-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1397. Command apps/platforms/mac/notes/notes.talon
================================================================================


duplicate note: key(cmd-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1398. Command apps/platforms/mac/notes/notes.talon
================================================================================


new folder: key(shift-cmd-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1399. Command apps/platforms/mac/notes/notes.talon
================================================================================


toggle folders: key(alt-cmd-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1400. Command apps/platforms/mac/notes/notes.talon
================================================================================


show main: key(cmd-0)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1401. Command apps/platforms/mac/notes/notes.talon
================================================================================


list view: key(cmd-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1402. Command apps/platforms/mac/notes/notes.talon
================================================================================


gallery view: key(cmd-2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1403. Command apps/platforms/mac/notes/notes.talon
================================================================================


toggle attachments: key(cmd-3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1404. Command apps/platforms/mac/notes/notes.talon
================================================================================


find all: key(alt-cmd-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1405. Command apps/platforms/mac/notes/notes.talon
================================================================================


print note: key(cmd-p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1406. Command apps/platforms/mac/notes/notes.talon
================================================================================


attach file: key(shift-cmd-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1407. Command apps/platforms/mac/notes/notes.talon
================================================================================


create link: key(cmd-k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1408. Command apps/platforms/mac/notes/notes.talon
================================================================================


insert table: key(alt-cmd-t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1409. Command apps/platforms/mac/notes/notes.talon
================================================================================


apply title: key(shift-cmd-t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1410. Command apps/platforms/mac/notes/notes.talon
================================================================================


apply heading: key(shift-cmd-h)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1411. Command apps/platforms/mac/notes/notes.talon
================================================================================


apply subheading: key(shift-cmd-j)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1412. Command apps/platforms/mac/notes/notes.talon
================================================================================


apply body: key(shift-cmd-b)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1413. Command apps/platforms/mac/notes/notes.talon
================================================================================


apply mono: key(shift-cmd-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1414. Command apps/platforms/mac/notes/notes.talon
================================================================================


apply bullet: key(shift-cmd-7)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1415. Command apps/platforms/mac/notes/notes.talon
================================================================================


apply dash: key(shift-cmd-8)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1416. Command apps/platforms/mac/notes/notes.talon
================================================================================


apply number: key(shift-cmd-9)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1417. Command apps/platforms/mac/notes/notes.talon
================================================================================


apply checklist: key(shift-cmd-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1418. Command apps/platforms/mac/notes/notes.talon
================================================================================


increase font: key(cmd-+)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1419. Command apps/platforms/mac/notes/notes.talon
================================================================================


decrease font: key(cmd--)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1420. Command apps/platforms/mac/notes/notes.talon
================================================================================


line break: key(ctrl-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1421. Command apps/platforms/mac/notes/notes.talon
================================================================================


mark: key(shift-cmd-u)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1422. Command apps/platforms/mac/notes/notes.talon
================================================================================


drag [line] down: key('ctrl-cmd-down')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1423. Command apps/platforms/mac/notes/notes.talon
================================================================================


drag [line] up: key('ctrl-cmd-up')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1424. Command apps/platforms/mac/finder/finder.talon
================================================================================


tag(): user.file_manager


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1425. Command apps/platforms/mac/finder/finder.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1426. Command apps/platforms/mac/finder/finder.talon
================================================================================


preferences: key(cmd-,)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1427. Command apps/platforms/mac/finder/finder.talon
================================================================================


options: key(cmd-j)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1428. Command apps/platforms/mac/finder/finder.talon
================================================================================


search: key(cmd-alt-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1429. Command apps/platforms/mac/finder/finder.talon
================================================================================


sort by none: key(ctrl-alt-cmd-0)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1430. Command apps/platforms/mac/finder/finder.talon
================================================================================


sort by name: key(ctrl-alt-cmd-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1431. Command apps/platforms/mac/finder/finder.talon
================================================================================


sort by kind: key(ctrl-alt-cmd-2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1432. Command apps/platforms/mac/finder/finder.talon
================================================================================


sort by date opened: key(ctrl-alt-cmd-3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1433. Command apps/platforms/mac/finder/finder.talon
================================================================================


sort by date added: key(ctrl-alt-cmd-4)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1434. Command apps/platforms/mac/finder/finder.talon
================================================================================


sort by date modified: key(ctrl-alt-cmd-5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1435. Command apps/platforms/mac/finder/finder.talon
================================================================================


sort by size: key(ctrl-alt-cmd-6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1436. Command apps/platforms/mac/finder/finder.talon
================================================================================


icon view: key(cmd-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1437. Command apps/platforms/mac/finder/finder.talon
================================================================================


column view: key(cmd-3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1438. Command apps/platforms/mac/finder/finder.talon
================================================================================


list view: key(cmd-2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1439. Command apps/platforms/mac/finder/finder.talon
================================================================================


gallery view: key(cmd-4)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1440. Command apps/platforms/mac/finder/finder.talon
================================================================================


copy path: key(alt-cmd-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1441. Command apps/platforms/mac/finder/finder.talon
================================================================================


trash it: key(cmd-backspace)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1442. Command apps/platforms/mac/finder/finder.talon
================================================================================


hide [finder]: key(cmd-h)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1443. Command apps/platforms/mac/finder/finder.talon
================================================================================


hide others: app.window_hide_others()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1444. Command apps/platforms/mac/rstudio.talon
================================================================================


run that: key("cmd-enter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1445. Command apps/platforms/mac/rstudio.talon
================================================================================


run document:                    key("cmd-alt-r")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1446. Command apps/platforms/mac/rstudio.talon
================================================================================


run from top:                    key("cmd-alt-b")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1447. Command apps/platforms/mac/rstudio.talon
================================================================================


run to end:                      key("cmd-alt-e")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1448. Command apps/platforms/mac/rstudio.talon
================================================================================


run (function|funk):             key("cmd-alt-f")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1449. Command apps/platforms/mac/rstudio.talon
================================================================================


run section:                     key("cmd-alt-t")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1450. Command apps/platforms/mac/rstudio.talon
================================================================================


run previous chunks:             key("cmd-alt-p")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1451. Command apps/platforms/mac/rstudio.talon
================================================================================


run chunk:                       key("cmd-alt-c")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1452. Command apps/platforms/mac/rstudio.talon
================================================================================


run next chunk:                  key("cmd-alt-n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1453. Command apps/platforms/mac/rstudio.talon
================================================================================


run all:                         key("cmd-shift-s")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1454. Command apps/platforms/mac/rstudio.talon
================================================================================


run knitter:                     key("cmd-shift-k")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1455. Command apps/platforms/mac/rstudio.talon
================================================================================


run profiler:                    key("cmd-shift-alt-p")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1456. Command apps/platforms/mac/rstudio.talon
================================================================================


jump back:                       key("cmd-f9")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1457. Command apps/platforms/mac/rstudio.talon
================================================================================


jump forward:                    key("cmd-f10")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1458. Command apps/platforms/mac/rstudio.talon
================================================================================


close all tabs:                  key("cmd-shift-w")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1459. Command apps/platforms/mac/rstudio.talon
================================================================================


indent lines:                    key("cmd-i")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1460. Command apps/platforms/mac/rstudio.talon
================================================================================


toggle comment:                  key("cmd-shift-c")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1461. Command apps/platforms/mac/rstudio.talon
================================================================================


reformat comment:                key("cmd-shift-/")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1462. Command apps/platforms/mac/rstudio.talon
================================================================================


reformat R code:                 key("cmd-shift-a")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1463. Command apps/platforms/mac/rstudio.talon
================================================================================


line up:                         key("alt-up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1464. Command apps/platforms/mac/rstudio.talon
================================================================================


line down:                       key("alt-down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1465. Command apps/platforms/mac/rstudio.talon
================================================================================


duplicate line up:               key("cmd-alt-up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1466. Command apps/platforms/mac/rstudio.talon
================================================================================


duplicate line [down]:           key("cmd-alt-down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1467. Command apps/platforms/mac/rstudio.talon
================================================================================


select to paren:                 key("ctrl-shift-e")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1468. Command apps/platforms/mac/rstudio.talon
================================================================================


select to matching paren:        key("ctrl-shift-alt-e")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1469. Command apps/platforms/mac/rstudio.talon
================================================================================


jump to matching:                key("ctrl-p")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1470. Command apps/platforms/mac/rstudio.talon
================================================================================


expand selection:                key("shift-alt-cmd-up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1471. Command apps/platforms/mac/rstudio.talon
================================================================================


reduce selection:                key("shift-alt-cmd-down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1472. Command apps/platforms/mac/rstudio.talon
================================================================================


add cursor up:                   key("ctrl-alt-up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1473. Command apps/platforms/mac/rstudio.talon
================================================================================


add cursor down:                 key("ctrl-alt-down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1474. Command apps/platforms/mac/rstudio.talon
================================================================================


move active cursor up:           key("ctrl-alt-shift-up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1475. Command apps/platforms/mac/rstudio.talon
================================================================================


move active cursor down:         key("ctrl-alt-shift-down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1476. Command apps/platforms/mac/rstudio.talon
================================================================================


delete line:                     key("cmd-d")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1477. Command apps/platforms/mac/rstudio.talon
================================================================================


delete word left:                key("alt-backspace")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1478. Command apps/platforms/mac/rstudio.talon
================================================================================


delete word right:               key("alt-delete")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1479. Command apps/platforms/mac/rstudio.talon
================================================================================


assign that:                     key("alt--")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1480. Command apps/platforms/mac/rstudio.talon
================================================================================


pipe that:                       key("cmd-shift-m")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1481. Command apps/platforms/mac/rstudio.talon
================================================================================


insert knitter chunk:            key("cmd-alt-i")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1482. Command apps/platforms/mac/rstudio.talon
================================================================================


fold that:                       key("cmd-alt-l")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1483. Command apps/platforms/mac/rstudio.talon
================================================================================


unfold that:                     key("cmd-shift-alt-l")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1484. Command apps/platforms/mac/rstudio.talon
================================================================================


fold all:                        key("cmd-alt-o")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1485. Command apps/platforms/mac/rstudio.talon
================================================================================


unfold all:                      key("cmd-shift-alt-o")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1486. Command apps/platforms/mac/rstudio.talon
================================================================================


find and replace:                key("cmd-f")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1487. Command apps/platforms/mac/rstudio.talon
================================================================================


find next:                       key("cmd-g")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1488. Command apps/platforms/mac/rstudio.talon
================================================================================


find previous:                   key("cmd-shift-g")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1489. Command apps/platforms/mac/rstudio.talon
================================================================================


find with selection:             key("cmd-e")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1490. Command apps/platforms/mac/rstudio.talon
================================================================================


find in files:                   key("cmd-shift-f")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1491. Command apps/platforms/mac/rstudio.talon
================================================================================


run replace:                     key("cmd-shift-j")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1492. Command apps/platforms/mac/rstudio.talon
================================================================================


run spell check:                 key("f7")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1493. Command apps/platforms/mac/rstudio.talon
================================================================================


go to source:                    key("ctrl-1")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1494. Command apps/platforms/mac/rstudio.talon
================================================================================


go to console:                   key("ctrl-2")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1495. Command apps/platforms/mac/rstudio.talon
================================================================================


go to help:                      key("ctrl-3")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1496. Command apps/platforms/mac/rstudio.talon
================================================================================


go to history:                   key("ctrl-4")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1497. Command apps/platforms/mac/rstudio.talon
================================================================================


go to files:                     key("ctrl-5")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1498. Command apps/platforms/mac/rstudio.talon
================================================================================


go to (plots|plot):              key("ctrl-6")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1499. Command apps/platforms/mac/rstudio.talon
================================================================================


go to packages:                  key("ctrl-7")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1500. Command apps/platforms/mac/rstudio.talon
================================================================================


go to environment:               key("ctrl-8")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1501. Command apps/platforms/mac/rstudio.talon
================================================================================


go to git:                       key("ctrl-9")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1502. Command apps/platforms/mac/rstudio.talon
================================================================================


go to build:                     key("ctrl-0")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1503. Command apps/platforms/mac/rstudio.talon
================================================================================


go to terminal:                  key("alt-shift-t")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1504. Command apps/platforms/mac/rstudio.talon
================================================================================


go to omni:                      key("ctrl-.")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1505. Command apps/platforms/mac/rstudio.talon
================================================================================


go to line:                      key("cmd-shift-alt-g")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1506. Command apps/platforms/mac/rstudio.talon
================================================================================


go to section:                   key("cmd-shift-alt-j")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1507. Command apps/platforms/mac/rstudio.talon
================================================================================


go to tab:                       key("ctrl-shift-.")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1508. Command apps/platforms/mac/rstudio.talon
================================================================================


go to previous tab:              key("ctrl-f11")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1509. Command apps/platforms/mac/rstudio.talon
================================================================================


go to next tab:                  key("ctrl-f12")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1510. Command apps/platforms/mac/rstudio.talon
================================================================================


go to first tab:                 key("ctrl-shift-f11")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1511. Command apps/platforms/mac/rstudio.talon
================================================================================


go to last tab:                  key("ctrl-shift-f12")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1512. Command apps/platforms/mac/rstudio.talon
================================================================================


zoom source:                     key("ctrl-shift-1")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1513. Command apps/platforms/mac/rstudio.talon
================================================================================


(zoom|show) all:                 key("ctrl-shift-0")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1514. Command apps/platforms/mac/rstudio.talon
================================================================================


help that:                       key("f1")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1515. Command apps/platforms/mac/rstudio.talon
================================================================================


define that:                     key("f2")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1516. Command apps/platforms/mac/rstudio.talon
================================================================================


previous plot:                   key("cmd-alt-f11")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1517. Command apps/platforms/mac/rstudio.talon
================================================================================


next plot:                       key("cmd-alt-f12")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1518. Command apps/platforms/mac/rstudio.talon
================================================================================


restart R session:               key("cmd-shift-f10")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1519. Command apps/platforms/mac/rstudio.talon
================================================================================


dev tools build:                 key("cmd-shift-b")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1520. Command apps/platforms/mac/rstudio.talon
================================================================================


dev tools load all:              key("cmd-shift-l")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1521. Command apps/platforms/mac/rstudio.talon
================================================================================


dev tools test:                  key("cmd-shift-t")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1522. Command apps/platforms/mac/rstudio.talon
================================================================================


dev tools check:                 key("cmd-shift-e")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1523. Command apps/platforms/mac/rstudio.talon
================================================================================


dev tools document:              key("cmd-shift-d")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1524. Command apps/platforms/mac/rstudio.talon
================================================================================


toggle breakpoint:               key("shift-f9")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1525. Command apps/platforms/mac/rstudio.talon
================================================================================


debug next:                      key("f10")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1526. Command apps/platforms/mac/rstudio.talon
================================================================================


debug step into (function|funk): key("shift-f4")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1527. Command apps/platforms/mac/rstudio.talon
================================================================================


debug finish (function|funk):    key("shift-f6")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1528. Command apps/platforms/mac/rstudio.talon
================================================================================


debug continue:                  key("shift-f5")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1529. Command apps/platforms/mac/rstudio.talon
================================================================================


debug stop:                      key("shift-f8")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1530. Command apps/platforms/mac/rstudio.talon
================================================================================


run git diff:                    key("ctrl-alt-d")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1531. Command apps/platforms/mac/rstudio.talon
================================================================================


run git commit:                  key("ctrl-alt-m")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1532. Command apps/platforms/mac/rstudio.talon
================================================================================


# run line and stay:             key("alt-enter")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1533. Command apps/platforms/mac/rstudio.talon
================================================================================


# run and echo all:              key("cmd-shift-enter")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1534. Command apps/platforms/mac/rstudio.talon
================================================================================


# extract (function|funk):       key("cmd-alt-x")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1535. Command apps/platforms/mac/rstudio.talon
================================================================================


# extract variable:              key("cmd-alt-v")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1536. Command apps/platforms/mac/rstudio.talon
================================================================================


# new terminal:                  key("shift-alt-t")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1537. Command apps/platforms/mac/rstudio.talon
================================================================================


# rename current terminal:       key("shift-alt-r")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1538. Command apps/platforms/mac/rstudio.talon
================================================================================


# clear current terminal:        key("ctrl-shift-l")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1539. Command apps/platforms/mac/rstudio.talon
================================================================================


# previous terminal:             key("ctrl-alt-f11")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1540. Command apps/platforms/mac/rstudio.talon
================================================================================


# next terminal:                 key("ctrl-alt-f12")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1541. Command apps/platforms/mac/rstudio.talon
================================================================================


# clear console:                 key("ctrl-l")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1542. Command apps/platforms/mac/rstudio.talon
================================================================================


# popup history:                 key("cmd-up")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1543. Command apps/platforms/mac/rstudio.talon
================================================================================


# change working directory:      key("ctrl-shift-h")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1544. Command apps/platforms/mac/rstudio.talon
================================================================================


# new document:                  key("cmd-shift-n")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1545. Command apps/platforms/mac/rstudio.talon
================================================================================


# new document (chrome only):    key("cmd-shift-alt-n")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1546. Command apps/platforms/mac/rstudio.talon
================================================================================


# insert code section:           key("cmd-shift-r")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1547. Command apps/platforms/mac/rstudio.talon
================================================================================


# scroll diff view:              key("ctrl-up/down")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1548. Command apps/platforms/mac/rstudio.talon
================================================================================


# sync editor & pdf preview:     key("cmd-f8")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1549. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task version: "task --version\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1550. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task commands: "task commands\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1551. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task help: "task help\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1552. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task list: "task list\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1553. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task list orphans: "task project: list\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1554. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task list untagged: "task tags.none: list\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1555. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task list <user.text>: "task list {text}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
1556. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task list project: "task list project: "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1557. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task list project <user.text>: "task list project:{text}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
1558. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task add: "task add "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1559. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task add <user.text>: "task add {text}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
1560. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task undo: "task undo\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1561. Command apps/platforms/linux/taskwarrior.talon
================================================================================


(tasks|task next): "task next\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (seq
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1562. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task <number> edit$: "task {number} edit"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word))
      (end_anchor))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1563. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task <number> done$: "task {number} done"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word))
      (end_anchor))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1564. Command apps/platforms/linux/taskwarrior.talon
================================================================================


task <number> delete$: "task {number} delete"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word))
      (end_anchor))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1565. Command apps/platforms/linux/tmux.talon
================================================================================


mux: "tmux "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1566. Command apps/platforms/linux/tmux.talon
================================================================================


mux new session:
    insert('tmux new ')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1567. Command apps/platforms/linux/tmux.talon
================================================================================


mux sessions:
    key(ctrl-b)
    key(s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1568. Command apps/platforms/linux/tmux.talon
================================================================================


mux name session:
    key(ctrl-b)
    key($)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1569. Command apps/platforms/linux/tmux.talon
================================================================================


mux kill session:
    insert('tmux kill-session -t ')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1570. Command apps/platforms/linux/tmux.talon
================================================================================


mux new window:
    key(ctrl-b)
    key(c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1571. Command apps/platforms/linux/tmux.talon
================================================================================


mux window <number>:
    key(ctrl-b )
    key('{number}')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1572. Command apps/platforms/linux/tmux.talon
================================================================================


mux previous window:
    key(ctrl-b)
    key(p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1573. Command apps/platforms/linux/tmux.talon
================================================================================


mux next window:
    key(ctrl-b)
    key(n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1574. Command apps/platforms/linux/tmux.talon
================================================================================


mux rename window:
    key(ctrl-b)
    key(,)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1575. Command apps/platforms/linux/tmux.talon
================================================================================


mux close window:
    key(ctrl-b)
    key(&)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1576. Command apps/platforms/linux/tmux.talon
================================================================================


mux split horizontal:
    key(ctrl-b)
    key(%)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1577. Command apps/platforms/linux/tmux.talon
================================================================================


mux split vertical:
    key(ctrl-b)
    key(")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1578. Command apps/platforms/linux/tmux.talon
================================================================================


mux next pane:
    key(ctrl-b)
    key(o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1579. Command apps/platforms/linux/tmux.talon
================================================================================


mux move <user.arrow_key>:
    key(ctrl-b)
    key(arrow_key)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1580. Command apps/platforms/linux/tmux.talon
================================================================================


mux close pane:
    key(ctrl-b)
    key(x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1581. Command apps/platforms/linux/tmux.talon
================================================================================


mux pane numbers:
    key(ctrl-b)
    key(q)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1582. Command apps/platforms/linux/atril/atril.talon
================================================================================


tag(): user.pages


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1583. Command apps/platforms/linux/termite.talon
================================================================================


#tag(): user.file_manager


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1584. Command apps/platforms/linux/termite.talon
================================================================================


tag(): user.kubectl


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1585. Command apps/platforms/linux/termite.talon
================================================================================


tag(): user.git


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1586. Command apps/platforms/linux/termite.talon
================================================================================


tag(): user.taskwarrior


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1587. Command apps/platforms/linux/termite.talon
================================================================================


tag(): terminal


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1588. Command apps/platforms/linux/termite.talon
================================================================================


shell yank: key("y")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1589. Command apps/platforms/linux/termite.talon
================================================================================


shell select: key("ctrl-shift-space")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1590. Command apps/platforms/linux/termite.talon
================================================================================


shell insert: key("escape")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1591. Command apps/platforms/linux/termite.talon
================================================================================


visual line: key("v")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1592. Command apps/platforms/linux/termite.talon
================================================================================


visual line mode: key("V")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1593. Command apps/platforms/linux/gnome-terminal/gnome-terminal.talon
================================================================================


tag(): terminal


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1594. Command apps/platforms/linux/gnome-terminal/gnome-terminal.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1595. Command apps/platforms/linux/gnome-terminal/gnome-terminal.talon
================================================================================


tag(): user.generic_unix_shell


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1596. Command apps/platforms/linux/gnome-terminal/gnome-terminal.talon
================================================================================


tag(): user.git


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1597. Command apps/platforms/linux/gnome-terminal/gnome-terminal.talon
================================================================================


tag(): user.kubectl


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1598. Command apps/platforms/linux/nautilus/nautilus.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1599. Command apps/platforms/linux/nautilus/nautilus.talon
================================================================================


tag(): user.file_manager


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1600. Command apps/platforms/linux/kde-konsole/kde-konsole.talon
================================================================================


tag(): terminal


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1601. Command apps/platforms/linux/kde-konsole/kde-konsole.talon
================================================================================


tag(): user.generic_unix_shell


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1602. Command apps/platforms/linux/kde-konsole/kde-konsole.talon
================================================================================


tag(): user.git


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1603. Command apps/platforms/linux/kde-konsole/kde-konsole.talon
================================================================================


tag(): user.anaconda


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1604. Command apps/platforms/linux/kde-konsole/kde-konsole.talon
================================================================================


# tag(): user.kubectl


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1605. Command apps/platforms/linux/kde-konsole/kde-konsole.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1606. Command apps/platforms/linux/kde-konsole/kde-konsole.talon
================================================================================


# TODO: add file_manager support


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1607. Command apps/platforms/linux/evince/evince.talon
================================================================================


tag(): user.pages


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1608. Command apps/platforms/linux/signal.talon
================================================================================


show shortcuts: key("ctrl-/")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1609. Command apps/platforms/linux/signal.talon
================================================================================


(next|nav|navigate) [by] (sec|section): key("ctrl-t")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1610. Command apps/platforms/linux/signal.talon
================================================================================


(prev|previous) (chat|conversation): key("alt-down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1611. Command apps/platforms/linux/signal.talon
================================================================================


next (chat|conversation): key("alt-up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1612. Command apps/platforms/linux/signal.talon
================================================================================


(prev|previous) unread: key("alt-shift-down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1613. Command apps/platforms/linux/signal.talon
================================================================================


next unread: key("alt-shift-up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1614. Command apps/platforms/linux/signal.talon
================================================================================


[open] (pref|preferences): key("ctrl-,")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1615. Command apps/platforms/linux/signal.talon
================================================================================


open conversation menu: key("ctrl-shift-l")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1616. Command apps/platforms/linux/signal.talon
================================================================================


search: key("ctrl-f")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1617. Command apps/platforms/linux/signal.talon
================================================================================


search chat: key("ctrl-shift-f")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1618. Command apps/platforms/linux/signal.talon
================================================================================


focus (chat|composer): key("ctrl-shift-t")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1619. Command apps/platforms/linux/signal.talon
================================================================================


open media: key("ctrl-shift-m")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1620. Command apps/platforms/linux/signal.talon
================================================================================


open emoji: key("ctrl-shift-j")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1621. Command apps/platforms/linux/signal.talon
================================================================================


open sticker: key("ctrl-shift-s")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1622. Command apps/platforms/linux/signal.talon
================================================================================


record [voice] message: key("ctrl-shift-v")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1623. Command apps/platforms/linux/signal.talon
================================================================================


archive chat: key("ctrl-shift-a")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1624. Command apps/platforms/linux/signal.talon
================================================================================


unarchive chat: key("ctrl-shift-u")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1625. Command apps/platforms/linux/signal.talon
================================================================================


(first|top) message: key("ctrl-up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1626. Command apps/platforms/linux/signal.talon
================================================================================


(last|bottom) message: key("ctrl-down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1627. Command apps/platforms/linux/signal.talon
================================================================================


close chat: key("ctrl-shift-c")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1628. Command apps/platforms/linux/signal.talon
================================================================================


send it: key("enter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1629. Command apps/platforms/linux/signal.talon
================================================================================


message details: key("ctrl-d")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1630. Command apps/platforms/linux/signal.talon
================================================================================


reply [message]: key("ctrl-shift-r")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1631. Command apps/platforms/linux/signal.talon
================================================================================


react [message]: key("ctrl-shift-e")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1632. Command apps/platforms/linux/signal.talon
================================================================================


save attachment: key("ctrl-s")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1633. Command apps/platforms/linux/signal.talon
================================================================================


delete [message]: key("ctrl-shift-d")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1634. Command apps/platforms/linux/signal.talon
================================================================================


send message: key("ctrl-enter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1635. Command apps/platforms/linux/signal.talon
================================================================================


expand chat: key("ctrl-shift-x")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1636. Command apps/platforms/linux/signal.talon
================================================================================


attach [file]: key("ctrl-u")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1637. Command apps/platforms/linux/signal.talon
================================================================================


remove [link] preview: key("ctrl-p")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1638. Command apps/platforms/linux/signal.talon
================================================================================


remove [link] attachment: key("ctrl-shift-p")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1639. Command apps/platforms/linux/dunst.talon
================================================================================


show notifications: key(ctrl-`)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1640. Command apps/platforms/linux/dunst.talon
================================================================================


dismiss [notifications]: user.system_command('dunstctl close')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1641. Command apps/platforms/linux/dunst.talon
================================================================================


dismiss all [notifications]: user.system_command('dunstctl close-all')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1642. Command apps/platforms/linux/dunst.talon
================================================================================


#dunce pause: user.system_command('notify-send "DUNST_COMMAND_PAUSE"')


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1643. Command apps/platforms/linux/dunst.talon
================================================================================


#dunce resume: user.system_command('notify-send "DUNST_COMMAND_RESUME"')


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1644. Command apps/platforms/linux/dunst.talon
================================================================================


#test notification: user.system_command('notify-send "Hello from Talon"')


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1645. Command apps/platforms/linux/keepassx.talon
================================================================================


open database: key(ctrl-o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1646. Command apps/platforms/linux/keepassx.talon
================================================================================


save database: key(ctrl-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1647. Command apps/platforms/linux/keepassx.talon
================================================================================


close database: key(ctrl-w)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1648. Command apps/platforms/linux/keepassx.talon
================================================================================


lock database: key(ctrl-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1649. Command apps/platforms/linux/keepassx.talon
================================================================================


quit: key(ctrl-q)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1650. Command apps/platforms/linux/keepassx.talon
================================================================================


[add] new entry: key(ctrl-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1651. Command apps/platforms/linux/keepassx.talon
================================================================================


clone entry: key(ctrl-k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1652. Command apps/platforms/linux/keepassx.talon
================================================================================


(view|edit) entry: key(ctrl-e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1653. Command apps/platforms/linux/keepassx.talon
================================================================================


delete entry: key(ctrl-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1654. Command apps/platforms/linux/keepassx.talon
================================================================================


copy user [name]: key(ctrl-b)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1655. Command apps/platforms/linux/keepassx.talon
================================================================================


copy password: key(ctrl-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1656. Command apps/platforms/linux/keepassx.talon
================================================================================


open (earl|url|link): key(ctrl-u)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1657. Command apps/platforms/linux/keepassx.talon
================================================================================


copy (earl|url|link): key(ctrl-alt-u)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1658. Command apps/platforms/linux/keepassx.talon
================================================================================


find: key(ctrl-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1659. Command apps/platforms/linux/keepassx.talon
================================================================================


find <user.text>:
    key(ctrl-f)
    insert("{text}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
1660. Command apps/gdb/gdb.talon
================================================================================


tag(): user.gdb


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1661. Command apps/gdb/gdb.talon
================================================================================


tag(): user.debugger


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1662. Command apps/gdb/gdb.talon
================================================================================


until <number>: "until {number}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1663. Command apps/gdb/gdb.talon
================================================================================


force clear all break points:
    insert("d br\n")
    insert("y\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence))))))))

================================================================================
1664. Command apps/gdb/gdb.talon
================================================================================


break [on] clipboard:
    insert("break ")
    key(ctrl-shift-v)
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1665. Command apps/gdb/gdb.talon
================================================================================


list [source]: "list\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1666. Command apps/gdb/gdb.talon
================================================================================


info source: "info source\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1667. Command apps/gdb/gdb.talon
================================================================================


print: "p "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1668. Command apps/gdb/gdb.talon
================================================================================


print [variable] <user.text>: "p {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1669. Command apps/gdb/gdb.talon
================================================================================


print hex: "p/x "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1670. Command apps/gdb/gdb.talon
================================================================================


print hex [variable] <user.text>: "p/x {text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1671. Command apps/gdb/gdb.talon
================================================================================


print string: "p/s "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1672. Command apps/gdb/gdb.talon
================================================================================


hex dump <number> bytes: "x/{number}bx "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1673. Command apps/gdb/gdb.talon
================================================================================


hex dump <number> (half|short) words: "x/{number}hx "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1674. Command apps/gdb/gdb.talon
================================================================================


hex dump <number> (d|long) words: "x/{number}dx "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1675. Command apps/gdb/gdb.talon
================================================================================


hex dump <number> quad words: "x/{number}gx "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
1676. Command apps/gdb/gdb.talon
================================================================================


hex dump: "x/100gx "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1677. Command apps/gdb/gdb.talon
================================================================================


hex dump highlighted:
    insert("x/100gx ")
    edit.copy()
    edit.paste()
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1678. Command apps/gdb/gdb.talon
================================================================================


hex dump clipboard:
    insert("x/100gx ")
    edit.paste()
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1679. Command apps/gdb/gdb.talon
================================================================================


source: "source \t\t"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence)
          (string_escape_sequence))))))

================================================================================
1680. Command apps/gdb/gdb.talon
================================================================================


(list|show|info) display: "info display\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1681. Command apps/gdb/gdb.talon
================================================================================


display assembly line$: "display /i $pc\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1682. Command apps/gdb/gdb.talon
================================================================================


display source: "display "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1683. Command apps/gdb/gdb.talon
================================================================================


enable display <number_small>: "enable display {number_small}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
1684. Command apps/gdb/gdb.talon
================================================================================


disable display <number_small>: "disable display {number_small}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
1685. Command apps/gdb/gdb.talon
================================================================================


undisplay: "undisplay\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1686. Command apps/gdb/gdb.talon
================================================================================


(list|show|info) local: "info local "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1687. Command apps/gdb/gdb.talon
================================================================================


(list|show|info) local typed: "info local -t "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1688. Command apps/gdb/gdb.talon
================================================================================


(list|show|info) variable: "info variable "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1689. Command apps/gdb/gdb.talon
================================================================================


(list|show|info) variable typed: "info variable -t "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1690. Command apps/gdb/gdb.talon
================================================================================


(list|show|info) locals: "info local\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1691. Command apps/gdb/gdb.talon
================================================================================


(list|show|info) variables: "info variables\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1692. Command apps/gdb/gdb.talon
================================================================================


info threads: "info threads\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1693. Command apps/gdb/gdb.talon
================================================================================


restart [program]: "r\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1694. Command apps/gdb/gdb.talon
================================================================================


continue: "c\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1695. Command apps/gdb/gdb.talon
================================================================================


back trace: "bt\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1696. Command apps/gdb/gdb.talon
================================================================================


debug quit: "quit\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1697. Command apps/gdb/gdb.talon
================================================================================


debug force quit: "quit\ny\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence)
          (string_content)
          (string_escape_sequence))))))

================================================================================
1698. Command apps/gdb/gdb.talon
================================================================================


(show|info) (inf|inferiors): "info inferiors\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1699. Command apps/gdb/gdb.talon
================================================================================


inferior <number_small>$: "inferior {number_small}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
1700. Command apps/gdb/gdb.talon
================================================================================


inferior: "inferior "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1701. Command apps/gdb/gdb.talon
================================================================================


resume main (inf|inferior):
    insert("inferior 1\n")
    insert("c\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence))))))))

================================================================================
1702. Command apps/gdb/gdb.talon
================================================================================


resume [from] (inf|inferior) <number_small>$:
    insert("inferior {number_small}\n")
    insert("c\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_escape_sequence)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence))))))))

================================================================================
1703. Command apps/gdb/gdb.talon
================================================================================


set args: "set args "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
1704. Command apps/gdb/gdb.talon
================================================================================


show follow (fork|forks) [mode]: "show follow-fork-mode\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1705. Command apps/gdb/gdb.talon
================================================================================


[set] follow (fork|forks) [mode] child: "set follow-fork-mode child\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1706. Command apps/gdb/gdb.talon
================================================================================


[set] follow (fork|forks) [mode] parent: "set follow-fork-mode parent\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1707. Command apps/gdb/gdb.talon
================================================================================


show detach on fork: "show detach-on-fork\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1708. Command apps/gdb/gdb.talon
================================================================================


set detach on fork: "set detach-on-fork on\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1709. Command apps/gdb/gdb.talon
================================================================================


unset detach on fork: "set detach-on-fork off\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1710. Command apps/gdb/gdb.talon
================================================================================


show list size: "show listsize\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1711. Command apps/gdb/gdb.talon
================================================================================


set list size <number_small>: "set listsize {number_small}\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_escape_sequence))))))

================================================================================
1712. Command apps/gdb/gdb.talon
================================================================================


clear screen: "shell clear\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
1713. Command apps/discord/discord.talon
================================================================================


tag(): user.messaging


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1714. Command apps/discord/discord.talon
================================================================================


tag(): user.emoji


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1715. Command apps/discord/discord.talon
================================================================================


# Navigation: Channels


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1716. Command apps/discord/discord.talon
================================================================================


[channel] mentions last: user.discord_mentions_last()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1717. Command apps/discord/discord.talon
================================================================================


[channel] mentions next: user.discord_mentions_next()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1718. Command apps/discord/discord.talon
================================================================================


oldest unread: user.discord_oldest_unread()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1719. Command apps/discord/discord.talon
================================================================================


toggle pins: user.discord_toggle_pins()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1720. Command apps/discord/discord.talon
================================================================================


toggle inbox: user.discord_toggle_inbox()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1721. Command apps/discord/discord.talon
================================================================================


toggle (members | member list): user.discord_toggle_members()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1722. Command apps/discord/discord.talon
================================================================================


pick emoji: user.discord_emoji_picker()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1723. Command apps/discord/discord.talon
================================================================================


pick (jif | gif | gift): user.discord_gif_picker()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1724. Command apps/discord/discord.talon
================================================================================


mark inbox channel read: user.discord_mark_inbox_read()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1725. Command apps/discord/discord.talon
================================================================================


[toggle] (mute | unmute): user.discord_mute()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1726. Command apps/discord/discord.talon
================================================================================


[toggle] (deafen | undeafen): user.discord_deafen()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1727. Command apps/discord/discord.talon
================================================================================


answer call: user.discord_answer_call()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1728. Command apps/discord/discord.talon
================================================================================


decline call: user.discord_decline_call()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
1729. Command apps/eclipse/eclipse.talon
================================================================================


tag(): user.find_and_replace


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1730. Command apps/eclipse/eclipse.talon
================================================================================


tag(): user.line_commands


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1731. Command apps/eclipse/eclipse.talon
================================================================================


# tag(): user.multiple_cursors


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1732. Command apps/eclipse/eclipse.talon
================================================================================


# tag(): user.snippets


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1733. Command apps/eclipse/eclipse.talon
================================================================================


tag(): user.splits


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1734. Command apps/eclipse/eclipse.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1735. Command apps/eclipse/eclipse.talon
================================================================================


please [<user.text>]:
    key(ctrl-3)
    insert(user.text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
1736. Command apps/eclipse/eclipse.talon
================================================================================


bar explore: key(alt-shift-w p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1737. Command apps/eclipse/eclipse.talon
================================================================================


# bar extensions:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1738. Command apps/eclipse/eclipse.talon
================================================================================


bar outline: key(alt-shift-q o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1739. Command apps/eclipse/eclipse.talon
================================================================================


# bar run:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1740. Command apps/eclipse/eclipse.talon
================================================================================


# bar source:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1741. Command apps/eclipse/eclipse.talon
================================================================================


# bar switch:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1742. Command apps/eclipse/eclipse.talon
================================================================================


# panel control:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1743. Command apps/eclipse/eclipse.talon
================================================================================


panel output:
    key(alt-shift-q)
    sleep(200ms)
    key(c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1744. Command apps/eclipse/eclipse.talon
================================================================================


panel problems:
    key(alt-shift-q)
    sleep(200ms)
    key(x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1745. Command apps/eclipse/eclipse.talon
================================================================================


panel errors:
    key(alt-shift-q)
    sleep(200ms)
    key(l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1746. Command apps/eclipse/eclipse.talon
================================================================================


panel breakpoints:
    key(alt-shift-q)
    sleep(200ms)
    key(b)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1747. Command apps/eclipse/eclipse.talon
================================================================================


panel search:
    key(alt-shift-q)
    sleep(200ms)
    key(s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1748. Command apps/eclipse/eclipse.talon
================================================================================


panel variables:
    key(alt-shift-q)
    sleep(200ms)
    key(v)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1749. Command apps/eclipse/eclipse.talon
================================================================================


# panel switch:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1750. Command apps/eclipse/eclipse.talon
================================================================================


# panel terminal:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1751. Command apps/eclipse/eclipse.talon
================================================================================


show settings: key(alt-w p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1752. Command apps/eclipse/eclipse.talon
================================================================================


show shortcuts: key(ctrl-shift-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1753. Command apps/eclipse/eclipse.talon
================================================================================


#show snippets:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1754. Command apps/eclipse/eclipse.talon
================================================================================


# centered switch:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1755. Command apps/eclipse/eclipse.talon
================================================================================


# fullscreen switch:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1756. Command apps/eclipse/eclipse.talon
================================================================================


# theme switch:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1757. Command apps/eclipse/eclipse.talon
================================================================================


# wrap switch:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1758. Command apps/eclipse/eclipse.talon
================================================================================


# zen switch:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1759. Command apps/eclipse/eclipse.talon
================================================================================


file hunt [<user.text>]:
    key(ctrl-shift-r)
    sleep(50ms)
    insert(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
1760. Command apps/eclipse/eclipse.talon
================================================================================


# file copy path:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1761. Command apps/eclipse/eclipse.talon
================================================================================


# file create sibling:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1762. Command apps/eclipse/eclipse.talon
================================================================================


file create: key(ctrl-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1763. Command apps/eclipse/eclipse.talon
================================================================================


file open folder: key(alt-shift-w x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1764. Command apps/eclipse/eclipse.talon
================================================================================


file rename:
    key(alt-shift-w p enter f2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1765. Command apps/eclipse/eclipse.talon
================================================================================


file reveal: key(alt-shift-w p enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1766. Command apps/eclipse/eclipse.talon
================================================================================


# suggest show:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1767. Command apps/eclipse/eclipse.talon
================================================================================


# hint show:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1768. Command apps/eclipse/eclipse.talon
================================================================================


# definition show:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1769. Command apps/eclipse/eclipse.talon
================================================================================


# definition peek:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1770. Command apps/eclipse/eclipse.talon
================================================================================


# definition side:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1771. Command apps/eclipse/eclipse.talon
================================================================================


# references show:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1772. Command apps/eclipse/eclipse.talon
================================================================================


# references find:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1773. Command apps/eclipse/eclipse.talon
================================================================================


# format that:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1774. Command apps/eclipse/eclipse.talon
================================================================================


# format selection:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1775. Command apps/eclipse/eclipse.talon
================================================================================


imports fix: key(ctrl-shift-o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1776. Command apps/eclipse/eclipse.talon
================================================================================


# problem last:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1777. Command apps/eclipse/eclipse.talon
================================================================================


# problem fix:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1778. Command apps/eclipse/eclipse.talon
================================================================================


# rename that:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1779. Command apps/eclipse/eclipse.talon
================================================================================


# refactor that:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1780. Command apps/eclipse/eclipse.talon
================================================================================


# whitespace trim:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1781. Command apps/eclipse/eclipse.talon
================================================================================


# language switch:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1782. Command apps/eclipse/eclipse.talon
================================================================================


refactor rename: key(alt-shift-r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1783. Command apps/eclipse/eclipse.talon
================================================================================


refactor this: key(alt-shift-i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1784. Command apps/eclipse/eclipse.talon
================================================================================


(go declaration | follow): key(f3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1785. Command apps/eclipse/eclipse.talon
================================================================================


go back: key(alt-left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1786. Command apps/eclipse/eclipse.talon
================================================================================


go forward: key(alt-right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1787. Command apps/eclipse/eclipse.talon
================================================================================


# go implementation:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1788. Command apps/eclipse/eclipse.talon
================================================================================


# go recent:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1789. Command apps/eclipse/eclipse.talon
================================================================================


# go type:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1790. Command apps/eclipse/eclipse.talon
================================================================================


# go usage:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1791. Command apps/eclipse/eclipse.talon
================================================================================


#requires https://marketplace.eclipse.org/content/quick-bookmarks


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1792. Command apps/eclipse/eclipse.talon
================================================================================


go marks: key(alt-end)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1793. Command apps/eclipse/eclipse.talon
================================================================================


toggle mark: key(ctrl-alt-b down enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1794. Command apps/eclipse/eclipse.talon
================================================================================


go next mark: key(alt-pagedown)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1795. Command apps/eclipse/eclipse.talon
================================================================================


go last mark: key(alt-pageup)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1796. Command apps/eclipse/eclipse.talon
================================================================================


# fold that:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1797. Command apps/eclipse/eclipse.talon
================================================================================


# unfold that:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1798. Command apps/eclipse/eclipse.talon
================================================================================


# fold those:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1799. Command apps/eclipse/eclipse.talon
================================================================================


# unfold those:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1800. Command apps/eclipse/eclipse.talon
================================================================================


# fold all:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1801. Command apps/eclipse/eclipse.talon
================================================================================


# unfold all:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1802. Command apps/eclipse/eclipse.talon
================================================================================


# fold comments:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1803. Command apps/eclipse/eclipse.talon
================================================================================


break point: key(ctrl-shift-b)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1804. Command apps/eclipse/eclipse.talon
================================================================================


step over: key(f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1805. Command apps/eclipse/eclipse.talon
================================================================================


debug step into: key(f5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1806. Command apps/eclipse/eclipse.talon
================================================================================


debug step out [of]: key(f7)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1807. Command apps/eclipse/eclipse.talon
================================================================================


#debug start: user.vscode("workbench.action.debug.start")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1808. Command apps/eclipse/eclipse.talon
================================================================================


#debug pause:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1809. Command apps/eclipse/eclipse.talon
================================================================================


#debug stopper:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1810. Command apps/eclipse/eclipse.talon
================================================================================


debug continue: key(f8)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1811. Command apps/eclipse/eclipse.talon
================================================================================


#debug restart:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1812. Command apps/eclipse/eclipse.talon
================================================================================


# terminal external: user.vscode("workbench.action.terminal.openNativeConsole")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1813. Command apps/eclipse/eclipse.talon
================================================================================


# terminal new: user.vscode("workbench.action.terminal.new")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1814. Command apps/eclipse/eclipse.talon
================================================================================


# terminal next: user.vscode("workbench.action.terminal.focusNextPane")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1815. Command apps/eclipse/eclipse.talon
================================================================================


# terminal last:user.vscode("workbench.action.terminal.focusPreviousPane")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1816. Command apps/eclipse/eclipse.talon
================================================================================


# terminal split: user.vscode("workbench.action.terminal.split")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1817. Command apps/eclipse/eclipse.talon
================================================================================


# terminal trash: user.vscode("Terminal:Kill")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1818. Command apps/eclipse/eclipse.talon
================================================================================


# terminal scroll up: user.vscode("Terminal:ScrollUp")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1819. Command apps/eclipse/eclipse.talon
================================================================================


# terminal scroll down: user.vscode("Terminal:ScrollDown")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1820. Command apps/eclipse/eclipse.talon
================================================================================


#TODO: should this be added to linecommands?


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1821. Command apps/eclipse/eclipse.talon
================================================================================


copy line down: key(ctrl-alt-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1822. Command apps/eclipse/eclipse.talon
================================================================================


copy line up: key(ctrl-alt-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1823. Command apps/visualstudio/visual_studio.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1824. Command apps/visualstudio/visual_studio.talon
================================================================================


tag(): user.line_commands


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1825. Command apps/visualstudio/visual_studio.talon
================================================================================


tag(): user.find_and_replace


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1826. Command apps/visualstudio/visual_studio.talon
================================================================================


tag(): user.snippets


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1827. Command apps/visualstudio/visual_studio.talon
================================================================================


tag(): user.multiple_cursors


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
1828. Command apps/visualstudio/visual_studio.talon
================================================================================


panel solution: key(ctrl-alt-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1829. Command apps/visualstudio/visual_studio.talon
================================================================================


panel properties: key(f4)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1830. Command apps/visualstudio/visual_studio.talon
================================================================================


panel output: key(ctrl-alt-o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1831. Command apps/visualstudio/visual_studio.talon
================================================================================


panel class: key(ctrl-shift-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1832. Command apps/visualstudio/visual_studio.talon
================================================================================


panel errors: key(ctrl-\ ctrl-e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1833. Command apps/visualstudio/visual_studio.talon
================================================================================


panel design: key(shift-f7)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1834. Command apps/visualstudio/visual_studio.talon
================================================================================


panel marks: key(ctrl-k ctrl-w)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1835. Command apps/visualstudio/visual_studio.talon
================================================================================


panel breakpoints: key(ctrl-alt-b)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1836. Command apps/visualstudio/visual_studio.talon
================================================================================


show settings: key(alt-t o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1837. Command apps/visualstudio/visual_studio.talon
================================================================================


#show shortcuts:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1838. Command apps/visualstudio/visual_studio.talon
================================================================================


#show snippets:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1839. Command apps/visualstudio/visual_studio.talon
================================================================================


fullscreen switch: key(shift-alt-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1840. Command apps/visualstudio/visual_studio.talon
================================================================================


wrap switch: key(ctrl-e ctrl-w)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1841. Command apps/visualstudio/visual_studio.talon
================================================================================


file hunt [<user.text>]:
    key(ctrl-shift-t)
    insert(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
1842. Command apps/visualstudio/visual_studio.talon
================================================================================


file create: key(ctrl-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1843. Command apps/visualstudio/visual_studio.talon
================================================================================


#file open folder:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1844. Command apps/visualstudio/visual_studio.talon
================================================================================


file rename: key(ctrl-[ s f2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1845. Command apps/visualstudio/visual_studio.talon
================================================================================


file reveal: key(ctrl-[ s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1846. Command apps/visualstudio/visual_studio.talon
================================================================================


hint show: key(ctrl-shift-space)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1847. Command apps/visualstudio/visual_studio.talon
================================================================================


definition show: key(f12)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1848. Command apps/visualstudio/visual_studio.talon
================================================================================


definition peek: key(alt-f12)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1849. Command apps/visualstudio/visual_studio.talon
================================================================================


references find: key(shift-f12)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1850. Command apps/visualstudio/visual_studio.talon
================================================================================


format that: key(ctrl-k ctrl-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1851. Command apps/visualstudio/visual_studio.talon
================================================================================


format selection: key(ctrl-k ctrl-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1852. Command apps/visualstudio/visual_studio.talon
================================================================================


imports fix: key(ctrl-r ctrl-g)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1853. Command apps/visualstudio/visual_studio.talon
================================================================================


# problem next:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1854. Command apps/visualstudio/visual_studio.talon
================================================================================


# problem last:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1855. Command apps/visualstudio/visual_studio.talon
================================================================================


# problem fix:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
1856. Command apps/visualstudio/visual_studio.talon
================================================================================


refactor field: key(ctrl-r ctrl-e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1857. Command apps/visualstudio/visual_studio.talon
================================================================================


refactor interface: key(ctrl-r ctrl-i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1858. Command apps/visualstudio/visual_studio.talon
================================================================================


refactor method: key(ctrl-r ctrl-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1859. Command apps/visualstudio/visual_studio.talon
================================================================================


refactor reorder parameters: key(ctrl-r ctrl-o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1860. Command apps/visualstudio/visual_studio.talon
================================================================================


refactor remove parameters: key(ctrl-r ctrl-v)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1861. Command apps/visualstudio/visual_studio.talon
================================================================================


refactor that: key(ctrl-r ctrl-r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1862. Command apps/visualstudio/visual_studio.talon
================================================================================


(go declaration | follow): key(ctrl-f12)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1863. Command apps/visualstudio/visual_studio.talon
================================================================================


go back: key(ctrl--)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1864. Command apps/visualstudio/visual_studio.talon
================================================================================


go forward: key(ctrl-shift--)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1865. Command apps/visualstudio/visual_studio.talon
================================================================================


go implementation: key(f12)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1866. Command apps/visualstudio/visual_studio.talon
================================================================================


go recent [<user.text>]:
    key(ctrl-1 ctrl-r)
    sleep(100ms)
    insert(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
1867. Command apps/visualstudio/visual_studio.talon
================================================================================


go type [<user.text>]:
    key(ctrl-1 ctrl-t)
    sleep(100ms)
    insert(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
1868. Command apps/visualstudio/visual_studio.talon
================================================================================


go member [<user.text>]:
    key(alt-\)
    sleep(100ms)
    insert(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
1869. Command apps/visualstudio/visual_studio.talon
================================================================================


go usage: key(shift-f12)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1870. Command apps/visualstudio/visual_studio.talon
================================================================================


go marks: key(ctrl-k ctrl-w)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1871. Command apps/visualstudio/visual_studio.talon
================================================================================


toggle mark: key(ctrl-k ctrl-k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1872. Command apps/visualstudio/visual_studio.talon
================================================================================


go next mark: key(ctrl-k ctrl-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1873. Command apps/visualstudio/visual_studio.talon
================================================================================


go last mark: key(ctrl-k ctrl-p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1874. Command apps/visualstudio/visual_studio.talon
================================================================================


fold toggle: key(ctrl-m ctrl-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1875. Command apps/visualstudio/visual_studio.talon
================================================================================


fold toggle all: key(ctrl-m ctrl-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1876. Command apps/visualstudio/visual_studio.talon
================================================================================


fold definitions: key(ctrl-m ctrl-o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1877. Command apps/visualstudio/visual_studio.talon
================================================================================


break point: key(f9)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1878. Command apps/visualstudio/visual_studio.talon
================================================================================


step over: key(f10)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1879. Command apps/visualstudio/visual_studio.talon
================================================================================


debug step into: key(f11)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1880. Command apps/visualstudio/visual_studio.talon
================================================================================


debug step out [of]: key(f10)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1881. Command apps/visualstudio/visual_studio.talon
================================================================================


debug start: key(f5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1882. Command apps/visualstudio/visual_studio.talon
================================================================================


debug stopper: key(shift-f5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1883. Command apps/visualstudio/visual_studio.talon
================================================================================


debug continue: key(f5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1884. Command apps/evernote/mac.talon
================================================================================


settings():
    # Necessary to stop commands like 'slap' getting jumbled
    key_wait = 9.0


--------------------------------------------------------------------------------

(source_file
  (settings
    (comment)
    (block
      (assignment
        (identifier)
        (float)))))

================================================================================
1885. Command apps/web/github.talon
================================================================================


focus search: key(s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1886. Command apps/web/github.talon
================================================================================


go to notifications: insert("gn")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1887. Command apps/web/github.talon
================================================================================


go to dashboard: insert("gd")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1888. Command apps/web/github.talon
================================================================================


(keyboard shortcuts show | show keyboard shortcuts): key(?)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word)
            (word))
          (seq
            (word)
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1889. Command apps/web/github.talon
================================================================================


(selection move down | move selection down): key(j)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word)
            (word))
          (seq
            (word)
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1890. Command apps/web/github.talon
================================================================================


(selection move up | move selection up): key(k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word)
            (word))
          (seq
            (word)
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1891. Command apps/web/github.talon
================================================================================


(selection toggle | toggle selection): key(x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1892. Command apps/web/github.talon
================================================================================


(selection open | open selection): key(o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1893. Command apps/web/github.talon
================================================================================


go to code: insert("gc")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1894. Command apps/web/github.talon
================================================================================


go to issues: insert("gi")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1895. Command apps/web/github.talon
================================================================================


go to pull requests: insert("gp")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1896. Command apps/web/github.talon
================================================================================


go to wiki: insert("gw")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1897. Command apps/web/github.talon
================================================================================


go to actions: insert("ga")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1898. Command apps/web/github.talon
================================================================================


go to projects: insert("gb")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1899. Command apps/web/github.talon
================================================================================


go to discussions: insert("gg")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1900. Command apps/web/github.talon
================================================================================


[web] editor open: key(.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1901. Command apps/web/github.talon
================================================================================


(file find | find file): key(t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1902. Command apps/web/github.talon
================================================================================


jump to line: key(l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1903. Command apps/web/github.talon
================================================================================


((branch|tag) switch | switch (branch|tag)): key(w)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (parenthesized_rule
              (choice
                (word)
                (word)))
            (word))
          (seq
            (word)
            (parenthesized_rule
              (choice
                (word)
                (word)))))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1904. Command apps/web/github.talon
================================================================================


(url expand | expand url): key(y)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1905. Command apps/web/github.talon
================================================================================


(show|hide) comments: key(i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1906. Command apps/web/github.talon
================================================================================


blame view open: key(b)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1907. Command apps/web/github.talon
================================================================================


(show|hide) annotations: key(a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1908. Command apps/web/github.talon
================================================================================


(issue create | create [an] issue): key(c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (optional
              (word))
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1909. Command apps/web/github.talon
================================================================================


search (issues|[pull] requests): key(/)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (optional
                (word))
              (word))))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1910. Command apps/web/github.talon
================================================================================


(filter by|edit) labels: key(l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1911. Command apps/web/github.talon
================================================================================


(filter by|edit) milestones: key(m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1912. Command apps/web/github.talon
================================================================================


(filter by|edit) assignee: key(a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1913. Command apps/web/github.talon
================================================================================


reply: key(r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1914. Command apps/web/github.talon
================================================================================


(comment submit | submit comment): key(ctrl-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1915. Command apps/web/github.talon
================================================================================


(comment preview | preview comment): key(ctrl-shift-p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1916. Command apps/web/github.talon
================================================================================


git hub full screen: key(ctrl-shift-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1917. Command apps/web/github.talon
================================================================================


(form close | close form): key(escape)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1918. Command apps/web/github.talon
================================================================================


parent commit: key(p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1919. Command apps/web/github.talon
================================================================================


other parent commit: key(o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1920. Command apps/web/github.talon
================================================================================


mark as read: key(y)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1921. Command apps/web/github.talon
================================================================================


(thread mute | mute thread): key(shift-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1922. Command apps/web/github.talon
================================================================================


(issue open | open issue): key(o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1923. Command apps/web/github.talon
================================================================================


(issue create | create issue): key(c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1924. Command apps/web/github.talon
================================================================================


reviewer request: key(q)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1925. Command apps/web/github.talon
================================================================================


milestone set: key(m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1926. Command apps/web/github.talon
================================================================================


assignee set: key(a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1927. Command apps/web/github.talon
================================================================================


label set: key(l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1928. Command apps/web/github.talon
================================================================================


go to workflow: insert("gf")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1929. Command apps/web/github.talon
================================================================================


timestamps toggle: key(shift-t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1930. Command apps/web/github.talon
================================================================================


fullscreen toggle: key(shift-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1931. Command apps/web/twitter.talon
================================================================================


(show shortcuts|shortcuts help): key(?)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1932. Command apps/web/twitter.talon
================================================================================


next tweet: key(j)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1933. Command apps/web/twitter.talon
================================================================================


previous tweet: key(k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1934. Command apps/web/twitter.talon
================================================================================


page down: key(space)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1935. Command apps/web/twitter.talon
================================================================================


load new tweet: key(.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1936. Command apps/web/twitter.talon
================================================================================


go home: insert("gh")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1937. Command apps/web/twitter.talon
================================================================================


go explore: insert("ge")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1938. Command apps/web/twitter.talon
================================================================================


go notifications: insert("gn")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1939. Command apps/web/twitter.talon
================================================================================


go mentions: insert("gr")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1940. Command apps/web/twitter.talon
================================================================================


go profile: insert("gp")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1941. Command apps/web/twitter.talon
================================================================================


go likes: insert("gl")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1942. Command apps/web/twitter.talon
================================================================================


go lists: insert("gi")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1943. Command apps/web/twitter.talon
================================================================================


go direct messages: insert("gm")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1944. Command apps/web/twitter.talon
================================================================================


go settings: insert("gs")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1945. Command apps/web/twitter.talon
================================================================================


go book marks: insert("gb")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1946. Command apps/web/twitter.talon
================================================================================


go to user: insert("gu")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1947. Command apps/web/twitter.talon
================================================================================


display settings: insert("gd")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
1948. Command apps/web/twitter.talon
================================================================================


new tweet: key(n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1949. Command apps/web/twitter.talon
================================================================================


send tweet: key(ctrl-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1950. Command apps/web/twitter.talon
================================================================================


new direct message: key(m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1951. Command apps/web/twitter.talon
================================================================================


search: key(/)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1952. Command apps/web/twitter.talon
================================================================================


like message: key(l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1953. Command apps/web/twitter.talon
================================================================================


reply message: key(r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1954. Command apps/web/twitter.talon
================================================================================


re tweet [message]: key(t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1955. Command apps/web/twitter.talon
================================================================================


share tweet: key(s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1956. Command apps/web/twitter.talon
================================================================================


bookmark: key(b)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1957. Command apps/web/twitter.talon
================================================================================


mute account: key(urge)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1958. Command apps/web/twitter.talon
================================================================================


block account: key(x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1959. Command apps/web/twitter.talon
================================================================================


open details: key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1960. Command apps/web/twitter.talon
================================================================================


expand photo: key(o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1961. Command apps/web/outlook.talon
================================================================================


new message: key(n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1962. Command apps/web/outlook.talon
================================================================================


send [this] message: key(alt-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1963. Command apps/web/outlook.talon
================================================================================


reply [to] [this] message: key(r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1964. Command apps/web/outlook.talon
================================================================================


reply all [to] [this] message: key(ctrl-shift-r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1965. Command apps/web/outlook.talon
================================================================================


forward [this] message: key(ctrl-shift-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1966. Command apps/web/outlook.talon
================================================================================


save [draft]: key(ctrl-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1967. Command apps/web/outlook.talon
================================================================================


discard [draft]: key(esc)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1968. Command apps/web/outlook.talon
================================================================================


insert [a] [hyper] link: key(ctrl-k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1969. Command apps/web/outlook.talon
================================================================================


(select|unselect) [this] message: key(ctrl-space)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1970. Command apps/web/outlook.talon
================================================================================


select all [messages]: key(ctrl-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1971. Command apps/web/outlook.talon
================================================================================


clear all [messages]: key(esc)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1972. Command apps/web/outlook.talon
================================================================================


select first [message]: key(home)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1973. Command apps/web/outlook.talon
================================================================================


select last [message]: key(and)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1974. Command apps/web/outlook.talon
================================================================================


open [this] message: key(o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1975. Command apps/web/outlook.talon
================================================================================


open [this] message [in] [a] new window: key(shift-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (optional
          (word))
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1976. Command apps/web/outlook.talon
================================================================================


close [this] message: key(esc)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1977. Command apps/web/outlook.talon
================================================================================


[open] [the] next (item|message): key(ctrl-.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1978. Command apps/web/outlook.talon
================================================================================


[open] [the] (prev|previous) item: key(ctrl-,)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1979. Command apps/web/outlook.talon
================================================================================


next reading [pane] (item|message): key(.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1980. Command apps/web/outlook.talon
================================================================================


(prev|previous) [pane] (item|message): key(,)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1981. Command apps/web/outlook.talon
================================================================================


(expand|collapse) [conversation]: key(x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1982. Command apps/web/outlook.talon
================================================================================


go [to] mail: key(ctrl-shift-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1983. Command apps/web/outlook.talon
================================================================================


go [to] calendar: key(ctrl-shift-2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1984. Command apps/web/outlook.talon
================================================================================


go [to] people: key(ctrl-shift-3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1985. Command apps/web/outlook.talon
================================================================================


go [to] to do: key(ctrl-shift-4)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1986. Command apps/web/outlook.talon
================================================================================


go [to] inbox:
    key(g)
    key(i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1987. Command apps/web/outlook.talon
================================================================================


go to drafts:
    key(g)
    key(d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1988. Command apps/web/outlook.talon
================================================================================


go to sent:
    key(g)
    key(s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1989. Command apps/web/outlook.talon
================================================================================


search [email]: key(alt-q)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1990. Command apps/web/outlook.talon
================================================================================


show help: key(?)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1991. Command apps/web/outlook.talon
================================================================================


undo [last] [action]: key(ctrl-z)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1992. Command apps/web/outlook.talon
================================================================================


delete [this] [message]: key(delete)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1993. Command apps/web/outlook.talon
================================================================================


(perm|permanently) delete [this] [message]: key(shift+delete)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (optional
          (word))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1994. Command apps/web/outlook.talon
================================================================================


new folder: key(shift-e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1995. Command apps/web/outlook.talon
================================================================================


mark [this] [(item|message)] as read: key(q)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (parenthesized_rule
            (choice
              (word)
              (word))))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1996. Command apps/web/outlook.talon
================================================================================


mark [this] [(item|message)] as unread: key(u)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (parenthesized_rule
            (choice
              (word)
              (word))))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1997. Command apps/web/outlook.talon
================================================================================


flag [this] [(item|message)]: key(insert)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (parenthesized_rule
            (choice
              (word)
              (word))))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1998. Command apps/web/outlook.talon
================================================================================


archive: key(e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
1999. Command apps/web/outlook.talon
================================================================================


mark [this] [message] [as] junk: key(j)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (word))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2000. Command apps/web/outlook.talon
================================================================================


moved to [a] folder: key(v)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2001. Command apps/web/outlook.talon
================================================================================


categorize [this] message: key(c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2002. Command apps/web/protonmail.talon
================================================================================


open help: key(?)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2003. Command apps/web/protonmail.talon
================================================================================


[focus] search: key(/)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2004. Command apps/web/protonmail.talon
================================================================================


confirm active: key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2005. Command apps/web/protonmail.talon
================================================================================


close active: key(escape)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2006. Command apps/web/protonmail.talon
================================================================================


open command [palette]: key(shift-space)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2007. Command apps/web/protonmail.talon
================================================================================


new message: key(c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2008. Command apps/web/protonmail.talon
================================================================================


send message: key(ctrl-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2009. Command apps/web/protonmail.talon
================================================================================


save message: key(ctrl-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2010. Command apps/web/protonmail.talon
================================================================================


(go|jump) [to] inbox:
    key(g)
    key(i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2011. Command apps/web/protonmail.talon
================================================================================


(go|jump) [to] draft:
    key(g)
    key(d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2012. Command apps/web/protonmail.talon
================================================================================


(go|jump) [to] sent:
    key(g)
    key(s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2013. Command apps/web/protonmail.talon
================================================================================


(go|jump) [to] starred:
    key(g)
    key(.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2014. Command apps/web/protonmail.talon
================================================================================


(go|jump) [to] archive:
    key(g)
    key(a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2015. Command apps/web/protonmail.talon
================================================================================


(go|jump) [to] spam:
    key(g)
    key(x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2016. Command apps/web/protonmail.talon
================================================================================


(go|jump) [to] trash:
    key(g)
    key(t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2017. Command apps/web/protonmail.talon
================================================================================


(prev|previous) message: key(up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2018. Command apps/web/protonmail.talon
================================================================================


next message: key(down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2019. Command apps/web/protonmail.talon
================================================================================


exit message: key(left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2020. Command apps/web/protonmail.talon
================================================================================


enter message: key(right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2021. Command apps/web/protonmail.talon
================================================================================


(show|display) newer [message]: key(k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2022. Command apps/web/protonmail.talon
================================================================================


(show|display) older [message]: key(j)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2023. Command apps/web/protonmail.talon
================================================================================


open message: key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2024. Command apps/web/protonmail.talon
================================================================================


go back: key(escape)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2025. Command apps/web/protonmail.talon
================================================================================


select all:
    key(*)
    key(a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2026. Command apps/web/protonmail.talon
================================================================================


(deselect|unselect) all:
    key(*)
    key(n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2027. Command apps/web/protonmail.talon
================================================================================


select [the] (message|conversation): key(x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2028. Command apps/web/protonmail.talon
================================================================================


mark [as] read: key(r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2029. Command apps/web/protonmail.talon
================================================================================


mark [as] unread: key(u)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2030. Command apps/web/protonmail.talon
================================================================================


star (message|conversation): key(.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2031. Command apps/web/protonmail.talon
================================================================================


move to inbox: key(i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2032. Command apps/web/protonmail.talon
================================================================================


move to trash: key(t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2033. Command apps/web/protonmail.talon
================================================================================


move to archive: key(a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2034. Command apps/web/protonmail.talon
================================================================================


move to spam: key(s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2035. Command apps/web/protonmail.talon
================================================================================


reply to (message|conversation): key(shift-r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2036. Command apps/web/protonmail.talon
================================================================================


reply all [to] (message|conversation): key(shift-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2037. Command apps/web/protonmail.talon
================================================================================


forward (message|conversation): key(shift-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2038. Command apps/web/protonmail.talon
================================================================================


(prev|previous) contact: key(up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2039. Command apps/web/protonmail.talon
================================================================================


next contact: key(down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2040. Command apps/web/protonmail.talon
================================================================================


enter contact: key(right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2041. Command apps/web/protonmail.talon
================================================================================


delete contact: key(t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2042. Command apps/web/protonmail.talon
================================================================================


exit contact: key(left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2043. Command apps/web/protonmail.talon
================================================================================


save contact: key(ctrl-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2044. Command apps/web/gitlab.talon
================================================================================


show shortcuts: key(?)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2045. Command apps/web/gitlab.talon
================================================================================


go to projects [page]: key(shift-p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2046. Command apps/web/gitlab.talon
================================================================================


go to groups [page]: key(shift-g)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2047. Command apps/web/gitlab.talon
================================================================================


go to activity [page]: key(shift-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2048. Command apps/web/gitlab.talon
================================================================================


go to milestones [page]: key(shift-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2049. Command apps/web/gitlab.talon
================================================================================


go to snippets [page]: key(shift-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2050. Command apps/web/gitlab.talon
================================================================================


search page: key(s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2051. Command apps/web/gitlab.talon
================================================================================


go to issues [page]: key(shift-i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2052. Command apps/web/gitlab.talon
================================================================================


go to merge requests [page]: key(shift-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2053. Command apps/web/gitlab.talon
================================================================================


go to to do [list] [page]: key(shift-t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)
        (optional
          (word))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2054. Command apps/web/gitlab.talon
================================================================================


(show|hide) performance bar: key(p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2055. Command apps/web/gitlab.talon
================================================================================


edit last comment: key(1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2056. Command apps/web/gitlab.talon
================================================================================


toggle mark down [preview]: key(ctrl-shift-p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2057. Command apps/web/gitlab.talon
================================================================================


go [to] project home [page]: insert("gp")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2058. Command apps/web/gitlab.talon
================================================================================


go [to] project activity [feed]: insert("gv")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2059. Command apps/web/gitlab.talon
================================================================================


go [to] project releases [list]: insert("gr")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2060. Command apps/web/gitlab.talon
================================================================================


go [to] project files [list]: insert("gf")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2061. Command apps/web/gitlab.talon
================================================================================


go [to] project file search [page]: key(t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2062. Command apps/web/gitlab.talon
================================================================================


go [to] project (commit|commits) [list]: insert("gc")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2063. Command apps/web/gitlab.talon
================================================================================


go [to] (repository|repo) graph [page]: insert("gn")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2064. Command apps/web/gitlab.talon
================================================================================


go [to] (repository|repo) charts: insert("gd")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2065. Command apps/web/gitlab.talon
================================================================================


go [to] project issues [list]: insert("gi")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2066. Command apps/web/gitlab.talon
================================================================================


go [to] new issues [list]: insert("i")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2067. Command apps/web/gitlab.talon
================================================================================


go [to] project issues boards [list]: insert("gb")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2068. Command apps/web/gitlab.talon
================================================================================


go [to] project merge requests [list]: insert("gm")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2069. Command apps/web/gitlab.talon
================================================================================


go [to] jobs [list]: insert("gj")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2070. Command apps/web/gitlab.talon
================================================================================


go [to] project metrics: insert("gl")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2071. Command apps/web/gitlab.talon
================================================================================


go [to] project environments: insert("ge")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2072. Command apps/web/gitlab.talon
================================================================================


go [to] project cubes: insert("gk")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2073. Command apps/web/gitlab.talon
================================================================================


go [to] project snippets [list]: insert("gs")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2074. Command apps/web/gitlab.talon
================================================================================


go [to] project wiki: insert("gw")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2075. Command apps/web/gitlab.talon
================================================================================


edit description: key(e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2076. Command apps/web/gitlab.talon
================================================================================


change assignee: key(a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2077. Command apps/web/gitlab.talon
================================================================================


change milestone: key(m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2078. Command apps/web/gitlab.talon
================================================================================


change label: key(l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2079. Command apps/web/gitlab.talon
================================================================================


right comment: key(r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2080. Command apps/web/gitlab.talon
================================================================================


next [unresolved] discussion: key(n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2081. Command apps/web/gitlab.talon
================================================================================


previous [unresolved] discussion: key(p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2082. Command apps/web/gitlab.talon
================================================================================


next file: key(])


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2083. Command apps/web/gitlab.talon
================================================================================


previous file: key([)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2084. Command apps/web/gitlab.talon
================================================================================


back to files: key(escape)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2085. Command apps/web/gitlab.talon
================================================================================


open permalink: key(y)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2086. Command apps/web/gitlab.talon
================================================================================


edit page: key(e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2087. Command apps/generic_debugger.talon
================================================================================


step into: user.debugger_step_into()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2088. Command apps/generic_debugger.talon
================================================================================


step over: user.debugger_step_over()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2089. Command apps/generic_debugger.talon
================================================================================


step line: user.debugger_step_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2090. Command apps/generic_debugger.talon
================================================================================


step over line: user.debugger_step_over_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2091. Command apps/generic_debugger.talon
================================================================================


step out: user.debugger_step_out()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2092. Command apps/generic_debugger.talon
================================================================================


continue: user.debugger_continue()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2093. Command apps/generic_debugger.talon
================================================================================


debug start: user.debugger_start()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2094. Command apps/generic_debugger.talon
================================================================================


debug stop: user.debugger_stop()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2095. Command apps/generic_debugger.talon
================================================================================


debug exit: user.debugger_exit()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2096. Command apps/generic_debugger.talon
================================================================================


debug detach: user.debugger_detach()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2097. Command apps/generic_debugger.talon
================================================================================


debug restart: user.debugger_restart()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2098. Command apps/generic_debugger.talon
================================================================================


show registers: user.debugger_show_registers()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2099. Command apps/generic_debugger.talon
================================================================================


get register: user.debugger_get_register()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2100. Command apps/generic_debugger.talon
================================================================================


set register: user.debugger_set_register()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2101. Command apps/generic_debugger.talon
================================================================================


break now: user.debugger_break_now()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2102. Command apps/generic_debugger.talon
================================================================================


break here: user.debugger_break_here()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2103. Command apps/generic_debugger.talon
================================================================================


(list|show) (breaks|break points): user.debugger_show_breakpoints()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2104. Command apps/generic_debugger.talon
================================================================================


(set|add) (break|break point): user.debugger_add_sw_breakpoint()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2105. Command apps/generic_debugger.talon
================================================================================


(set|add) hardware (break|break point): user.debugger_add_hw_breakpoint()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2106. Command apps/generic_debugger.talon
================================================================================


clear all (breaks|break points): user.debugger_clear_all_breakpoints()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2107. Command apps/generic_debugger.talon
================================================================================


clear (break|break point): user.debugger_clear_breakpoint()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2108. Command apps/generic_debugger.talon
================================================================================


clear (break|break point) <number_small>:
    user.debugger_clear_breakpoint_id(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2109. Command apps/generic_debugger.talon
================================================================================


disable all (breaks|break points): user.debugger_disable_all_breakpoints()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2110. Command apps/generic_debugger.talon
================================================================================


disable (break|break point): user.debugger_disable_breakpoint()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2111. Command apps/generic_debugger.talon
================================================================================


disable (break|break point) <number_small>:
    user.debugger_disable_breakpoint_id(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2112. Command apps/generic_debugger.talon
================================================================================


enable all (breaks|break points): user.debugger_enable_all_breakpoints()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2113. Command apps/generic_debugger.talon
================================================================================


enable (break|break point): user.debugger_enable_breakpoint()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2114. Command apps/generic_debugger.talon
================================================================================


enable (break|break point) <number_small>:
    user.debugger_enable_breakpoint_id(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (word))))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2115. Command apps/generic_debugger.talon
================================================================================


(stack|back) trace: user.debugger_backtrace()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2116. Command apps/generic_debugger.talon
================================================================================


disassemble: user.debugger_disassemble()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2117. Command apps/generic_debugger.talon
================================================================================


disassemble here: user.debugger_disassemble_here()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2118. Command apps/generic_debugger.talon
================================================================================


disassemble clipboard: user.debugger_disassemble_clipboard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2119. Command apps/generic_debugger.talon
================================================================================


jump to address: user.debugger_goto_address()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2120. Command apps/generic_debugger.talon
================================================================================


jump to clipboard: user.debugger_goto_clipboard()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2121. Command apps/generic_debugger.talon
================================================================================


jump to highlighted: user.debugger_goto_highlighted()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2122. Command apps/generic_debugger.talon
================================================================================


dump string: user.debugger_dump_ascii_string()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2123. Command apps/generic_debugger.talon
================================================================================


dump unicode [string]: user.debugger_dump_unicode_string()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2124. Command apps/generic_debugger.talon
================================================================================


dump pointers: user.debugger_dump_pointers()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2125. Command apps/generic_debugger.talon
================================================================================


list modules: user.debugger_list_modules()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2126. Command apps/generic_debugger.talon
================================================================================


inspect type: user.debugger_inspect_type()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2127. Command apps/generic_debugger.talon
================================================================================


#hex dump register:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
2128. Command apps/generic_debugger.talon
================================================================================


clear line: user.debugger_clear_line()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2129. Command apps/i3wm/i3wm.talon
================================================================================


port <number_small>: user.system_command("i3-msg workspace number {number_small}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2130. Command apps/i3wm/i3wm.talon
================================================================================


port ten: user.system_command("i3-msg workspace number 10")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2131. Command apps/i3wm/i3wm.talon
================================================================================


(port flip|flipper): user.system_command("i3-msg workspace back_and_forth")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2132. Command apps/i3wm/i3wm.talon
================================================================================


port right: user.system_command("i3-msg workspace next")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2133. Command apps/i3wm/i3wm.talon
================================================================================


port left: user.system_command("i3-msg workspace prev")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2134. Command apps/i3wm/i3wm.talon
================================================================================


(win|window) left: user.system_command("i3-msg focus left")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2135. Command apps/i3wm/i3wm.talon
================================================================================


(win|window) right: user.system_command("i3-msg focus right")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2136. Command apps/i3wm/i3wm.talon
================================================================================


(win|window) up: user.system_command("i3-msg focus up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2137. Command apps/i3wm/i3wm.talon
================================================================================


(win|window) down: user.system_command("i3-msg focus down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2138. Command apps/i3wm/i3wm.talon
================================================================================


((win|window) kill|murder): user.system_command("i3-msg kill")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (parenthesized_rule
              (choice
                (word)
                (word)))
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2139. Command apps/i3wm/i3wm.talon
================================================================================


(win|window) stacking: user.system_command("i3-msg layout stacking")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2140. Command apps/i3wm/i3wm.talon
================================================================================


(win|window) default: user.system_command("i3-msg layout toggle split")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2141. Command apps/i3wm/i3wm.talon
================================================================================


(win|window) tabbed: user.system_command("i3-msg layout tabbed")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2142. Command apps/i3wm/i3wm.talon
================================================================================


reload i three config: user.system_command("i3-msg reload")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2143. Command apps/i3wm/i3wm.talon
================================================================================


restart i three: user.system_command("i3-msg restart")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2144. Command apps/i3wm/i3wm.talon
================================================================================


(full screen|scuba): user.system_command("i3-msg fullscreen")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2145. Command apps/i3wm/i3wm.talon
================================================================================


toggle floating: user.system_command("i3-msg floating toggle")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2146. Command apps/i3wm/i3wm.talon
================================================================================


focus floating: user.system_command("i3-msg focus mode_toggle")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2147. Command apps/i3wm/i3wm.talon
================================================================================


center window: user.system_command("i3-msg move position center")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2148. Command apps/i3wm/i3wm.talon
================================================================================


resize mode: user.system_command('i3-msg mode "resize"')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2149. Command apps/i3wm/i3wm.talon
================================================================================


focus parent: user.system_command("i3-msg focus parent")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2150. Command apps/i3wm/i3wm.talon
================================================================================


focus child: user.system_command("i3-msg focus child")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2151. Command apps/i3wm/i3wm.talon
================================================================================


grow window:
    user.system_command('i3-msg mode "resize"')
    key(right:10)
    key(right:10)
    key(down:10)
    key(down:10)
    # escape resize mode
    key(escape)
    # center window
    sleep(200ms)
    user.system_command("i3-msg move position center")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (comment)
      (expression
        (key_action
          (implicit_string)))
      (comment)
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2152. Command apps/i3wm/i3wm.talon
================================================================================


shrink window:
    user.system_command('i3-msg mode "resize"')
    key(left:10)
    key(left:10)
    key(up:10)
    key(up:10)
    # escape resize mode
    key(escape)
    # center window
    sleep(200ms)
    user.system_command("i3-msg move position center")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (comment)
      (expression
        (key_action
          (implicit_string)))
      (comment)
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2153. Command apps/i3wm/i3wm.talon
================================================================================


horizontal (shell|terminal):
    user.system_command("i3-msg split h")
    user.i3wm_shell()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2154. Command apps/i3wm/i3wm.talon
================================================================================


vertical (shell|terminal):
    user.system_command("i3-msg split v")
    user.i3wm_shell()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2155. Command apps/i3wm/i3wm.talon
================================================================================


(shuffle|move (win|window) [to] port) <number_small>:  user.system_command("i3-msg move container to workspace number {number_small}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (seq
              (word)
              (parenthesized_rule
                (choice
                  (word)
                  (word)))
              (optional
                (word))
              (word))))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2156. Command apps/i3wm/i3wm.talon
================================================================================


(shuffle|move (win|window) [to] port ten): user.system_command("i3-msg move container to workspace number 10")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (seq
            (word)
            (parenthesized_rule
              (choice
                (word)
                (word)))
            (optional
              (word))
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2157. Command apps/i3wm/i3wm.talon
================================================================================


(shuffle|move (win|window) [to] last port): user.system_command("i3-msg move container to workspace back_and_forth")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (seq
            (word)
            (parenthesized_rule
              (choice
                (word)
                (word)))
            (optional
              (word))
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2158. Command apps/i3wm/i3wm.talon
================================================================================


(shuffle|move (win|window) left): user.system_command("i3-msg move left")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (seq
            (word)
            (parenthesized_rule
              (choice
                (word)
                (word)))
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2159. Command apps/i3wm/i3wm.talon
================================================================================


(shuffle|move (win|window) right): user.system_command("i3-msg move right")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (seq
            (word)
            (parenthesized_rule
              (choice
                (word)
                (word)))
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2160. Command apps/i3wm/i3wm.talon
================================================================================


(shuffle|move (win|window) up): user.system_command("i3-msg move up")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (seq
            (word)
            (parenthesized_rule
              (choice
                (word)
                (word)))
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2161. Command apps/i3wm/i3wm.talon
================================================================================


(shuffle|move (win|window) down): user.system_command("i3-msg move down")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (seq
            (word)
            (parenthesized_rule
              (choice
                (word)
                (word)))
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2162. Command apps/i3wm/i3wm.talon
================================================================================


(win|window) horizontal: user.system_command("i3-msg split h")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2163. Command apps/i3wm/i3wm.talon
================================================================================


(win|window) vertical: user.system_command("i3-msg split v")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2164. Command apps/i3wm/i3wm.talon
================================================================================


make scratch: user.system_command("i3-msg move scratchpad")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2165. Command apps/i3wm/i3wm.talon
================================================================================


[(show|hide)] scratch: user.system_command("i3-msg scratchpad show")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (parenthesized_rule
            (choice
              (word)
              (word))))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2166. Command apps/i3wm/i3wm.talon
================================================================================


next scratch:
    user.system_command("i3-msg scratchpad show")
    user.system_command("i3-msg scratchpad show")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2167. Command apps/i3wm/i3wm.talon
================================================================================


launch: user.i3wm_launch()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2168. Command apps/i3wm/i3wm.talon
================================================================================


launch <user.text>:
        user.i3wm_launch()
        sleep(100ms)
        insert("{text}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2169. Command apps/i3wm/i3wm.talon
================================================================================


lock screen: user.i3wm_launch()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2170. Command apps/i3wm/i3wm.talon
================================================================================


(launch shell|koopa): user.i3wm_shell()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2171. Command apps/i3wm/i3wm.talon
================================================================================


new scratch (shell|window):
    user.i3wm_shell()
    sleep(200ms)
    user.system_command("i3-msg move scratchpad")
    user.system_command("i3-msg scratchpad show")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2172. Command apps/windbg/windbg.talon
================================================================================


tag(): user.debugger


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2173. Command apps/windbg/windbg.talon
================================================================================


tag(): user.windbg


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2174. Command apps/windbg/windbg.talon
================================================================================


register <user.registers>:
    key(@)
    insert("{registers}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2175. Command apps/windbg/windbg.talon
================================================================================


open help: insert(".hh\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence))))))))

================================================================================
2176. Command apps/windbg/windbg.talon
================================================================================


add microsoft symbols:
    insert("srv*C:\\symbols*http://msdl.microsoft.com/download/symbols;\n")
    insert("srv*C:\\symbols*http://msdl.microsoft.com/download/symbols;\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_escape_sequence)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_escape_sequence))))))))

================================================================================
2177. Command apps/windbg/windbg.talon
================================================================================


force reload symbols:
    insert(".reload /f\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence))))))))

================================================================================
2178. Command apps/windbg/windbg.talon
================================================================================


reload symbols:
    insert(".reload\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence))))))))

================================================================================
2179. Command apps/windbg/windbg.talon
================================================================================


loaded modules:
    insert("lm l\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence))))))))

================================================================================
2180. Command apps/windbg/windbg.talon
================================================================================


display pointers:
    insert("dps ")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2181. Command apps/windbg/windbg.talon
================================================================================


dereference pointer:
    user.insert_between("poi(", ")")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
2182. Command apps/windbg/windbg.talon
================================================================================


show version: key(ctrl-alt-w)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2183. Command apps/windbg/windbg.talon
================================================================================


view command: key(alt-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2184. Command apps/windbg/windbg.talon
================================================================================


view watch: key(alt-2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2185. Command apps/windbg/windbg.talon
================================================================================


view locals: key(alt-3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2186. Command apps/windbg/windbg.talon
================================================================================


view registers: key(alt-4)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2187. Command apps/windbg/windbg.talon
================================================================================


view memory: key(alt-5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2188. Command apps/windbg/windbg.talon
================================================================================


view call stack: key(alt-6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2189. Command apps/windbg/windbg.talon
================================================================================


view disassembly: key(alt-7)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2190. Command apps/windbg/windbg.talon
================================================================================


view scratch pad: key(alt-8)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2191. Command apps/windbg/windbg.talon
================================================================================


view (processes|threads): key(alt-9)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2192. Command apps/windbg/windbg.talon
================================================================================


dump function params: "r @rcx,@rdx,@r8,@r9\n"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content)
          (string_escape_sequence))))))

================================================================================
2193. Command apps/windbg/windbg.talon
================================================================================


(lib|library) <user.windows_dlls>: "{windows_dlls}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
2194. Command apps/amethyst/amethyst.talon
================================================================================


window next: key("alt-shift-j")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2195. Command apps/amethyst/amethyst.talon
================================================================================


window previous: key("alt-shift-k")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2196. Command apps/amethyst/amethyst.talon
================================================================================


# window move desk: key("ctrl-alt-shift-h")


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
2197. Command apps/amethyst/amethyst.talon
================================================================================


window full: key("alt-shift-d")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2198. Command apps/amethyst/amethyst.talon
================================================================================


window tall: key("alt-shift-a")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2199. Command apps/amethyst/amethyst.talon
================================================================================


window middle: key("alt-shift-`")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2200. Command apps/amethyst/amethyst.talon
================================================================================


window move main: key("alt-shift-enter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2201. Command apps/amethyst/amethyst.talon
================================================================================


window grow: key("alt-shift-l")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2202. Command apps/amethyst/amethyst.talon
================================================================================


window shrink: key("alt-shift-h")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2203. Command apps/amethyst/amethyst.talon
================================================================================


window reevaluate: key("alt-shift-z")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2204. Command apps/jetbrains/jetbrains.talon
================================================================================


tag(): user.line_commands


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2205. Command apps/jetbrains/jetbrains.talon
================================================================================


tag(): user.multiple_cursors


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2206. Command apps/jetbrains/jetbrains.talon
================================================================================


tag(): user.splits


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2207. Command apps/jetbrains/jetbrains.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2208. Command apps/jetbrains/jetbrains.talon
================================================================================


complete: user.idea("action CodeCompletion")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2209. Command apps/jetbrains/jetbrains.talon
================================================================================


perfect: user.idea("action CodeCompletion,action CodeCompletion")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2210. Command apps/jetbrains/jetbrains.talon
================================================================================


smart: user.idea("action SmartTypeCompletion")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2211. Command apps/jetbrains/jetbrains.talon
================================================================================


(done | finish): user.idea("action EditorCompleteStatement")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2212. Command apps/jetbrains/jetbrains.talon
================================================================================


grab <number>: user.idea_grab(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2213. Command apps/jetbrains/jetbrains.talon
================================================================================


(action | please): user.idea("action GotoAction")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2214. Command apps/jetbrains/jetbrains.talon
================================================================================


(action | please) <user.text>:
    user.idea("action GotoAction")
    insert(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2215. Command apps/jetbrains/jetbrains.talon
================================================================================


refactor: user.idea("action Refactorings.QuickListPopupAction")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2216. Command apps/jetbrains/jetbrains.talon
================================================================================


refactor <user.text>:
    user.idea("action Refactorings.QuickListPopupAction")
    insert(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2217. Command apps/jetbrains/jetbrains.talon
================================================================================


extract variable: user.idea("action IntroduceVariable")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2218. Command apps/jetbrains/jetbrains.talon
================================================================================


extract field: user.idea("action IntroduceField")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2219. Command apps/jetbrains/jetbrains.talon
================================================================================


extract constant: user.idea("action IntroduceConstant")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2220. Command apps/jetbrains/jetbrains.talon
================================================================================


extract parameter: user.idea("action IntroduceParameter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2221. Command apps/jetbrains/jetbrains.talon
================================================================================


extract interface: user.idea("action ExtractInterface")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2222. Command apps/jetbrains/jetbrains.talon
================================================================================


extract method: user.idea("action ExtractMethod")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2223. Command apps/jetbrains/jetbrains.talon
================================================================================


refactor in line: user.idea("action Inline")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2224. Command apps/jetbrains/jetbrains.talon
================================================================================


refactor move: user.idea("action Move")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2225. Command apps/jetbrains/jetbrains.talon
================================================================================


refactor rename: user.idea("action RenameElement")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2226. Command apps/jetbrains/jetbrains.talon
================================================================================


rename file: user.idea("action RenameFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2227. Command apps/jetbrains/jetbrains.talon
================================================================================


fix (format | formatting): user.idea("action ReformatCode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2228. Command apps/jetbrains/jetbrains.talon
================================================================================


fix imports: user.idea("action OptimizeImports")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2229. Command apps/jetbrains/jetbrains.talon
================================================================================


(go declaration | follow): user.idea("action GotoDeclaration")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2230. Command apps/jetbrains/jetbrains.talon
================================================================================


go implementation: user.idea("action GotoImplementation")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2231. Command apps/jetbrains/jetbrains.talon
================================================================================


go usage: user.idea("action FindUsages")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2232. Command apps/jetbrains/jetbrains.talon
================================================================================


go type: user.idea("action GotoTypeDeclaration")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2233. Command apps/jetbrains/jetbrains.talon
================================================================================


go test: user.idea("action GotoTest")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2234. Command apps/jetbrains/jetbrains.talon
================================================================================


go back: user.idea("action Back")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2235. Command apps/jetbrains/jetbrains.talon
================================================================================


go forward: user.idea("action Forward")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2236. Command apps/jetbrains/jetbrains.talon
================================================================================


find (everywhere | all): user.idea("action SearchEverywhere")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2237. Command apps/jetbrains/jetbrains.talon
================================================================================


find (everywhere | all) <user.text> [over]:
    user.idea("action SearchEverywhere")
    sleep(500ms)
    insert(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2238. Command apps/jetbrains/jetbrains.talon
================================================================================


(search | find) class: user.idea("action GotoClass")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2239. Command apps/jetbrains/jetbrains.talon
================================================================================


(search | find) file: user.idea("action GotoFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2240. Command apps/jetbrains/jetbrains.talon
================================================================================


(search | find) path: user.idea("action FindInPath")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2241. Command apps/jetbrains/jetbrains.talon
================================================================================


(search | find) symbol: user.idea("action GotoSymbol")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2242. Command apps/jetbrains/jetbrains.talon
================================================================================


(search | find) symbol <user.text>$:
    user.idea("action GotoSymbol")
    insert(text)
    key("enter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2243. Command apps/jetbrains/jetbrains.talon
================================================================================


recent: user.idea("action RecentFiles")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2244. Command apps/jetbrains/jetbrains.talon
================================================================================


surround [this] with <user.text> [over]:
    idea("action SurroundWith")
    sleep(500ms)
    insert(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2245. Command apps/jetbrains/jetbrains.talon
================================================================================


insert generated <user.text> [over]:
    user.idea("action Generate")
    sleep(500ms)
    insert(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2246. Command apps/jetbrains/jetbrains.talon
================================================================================


insert template <user.text> [over]:
    idea("action InsertLiveTemplate")
    sleep(500ms)
    insert(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2247. Command apps/jetbrains/jetbrains.talon
================================================================================


create (template|snippet): user.idea("action SaveAsTemplate")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2248. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle recording: user.idea("action StartStopMacroRecording")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2249. Command apps/jetbrains/jetbrains.talon
================================================================================


change (recording | recordings): user.idea("action EditMacros")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2250. Command apps/jetbrains/jetbrains.talon
================================================================================


play recording: user.idea("action PlaybackLastMacro")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2251. Command apps/jetbrains/jetbrains.talon
================================================================================


play recording <user.text> [over]:
    idea("action PlaySavedMacrosAction")
    insert(text)
    sleep(500ms)
    Key("enter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2252. Command apps/jetbrains/jetbrains.talon
================================================================================


go mark: user.idea("action ShowBookmarks")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2253. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle mark: user.idea("action ToggleBookmark")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2254. Command apps/jetbrains/jetbrains.talon
================================================================================


go next mark: user.idea("action GotoNextBookmark")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2255. Command apps/jetbrains/jetbrains.talon
================================================================================


go last mark: user.idea("action GotoPreviousBookmark")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2256. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle mark <number>: user.idea("action ToggleBookmark{number}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2257. Command apps/jetbrains/jetbrains.talon
================================================================================


go mark <number>: user.idea("action GotoBookmark{number}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2258. Command apps/jetbrains/jetbrains.talon
================================================================================


expand deep: user.idea("action ExpandRegionRecursively")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2259. Command apps/jetbrains/jetbrains.talon
================================================================================


expand all: user.idea("action ExpandAllRegions")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2260. Command apps/jetbrains/jetbrains.talon
================================================================================


collapse deep: user.idea("action CollapseRegionRecursively")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2261. Command apps/jetbrains/jetbrains.talon
================================================================================


collapse all: user.idea("action CollapseAllRegions")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2262. Command apps/jetbrains/jetbrains.talon
================================================================================


go next (method | function): user.idea("action MethodDown")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2263. Command apps/jetbrains/jetbrains.talon
================================================================================


go last (method | function): user.idea("action MethodUp")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2264. Command apps/jetbrains/jetbrains.talon
================================================================================


clippings: user.idea("action PasteMultiple")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2265. Command apps/jetbrains/jetbrains.talon
================================================================================


copy path: user.idea("action CopyPaths")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2266. Command apps/jetbrains/jetbrains.talon
================================================================================


copy reference: user.idea("action CopyReference")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2267. Command apps/jetbrains/jetbrains.talon
================================================================================


copy pretty: user.idea("action CopyAsRichText")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2268. Command apps/jetbrains/jetbrains.talon
================================================================================


create sibling: user.idea("action NewElementSamePlace")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2269. Command apps/jetbrains/jetbrains.talon
================================================================================


create sibling <user.text> [over]:
    user.idea("action NewElementSamePlace")
    sleep(500ms)
    insert(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2270. Command apps/jetbrains/jetbrains.talon
================================================================================


create file: user.idea("action NewElement")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2271. Command apps/jetbrains/jetbrains.talon
================================================================================


create file <user.text> [over]:
    user.idea("action NewElement")
    sleep(500ms)
    insert(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2272. Command apps/jetbrains/jetbrains.talon
================================================================================


go task: user.idea("action tasks.goto")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2273. Command apps/jetbrains/jetbrains.talon
================================================================================


go browser task: user.idea("action tasks.open.in.browser")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2274. Command apps/jetbrains/jetbrains.talon
================================================================================


switch task: user.idea("action tasks.switch")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2275. Command apps/jetbrains/jetbrains.talon
================================================================================


clear task: user.idea("action tasks.close")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2276. Command apps/jetbrains/jetbrains.talon
================================================================================


configure servers: user.idea("action tasks.configure.servers")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2277. Command apps/jetbrains/jetbrains.talon
================================================================================


git pull: user.idea("action Vcs.UpdateProject")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2278. Command apps/jetbrains/jetbrains.talon
================================================================================


git commit: user.idea("action CheckinProject")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2279. Command apps/jetbrains/jetbrains.talon
================================================================================


git push: user.idea("action CheckinProject")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2280. Command apps/jetbrains/jetbrains.talon
================================================================================


git log: user.idea("action Vcs.ShowTabbedFileHistory")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2281. Command apps/jetbrains/jetbrains.talon
================================================================================


git browse: user.idea("action Github.Open.In.Browser")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2282. Command apps/jetbrains/jetbrains.talon
================================================================================


git (gets | gist): user.idea("action Github.Create.Gist")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2283. Command apps/jetbrains/jetbrains.talon
================================================================================


git (pull request | request): user.idea("action Github.Create.Pull.Request")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2284. Command apps/jetbrains/jetbrains.talon
================================================================================


git (view | show | list) (requests | request): user.idea("action Github.View.Pull.Request")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2285. Command apps/jetbrains/jetbrains.talon
================================================================================


git (annotate | blame): user.idea("action Annotate")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2286. Command apps/jetbrains/jetbrains.talon
================================================================================


git menu: user.idea("action Vcs.QuickListPopupAction")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2287. Command apps/jetbrains/jetbrains.talon
================================================================================


# Tool windows:


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
2288. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle project: user.idea("action ActivateProjectToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2289. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle find: user.idea("action ActivateFindToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2290. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle run: user.idea("action ActivateRunToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2291. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle debug: user.idea("action ActivateDebugToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2292. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle events: user.idea("action ActivateEventLogToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2293. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle terminal: user.idea("action ActivateTerminalToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2294. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle git: user.idea("action ActivateVersionControlToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2295. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle structure: user.idea("action ActivateStructureToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2296. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle database: user.idea("action ActivateDatabaseToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2297. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle database changes: user.idea("action ActivateDatabaseChangesToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2298. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle make: user.idea("action ActivatemakeToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2299. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle to do: user.idea("action ActivateTODOToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2300. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle docker: user.idea("action ActivateDockerToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2301. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle favorites: user.idea("action ActivateFavoritesToolWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2302. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle last: user.idea("action JumpToLastWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2303. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle pinned: user.idea("action TogglePinnedMode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2304. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle docked: user.idea("action ToggleDockMode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2305. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle floating: user.idea("action ToggleFloatingMode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2306. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle windowed: user.idea("action ToggleWindowedMode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2307. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle split: user.idea("action ToggleSideMode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2308. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle tool buttons: user.idea("action ViewToolButtons")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2309. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle toolbar: user.idea("action ViewToolBar")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2310. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle status [bar]: user.idea("action ViewStatusBar")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2311. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle navigation [bar]: user.idea("action ViewNavigationBar")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2312. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle power save: user.idea("action TogglePowerSave")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2313. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle whitespace: user.idea("action EditorToggleShowWhitespaces")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2314. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle indents: user.idea("action EditorToggleShowIndentLines")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2315. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle line numbers: user.idea("action EditorToggleShowLineNumbers")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2316. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle (bread crumbs | breadcrumbs): user.idea("action EditorToggleShowBreadcrumbs")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2317. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle gutter icons: user.idea("action EditorToggleShowGutterIcons")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2318. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle wrap: user.idea("action EditorToggleUseSoftWraps")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2319. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle parameters: user.idea("action ToggleInlineHintsAction")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2320. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle fullscreen: user.idea("action ToggleFullScreen")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2321. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle distraction [free mode]: user.idea("action ToggleDistractionFreeMode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (seq
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2322. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle presentation [mode]: user.idea("action TogglePresentationMode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2323. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle comment: code.toggle_comment()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2324. Command apps/jetbrains/jetbrains.talon
================================================================================


change scheme: user.idea("action QuickChangeScheme")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2325. Command apps/jetbrains/jetbrains.talon
================================================================================


(toggle | pop) (doc | documentation): user.idea("action QuickJavaDoc")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2326. Command apps/jetbrains/jetbrains.talon
================================================================================


(pop deaf | toggle definition): user.idea("action QuickImplementations")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2327. Command apps/jetbrains/jetbrains.talon
================================================================================


pop type: user.idea("action ExpressionTypeInfo")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2328. Command apps/jetbrains/jetbrains.talon
================================================================================


pop parameters: user.idea("action ParameterInfo")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2329. Command apps/jetbrains/jetbrains.talon
================================================================================


go breakpoints: user.idea("action ViewBreakpoints")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2330. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle [line] breakpoint: user.idea("action ToggleLineBreakpoint")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2331. Command apps/jetbrains/jetbrains.talon
================================================================================


toggle method breakpoint: user.idea("action ToggleMethodBreakpoint")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2332. Command apps/jetbrains/jetbrains.talon
================================================================================


run menu: user.idea("action ChooseRunConfiguration")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2333. Command apps/jetbrains/jetbrains.talon
================================================================================


run test: user.idea("action RunClass")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2334. Command apps/jetbrains/jetbrains.talon
================================================================================


run test again: user.idea("action Rerun")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2335. Command apps/jetbrains/jetbrains.talon
================================================================================


debug test: user.idea("action DebugClass")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2336. Command apps/jetbrains/jetbrains.talon
================================================================================


step over: user.idea("action StepOver")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2337. Command apps/jetbrains/jetbrains.talon
================================================================================


step into: user.idea("action StepInto")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2338. Command apps/jetbrains/jetbrains.talon
================================================================================


step smart: user.idea("action SmartStepInto")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2339. Command apps/jetbrains/jetbrains.talon
================================================================================


step to line: user.idea("action RunToCursor")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2340. Command apps/jetbrains/jetbrains.talon
================================================================================


continue: user.idea("action Resume")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2341. Command apps/jetbrains/jetbrains.talon
================================================================================


(grow | shrink) window right: user.idea("action ResizeToolWindowRight")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2342. Command apps/jetbrains/jetbrains.talon
================================================================================


(grow | shrink) window left: user.idea("action ResizeToolWindowLeft")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2343. Command apps/jetbrains/jetbrains.talon
================================================================================


(grow | shrink) window up: user.idea("action ResizeToolWindowUp")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2344. Command apps/jetbrains/jetbrains.talon
================================================================================


(grow | shrink) window down: user.idea("action ResizeToolWindowDown")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2345. Command apps/jetbrains/jetbrains.talon
================================================================================


go next (error | air): user.idea("action GotoNextError")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2346. Command apps/jetbrains/jetbrains.talon
================================================================================


go last (error | air): user.idea("action GotoPreviousError")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2347. Command apps/jetbrains/jetbrains.talon
================================================================================


fix next (error | air):
    user.idea("action GotoNextError")
    user.idea("action ShowIntentionActions")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2348. Command apps/jetbrains/jetbrains.talon
================================================================================


fix last (error | air):
    user.idea("action GotoPreviousError")
    user.idea("action ShowIntentionActions")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2349. Command apps/jetbrains/jetbrains.talon
================================================================================


select less: user.idea("action EditorUnSelectWord")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2350. Command apps/jetbrains/jetbrains.talon
================================================================================


select (more|this): user.idea("action EditorSelectWord")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2351. Command apps/jetbrains/jetbrains.talon
================================================================================


expand <number> until <number>:
    user.select_range(number_1, number_2)
    user.idea("action ExpandRegion")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2352. Command apps/jetbrains/jetbrains.talon
================================================================================


collapse <number> until <number>:
    user.select_range(number_1, number_2)
    user.idea("action CollapseRegion")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2353. Command apps/jetbrains/jetbrains.talon
================================================================================


paste <number> until <number>:
    user.select_range(number_1, number_2)
    user.idea("action EditorPaste")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2354. Command apps/jetbrains/jetbrains.talon
================================================================================


refactor <number> until <number>:
    user.select_range(number_1, number_2)
    user.idea("action Refactorings.QuickListPopupAction")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))
            (variable
              (identifier)))))
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2355. Command apps/jetbrains/jetbrains.talon
================================================================================


clone <number>: user.line_clone(number)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2356. Command apps/jetbrains/jetbrains.talon
================================================================================


clear last <user.text> [over]: user.idea("find prev {text}, action EditorBackSpace")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2357. Command apps/jetbrains/jetbrains.talon
================================================================================


clear next <user.text> [over]: user.idea("find next {text}, action EditorBackSpace")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2358. Command apps/jetbrains/jetbrains.talon
================================================================================


comment last <user.text> [over]: user.idea("find prev {text}, action CommentByLineComment")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2359. Command apps/jetbrains/jetbrains.talon
================================================================================


comment next <user.text> [over]: user.idea("find next {text}, action CommentByLineComment")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2360. Command apps/jetbrains/jetbrains.talon
================================================================================


go last <user.text> [over]: user.idea("find prev {text}, action EditorRight")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2361. Command apps/jetbrains/jetbrains.talon
================================================================================


go next <user.text> [over]: user.idea("find next {text}, action EditorRight")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2362. Command apps/jetbrains/jetbrains.talon
================================================================================


paste last <user.text> [over]: user.idea("find prev {text}, action EditorRight, action EditorPaste")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2363. Command apps/jetbrains/jetbrains.talon
================================================================================


paste next <user.text> [over]: user.idea("find next {text}, action EditorRight, action EditorPaste")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2364. Command apps/jetbrains/jetbrains.talon
================================================================================


refactor last <user.text> [over]: user.idea("find prev {text}, action Refactorings.QuickListPopupAction")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2365. Command apps/jetbrains/jetbrains.talon
================================================================================


refactor next <user.text> [over]: user.idea("find next {text}, action Refactorings.QuickListPopupAction")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2366. Command apps/jetbrains/jetbrains.talon
================================================================================


replace last <user.text> [over]: user.idea("find prev {text}, action EditorPaste")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2367. Command apps/jetbrains/jetbrains.talon
================================================================================


replace next <user.text> [over]: user.idea("find next {text}, action EditorPaste")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2368. Command apps/jetbrains/jetbrains.talon
================================================================================


select last <user.text> [over]: user.idea("find prev {text}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2369. Command apps/jetbrains/jetbrains.talon
================================================================================


select next <user.text> [over]: user.idea("find next {text}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content))))))))

================================================================================
2370. Command apps/jetbrains/jetbrains.talon
================================================================================


select camel left: user.extend_camel_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2371. Command apps/jetbrains/jetbrains.talon
================================================================================


select camel right: user.extend_camel_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2372. Command apps/jetbrains/jetbrains.talon
================================================================================


go camel left: user.camel_left()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2373. Command apps/jetbrains/jetbrains.talon
================================================================================


go camel right: user.camel_right()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2374. Command apps/jetbrains/jetbrains.talon
================================================================================


# requires plug-in: black-pycharm


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
2375. Command apps/jetbrains/jetbrains.talon
================================================================================


blacken: user.idea("action BLACKReformatCode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2376. Command apps/adobe/adobe_acrobat_reader_dc.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2377. Command apps/adobe/adobe_acrobat_reader_dc.talon
================================================================================


tag(): user.pages


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2378. Command apps/generic_snippets/generic_snippets.talon
================================================================================


snip {user.snippets}: user.snippet_insert(user.snippets)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2379. Command apps/generic_snippets/generic_snippets.talon
================================================================================


snip hunt <user.text>: user.snippet_search(user.text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2380. Command apps/generic_snippets/generic_snippets.talon
================================================================================


snip hunt: user.snippet_search("")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)))))))

================================================================================
2381. Command apps/generic_snippets/generic_snippets.talon
================================================================================


snip create: user.snippet_create()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2382. Command apps/generic_snippets/generic_snippets.talon
================================================================================


snip show: user.snippet_toggle()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2383. Command apps/generic_snippets/generic_snippets_open.talon
================================================================================


snip close: user.snippet_hide()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2384. Command apps/teams/teams_mac.talon
================================================================================


open history: key(super-shift-h)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2385. Command apps/teams/teams_mac.talon
================================================================================


view shortcuts: key(super-.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2386. Command apps/teams/teams_mac.talon
================================================================================


show shortcuts: key(super-.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2387. Command apps/teams/teams_mac.talon
================================================================================


[go] [to] search: key(super-e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2388. Command apps/teams/teams_mac.talon
================================================================================


show commands: key(super-/)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2389. Command apps/teams/teams_mac.talon
================================================================================


open filter: key(super-shift-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2390. Command apps/teams/teams_mac.talon
================================================================================


go to: key(super-g)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2391. Command apps/teams/teams_mac.talon
================================================================================


open (apps|applications): key(ctrl-`)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2392. Command apps/teams/teams_mac.talon
================================================================================


[start] new chat: key(super-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2393. Command apps/teams/teams_mac.talon
================================================================================


open settings: key(super-,)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2394. Command apps/teams/teams_mac.talon
================================================================================


open help: key(f1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2395. Command apps/teams/teams_mac.talon
================================================================================


close: key(escape)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2396. Command apps/teams/teams_mac.talon
================================================================================


reset:
  key(escape)
  key(escape)
  key(escape)
  key(escape)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2397. Command apps/teams/teams_mac.talon
================================================================================


zoom reset:
  key(super-0)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2398. Command apps/teams/teams_mac.talon
================================================================================


open (act|activity): key(super-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2399. Command apps/teams/teams_mac.talon
================================================================================


open chat: key(super-2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2400. Command apps/teams/teams_mac.talon
================================================================================


open teams: key(super-3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2401. Command apps/teams/teams_mac.talon
================================================================================


open calendar: key(super-4)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2402. Command apps/teams/teams_mac.talon
================================================================================


open calls: key(super-5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2403. Command apps/teams/teams_mac.talon
================================================================================


open files: key(super-6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2404. Command apps/teams/teams_mac.talon
================================================================================


[go] [to] (prev|previous) [list] item: key(alt-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2405. Command apps/teams/teams_mac.talon
================================================================================


[go] [to] next [list] item: key(alt-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2406. Command apps/teams/teams_mac.talon
================================================================================


move [selected] team up: key(super-shift-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2407. Command apps/teams/teams_mac.talon
================================================================================


move [selected] team down: key(super-shift-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2408. Command apps/teams/teams_mac.talon
================================================================================


[go] [to] (prev|previous) section: key(super-shift-f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2409. Command apps/teams/teams_mac.talon
================================================================================


[go] [to] next section: key(super-f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2410. Command apps/teams/teams_mac.talon
================================================================================


[go] [to] compose [box]: key(shift-alt-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2411. Command apps/teams/teams_mac.talon
================================================================================


[expand] compose [box]: key(super-shift-x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2412. Command apps/teams/teams_mac.talon
================================================================================


send message: key(super-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2413. Command apps/teams/teams_mac.talon
================================================================================


attach file: key(shift-alt-o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2414. Command apps/teams/teams_mac.talon
================================================================================


attach local file:
  key(shift-alt-o)
  sleep(100ms)
  key(down)
  key(space)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2415. Command apps/teams/teams_mac.talon
================================================================================


[start] new line: key(shift-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2416. Command apps/teams/teams_mac.talon
================================================================================


reply [to] [thread]: key(shift-alt-r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2417. Command apps/teams/teams_mac.talon
================================================================================


accept video call: key(super-shift-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2418. Command apps/teams/teams_mac.talon
================================================================================


accept audio call: key(super-shift-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2419. Command apps/teams/teams_mac.talon
================================================================================


decline call: key(super-shift-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2420. Command apps/teams/teams_mac.talon
================================================================================


start audio call: key(super-shift-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2421. Command apps/teams/teams_mac.talon
================================================================================


start video call: key(super-shift-u)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2422. Command apps/teams/teams_mac.talon
================================================================================


toggle mute: key(super-shift-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2423. Command apps/teams/teams_mac.talon
================================================================================


starch screen share session: key(super-shift-e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2424. Command apps/teams/teams_mac.talon
================================================================================


toggle video: key(super-shift-o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2425. Command apps/teams/teams_mac.talon
================================================================================


[go] [to] sharing toolbar: key(super-shift-space)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2426. Command apps/teams/teams_mac.talon
================================================================================


decline screen share: key(super-shift-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2427. Command apps/teams/teams_mac.talon
================================================================================


accept screen share: key(super-shift-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2428. Command apps/teams/teams_mac.talon
================================================================================


schedule [a] meeting: key(alt-shift-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2429. Command apps/teams/teams_mac.talon
================================================================================


go to current time: key(alt-.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2430. Command apps/teams/teams_mac.talon
================================================================================


go to (prev|previous) (day|week): key(super-alt-left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2431. Command apps/teams/teams_mac.talon
================================================================================


go to next (day|week): key(super-alt-right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2432. Command apps/teams/teams_mac.talon
================================================================================


view day: key(super-alt-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2433. Command apps/teams/teams_mac.talon
================================================================================


view work week: key(super-alt-2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2434. Command apps/teams/teams_mac.talon
================================================================================


view week: key(super-alt-3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2435. Command apps/teams/teams_mac.talon
================================================================================


(save|send) meeting request: key(super-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2436. Command apps/teams/teams_mac.talon
================================================================================


join [from] meeting [details]: key(alt-shift-j)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2437. Command apps/teams/teams_mac.talon
================================================================================


go to suggested time: key(alt-shift-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2438. Command apps/teams/teams_mac.talon
================================================================================


(raise|lower) hand: key(super-shift-k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2439. Command apps/teams/teams_mac.talon
================================================================================


leave team meeting: key(super-shift-h)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2440. Command apps/teams/teams.talon
================================================================================


# https://support.office.com/en-us/article/keyboard-shortcuts-for-microsoft-teams-2e8e2a70-e8d8-4a19-949b-4c36dd5292d2


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
2441. Command apps/teams/teams.talon
================================================================================


show shortcuts: key(ctrl-.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2442. Command apps/teams/teams.talon
================================================================================


[go] [to] search: key(ctrl-e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2443. Command apps/teams/teams.talon
================================================================================


show commands: key(ctrl-/)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2444. Command apps/teams/teams.talon
================================================================================


open filter: key(ctrl-shift-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2445. Command apps/teams/teams.talon
================================================================================


go to: key(ctrl-g)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2446. Command apps/teams/teams.talon
================================================================================


open (apps|applications): key(ctrl-`)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2447. Command apps/teams/teams.talon
================================================================================


[start] new chat: key(ctrl-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2448. Command apps/teams/teams.talon
================================================================================


open settings: key(ctrl-,)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2449. Command apps/teams/teams.talon
================================================================================


open help: key(f1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2450. Command apps/teams/teams.talon
================================================================================


close: key(escape)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2451. Command apps/teams/teams.talon
================================================================================


open activity: key(ctrl-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2452. Command apps/teams/teams.talon
================================================================================


open chat: key(ctrl-2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2453. Command apps/teams/teams.talon
================================================================================


open teams: key(ctrl-3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2454. Command apps/teams/teams.talon
================================================================================


open calendar: key(ctrl-4)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2455. Command apps/teams/teams.talon
================================================================================


open planner: key(ctrl-5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2456. Command apps/teams/teams.talon
================================================================================


open calls: key(ctrl-6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2457. Command apps/teams/teams.talon
================================================================================


open files: key(ctrl-7)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2458. Command apps/teams/teams.talon
================================================================================


[go] [to] (prev|previous) [list] item: key(alt-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2459. Command apps/teams/teams.talon
================================================================================


[go] [to] next [list] item: key(alt-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2460. Command apps/teams/teams.talon
================================================================================


move [selected] team up: key(ctrl-shift-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2461. Command apps/teams/teams.talon
================================================================================


move [selected] team down: key(ctrl-shift-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2462. Command apps/teams/teams.talon
================================================================================


[go] [to] (prev|previous) section: key(ctrl-shift-f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2463. Command apps/teams/teams.talon
================================================================================


[go] [to] next section: key(ctrl-f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2464. Command apps/teams/teams.talon
================================================================================


[go] [to] compose [box]: key(c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2465. Command apps/teams/teams.talon
================================================================================


[expand] compose [box]: key(ctrl-shift-x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2466. Command apps/teams/teams.talon
================================================================================


send: key(ctrl-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2467. Command apps/teams/teams.talon
================================================================================


attach file: key(ctrl-o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2468. Command apps/teams/teams.talon
================================================================================


[start] new line: key(shift-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2469. Command apps/teams/teams.talon
================================================================================


reply [to] [thread]: key(r)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2470. Command apps/teams/teams.talon
================================================================================


accept video call: key(ctrl-shift-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2471. Command apps/teams/teams.talon
================================================================================


accept audio call: key(ctrl-shift-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2472. Command apps/teams/teams.talon
================================================================================


decline call: key(ctrl-shift-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2473. Command apps/teams/teams.talon
================================================================================


start audio call: key(ctrl-shift-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2474. Command apps/teams/teams.talon
================================================================================


start video call: key(ctrl-shift-u)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2475. Command apps/teams/teams.talon
================================================================================


toggle mute: key(ctrl-shift-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2476. Command apps/teams/teams.talon
================================================================================


starch screen share session: key(ctrl-shift-e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2477. Command apps/teams/teams.talon
================================================================================


toggle video: key(ctrl-shift-o)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2478. Command apps/teams/teams.talon
================================================================================


[go] [to] sharing toolbar: key(ctrl-shift-space)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (optional
          (word))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2479. Command apps/teams/teams.talon
================================================================================


decline screen share: key(ctrl-shift-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2480. Command apps/teams/teams.talon
================================================================================


accept screen share: key(ctrl-shift-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2481. Command apps/teams/teams.talon
================================================================================


schedule [a] meeting: key(alt-shift-n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2482. Command apps/teams/teams.talon
================================================================================


go to current time: key(alt-.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2483. Command apps/teams/teams.talon
================================================================================


go to (prev|previous) (day|week): key(ctrl-alt-left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2484. Command apps/teams/teams.talon
================================================================================


go to next (day|week): key(ctrl-alt-right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2485. Command apps/teams/teams.talon
================================================================================


view day: key(ctrl-alt-1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2486. Command apps/teams/teams.talon
================================================================================


view work week: key(ctrl-alt-2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2487. Command apps/teams/teams.talon
================================================================================


view week: key(ctrl-alt-3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2488. Command apps/teams/teams.talon
================================================================================


(safe|send) meeting request: key(ctrl-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2489. Command apps/teams/teams.talon
================================================================================


join [from] meeting [details]: key(alt-shift-j)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2490. Command apps/teams/teams.talon
================================================================================


go to suggested time: key(alt-shift-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2491. Command apps/slack/slack_win.talon
================================================================================


tag(): user.messaging


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2492. Command apps/slack/slack_win.talon
================================================================================


tag(): user.emoji


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2493. Command apps/slack/slack_win.talon
================================================================================


workspace <number>: key("ctrl-{number}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2494. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) [channel] info: key(ctrl-shift-i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2495. Command apps/slack/slack_win.talon
================================================================================


focus (move | next): key(ctrl-`)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2496. Command apps/slack/slack_win.talon
================================================================================


(section | zone) [next]: key(f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2497. Command apps/slack/slack_win.talon
================================================================================


(section | zone) (previous | last): key(shift-f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2498. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) [direct] messages: key(ctrl-shift-k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2499. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) threads: key(ctrl-shift-t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2500. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) (history [next] | back | backward): key(alt-left)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (seq
              (word)
              (optional
                (word)))
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2501. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) forward: key(alt-right)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2502. Command apps/slack/slack_win.talon
================================================================================


(element | bit) [next]: key(tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2503. Command apps/slack/slack_win.talon
================================================================================


(element | bit) (previous | last): key(shift-tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2504. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) (my stuff | activity): key(ctrl-shift-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2505. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) directory: key(ctrl-shift-e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2506. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) (starred [items] | stars): key(ctrl-shift-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (seq
              (word)
              (optional
                (word)))
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2507. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) unread [messages]: key(ctrl-shift-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2508. Command apps/slack/slack_win.talon
================================================================================


grab left: key(shift-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2509. Command apps/slack/slack_win.talon
================================================================================


grab right: key(shift-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2510. Command apps/slack/slack_win.talon
================================================================================


add line: key(shift-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2511. Command apps/slack/slack_win.talon
================================================================================


#"(slack | lack) (slap | slaw | slapper): [key(cmd-right) key(shift-enter")],


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
2512. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) (react | reaction): key(ctrl-shift-\)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2513. Command apps/slack/slack_win.talon
================================================================================


(insert command | commandify): key(ctrl-shift-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2514. Command apps/slack/slack_win.talon
================================================================================


insert code: insert("```")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2515. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) (bull | bullet | bulleted) [list]: key(ctrl-shift-8)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2516. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) (number | numbered) [list]: key(ctrl-shift-7)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2517. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) (quotes | quotation): key(ctrl-shift-9)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2518. Command apps/slack/slack_win.talon
================================================================================


bold: key(ctrl-b)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2519. Command apps/slack/slack_win.talon
================================================================================


(italic | italicize): key(ctrl-i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2520. Command apps/slack/slack_win.talon
================================================================================


(strike | strikethrough): key(ctrl-shift-x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2521. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) snippet: key(ctrl-shift-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2522. Command apps/slack/slack_win.talon
================================================================================


([toggle] mute | unmute): key(m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (optional
              (word))
            (word))
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2523. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) ([toggle] video): key(v)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (seq
            (optional
              (word))
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2524. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) invite: key(a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2525. Command apps/slack/slack_win.talon
================================================================================


(slack | lack) shortcuts: key(ctrl-/)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2526. Command apps/slack/slack_win.talon
================================================================================


emote <user.text>: "{text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
2527. Command apps/slack/slack_win.talon
================================================================================


toggle left sidebar: key(ctrl-shift-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2528. Command apps/slack/slack_win.talon
================================================================================


toggle right sidebar: key(ctrl-.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2529. Command apps/slack/slack_win.talon
================================================================================


(move | next) focus:
    app.notify("please use the voice command 'focus next' instead of 'next focus'")
    key(ctrl-`)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2530. Command apps/slack/slack_win.talon
================================================================================


[next] (section | zone):
    app.notify("please use the voice command 'section next' instead of 'next section'")
    key(f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2531. Command apps/slack/slack_win.talon
================================================================================


(previous | last) (section | zone):
    app.notify("please use the voice command 'section last' instead of 'last section'")
    key(shift-f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2532. Command apps/slack/slack_win.talon
================================================================================


[next] (element | bit):
    app.notify("please use the voice command 'element next' instead of 'next element'")
    key(tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2533. Command apps/slack/slack_win.talon
================================================================================


(previous | last) (element | bit):
    app.notify("please use the voice command 'element last' instead of 'last element'")
    key(shift-tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2534. Command apps/slack/slack_mac.talon
================================================================================


tag(): user.messaging


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2535. Command apps/slack/slack_mac.talon
================================================================================


tag(): user.emoji


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2536. Command apps/slack/slack_mac.talon
================================================================================


workspace <number>: key("cmd-{number}")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2537. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) [channel] info: key(cmd-shift-i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2538. Command apps/slack/slack_mac.talon
================================================================================


focus (move | next): key(ctrl-`)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2539. Command apps/slack/slack_mac.talon
================================================================================


(section | zone) [next]: key(f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2540. Command apps/slack/slack_mac.talon
================================================================================


(section | zone) (previous | last): key(shift-f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2541. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) [direct] messages: key(cmd-shift-k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2542. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) threads: key(cmd-shift-t)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2543. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) (history [next] | back | backward): key(cmd-[)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (seq
              (word)
              (optional
                (word)))
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2544. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) forward: key(cmd-])


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2545. Command apps/slack/slack_mac.talon
================================================================================


(element | bit) [next]: key(tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2546. Command apps/slack/slack_mac.talon
================================================================================


(element | bit) (previous | last): key(shift-tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2547. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) (my stuff | activity): key(cmd-shift-m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (seq
              (word)
              (word))
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2548. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) directory: key(cmd-shift-e)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2549. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) (starred [items] | stars): key(cmd-shift-s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (seq
              (word)
              (optional
                (word)))
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2550. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) unread [messages]: key(cmd-shift-a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2551. Command apps/slack/slack_mac.talon
================================================================================


(go | undo | toggle) full: key(ctrl-cmd-f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2552. Command apps/slack/slack_mac.talon
================================================================================


grab left: key(shift-up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2553. Command apps/slack/slack_mac.talon
================================================================================


grab right: key(shift-down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2554. Command apps/slack/slack_mac.talon
================================================================================


add line: key(shift-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2555. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) (slap | slaw | slapper): key(cmd-right shift-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2556. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) (react | reaction): key(cmd-shift-\)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2557. Command apps/slack/slack_mac.talon
================================================================================


(insert command | commandify): key(cmd-shift-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2558. Command apps/slack/slack_mac.talon
================================================================================


insert link: key(cmd-shift-u)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2559. Command apps/slack/slack_mac.talon
================================================================================


insert code: key(cmd-shift-alt-c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2560. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) (bull | bullet | bulleted) [list]: key(cmd-shift-8)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2561. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) (number | numbered) [list]: key(cmd-shift-7)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2562. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) (quotes | quotation): key(cmd-shift->)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2563. Command apps/slack/slack_mac.talon
================================================================================


bold: key(cmd-b)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2564. Command apps/slack/slack_mac.talon
================================================================================


(italic | italicize): key(cmd-i)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2565. Command apps/slack/slack_mac.talon
================================================================================


(strike | strikethrough): key(cmd-shift-x)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (word)
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2566. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) snippet: key(cmd-shift-enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2567. Command apps/slack/slack_mac.talon
================================================================================


([toggle] mute | unmute): key(m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (optional
              (word))
            (word))
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2568. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) huddle: key(cmd-shift-h)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2569. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) ([toggle] video): key(v)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (seq
            (optional
              (word))
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2570. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) invite: key(a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2571. Command apps/slack/slack_mac.talon
================================================================================


(slack | lack) shortcuts: key(cmd-/)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2572. Command apps/slack/slack_mac.talon
================================================================================


emote <user.text>: "{text}"


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (string
          (string_content)
          (string_content)
          (string_content))))))

================================================================================
2573. Command apps/slack/slack_mac.talon
================================================================================


toggle left sidebar: key(cmd-shift-d)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2574. Command apps/slack/slack_mac.talon
================================================================================


toggle right sidebar: key(cmd-.)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2575. Command apps/slack/slack_mac.talon
================================================================================


(move | next) focus:
    app.notify("please use the voice command 'focus next' instead of 'next focus'")
    key(ctrl-`)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2576. Command apps/slack/slack_mac.talon
================================================================================


[next] (section | zone):
    app.notify("please use the voice command 'section next' instead of 'next section'")
    key(f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2577. Command apps/slack/slack_mac.talon
================================================================================


(previous | last) (section | zone):
    app.notify("please use the voice command 'section last' instead of 'last section'")
    key(shift-f6)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2578. Command apps/slack/slack_mac.talon
================================================================================


[next] (element | bit):
    app.notify("please use the voice command 'element next' instead of 'next element'")
    key(tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (optional
          (word))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2579. Command apps/slack/slack_mac.talon
================================================================================


(previous | last) (element | bit):
    app.notify("please use the voice command 'element last' instead of 'last element'")
    key(shift-tab)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2580. Command apps/generic_terminal/generic_terminal.talon
================================================================================


lisa:
    user.terminal_list_directories()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2581. Command apps/generic_terminal/generic_terminal.talon
================================================================================


lisa all:
    user.terminal_list_all_directories()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2582. Command apps/generic_terminal/generic_terminal.talon
================================================================================


katie [<user.text>]: user.terminal_change_directory(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
2583. Command apps/generic_terminal/generic_terminal.talon
================================================================================


katie root: user.terminal_change_directory_root()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2584. Command apps/generic_terminal/generic_terminal.talon
================================================================================


go <user.system_path>: insert("cd \"{system_path}\"\n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_escape_sequence)
              (string_content)
              (string_content)
              (string_content)
              (string_escape_sequence)
              (string_escape_sequence))))))))

================================================================================
2585. Command apps/generic_terminal/generic_terminal.talon
================================================================================


clear screen: user.terminal_clear_screen()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2586. Command apps/generic_terminal/generic_terminal.talon
================================================================================


run last: user.terminal_run_last()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2587. Command apps/generic_terminal/generic_terminal.talon
================================================================================


rerun [<user.text>]: user.terminal_rerun_search(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
2588. Command apps/generic_terminal/generic_terminal.talon
================================================================================


rerun search: user.terminal_rerun_search("")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string)))))))

================================================================================
2589. Command apps/generic_terminal/generic_terminal.talon
================================================================================


kill all: user.terminal_kill_all()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2590. Command apps/generic_terminal/generic_terminal.talon
================================================================================


copy paste:
    edit.copy()
    sleep(50ms)
    edit.paste()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2591. Command apps/talon_repl.talon
================================================================================


tag(): user.talon_python


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2592. Command apps/talon_repl.talon
================================================================================


# see https://github.com/knausj85/knausj_talon/issues/600


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
2593. Command apps/talon_repl.talon
================================================================================


# tag(): user.talon_populate_lists


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
2594. Command apps/talon_repl.talon
================================================================================


^test last$:
    phrase = user.history_get(1)
    command = "sim('{phrase}')"
    insert(command)
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (integer))))
      (assignment
        (identifier)
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2595. Command apps/talon_repl.talon
================================================================================


^test <phrase>$:
    insert("sim('{phrase}')")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2596. Command apps/talon_repl.talon
================================================================================


^test numb <number_small>$:
    phrase = user.history_get(number_small)
    command = "sim('{phrase}')"
    #to do: shouldn't this work?
    #to do: shouldn't this work?
    #user.paste("sim({phrase})")
    insert(command)
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (assignment
        (identifier)
        (string
          (string_content)
          (string_content)
          (string_content)
          (string_content)
          (string_content)))
      (comment)
      (comment)
      (comment)
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2597. Command apps/talon_repl.talon
================================================================================


^debug action {user.talon_actions}$:
    insert("actions.find('{user.talon_actions}')")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2598. Command apps/talon_repl.talon
================================================================================


^debug list {user.talon_lists}$:
    insert("actions.user.talon_pretty_print(registry.lists['{talon_lists}'])")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2599. Command apps/talon_repl.talon
================================================================================


^debug tags$:
    insert("actions.user.talon_pretty_print(registry.tags)")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2600. Command apps/talon_repl.talon
================================================================================


^debug settings$:
    insert("actions.user.talon_pretty_print(registry.settings)")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2601. Command apps/talon_repl.talon
================================================================================


^debug modes$:
    insert("actions.user.talon_pretty_print(scope.get('mode'))")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2602. Command apps/talon_repl.talon
================================================================================


^debug scope {user.talon_scopes}$:
    insert("actions.user.talon_pretty_print(scope.get('{talon_scopes}'))")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2603. Command apps/talon_repl.talon
================================================================================


^debug running apps$:
    insert("actions.user.talon_pretty_print(ui.apps(background=False))")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2604. Command apps/talon_repl.talon
================================================================================


^debug all windows$:
    insert("actions.user.talon_pretty_print(ui.windows())")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2605. Command apps/talon_repl.talon
================================================================================


^debug {user.running} windows$:
    insert("actions.user.talon_debug_app_windows('{running}')")
    key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (list
          (identifier))
        (word))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2606. Command apps/file_manager.talon
================================================================================


title force: user.file_manager_refresh_title()


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (identifier))
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2607. Command apps/file_manager.talon
================================================================================


manager show: user.file_manager_toggle_pickers()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2608. Command apps/file_manager.talon
================================================================================


manager close: user.file_manager_hide_pickers()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2609. Command apps/file_manager.talon
================================================================================


manager refresh: user.file_manager_update_lists()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2610. Command apps/file_manager.talon
================================================================================


go <user.system_path>: user.file_manager_open_directory(system_path)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2611. Command apps/file_manager.talon
================================================================================


go back: user.file_manager_go_back()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2612. Command apps/file_manager.talon
================================================================================


go forward: user.file_manager_go_forward()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2613. Command apps/file_manager.talon
================================================================================


(go parent | daddy): user.file_manager_open_parent()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2614. Command apps/file_manager.talon
================================================================================


^follow numb <number_small>$:
    directory = user.file_manager_get_directory_by_index(number_small - 1)
    user.file_manager_open_directory(directory)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2615. Command apps/file_manager.talon
================================================================================


^follow {user.file_manager_directories}$: user.file_manager_open_directory(file_manager_directories)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2616. Command apps/file_manager.talon
================================================================================


^(select|cell) folder {user.file_manager_directories}$: user.file_manager_select_directory(file_manager_directories)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2617. Command apps/file_manager.talon
================================================================================


^open <number_small>$:
    file = user.file_manager_get_file_by_index(number_small - 1)
    user.file_manager_open_file(file)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2618. Command apps/file_manager.talon
================================================================================


^folder numb <number_small>$:
    directory = user.file_manager_get_directory_by_index(number_small - 1)
    user.file_manager_select_directory(directory)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2619. Command apps/file_manager.talon
================================================================================


^file numb <number_small>$:
    file = user.file_manager_get_file_by_index(number_small - 1)
    user.file_manager_select_file(file)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (word)
        (capture
          (identifier)))
      (end_anchor))
    (block
      (assignment
        (identifier)
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2620. Command apps/file_manager.talon
================================================================================


^file {user.file_manager_files}$: user.file_manager_select_file(file_manager_files)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2621. Command apps/file_manager.talon
================================================================================


^(select|cell) file {user.file_manager_files}$: user.file_manager_select_file(file_manager_files)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (start_anchor)
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (list
          (identifier)))
      (end_anchor))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2622. Command apps/file_manager.talon
================================================================================


folder new <user.text>:
    user.file_manager_new_folder(text)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2623. Command apps/file_manager.talon
================================================================================


properties show: user.file_manager_show_properties()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2624. Command apps/file_manager.talon
================================================================================


terminal here: user.file_manager_terminal_here()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2625. Command apps/file_manager.talon
================================================================================


folder next: user.file_manager_next_folder_page()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2626. Command apps/file_manager.talon
================================================================================


folder last: user.file_manager_previous_folder_page()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2627. Command apps/file_manager.talon
================================================================================


file next: user.file_manager_next_file_page()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2628. Command apps/file_manager.talon
================================================================================


file last: user.file_manager_previous_file_page()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2629. Command apps/kubectl/kubectl.talon
================================================================================


cube [control]: "kubectl "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (word))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2630. Command apps/kubectl/kubectl.talon
================================================================================


cube create:         "kubectl create "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2631. Command apps/kubectl/kubectl.talon
================================================================================


cube expose:         "kubectl expose "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2632. Command apps/kubectl/kubectl.talon
================================================================================


cube run:            "kubectl run "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2633. Command apps/kubectl/kubectl.talon
================================================================================


cube set:            "kubectl set "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2634. Command apps/kubectl/kubectl.talon
================================================================================


cube run container:  "kubectl run-container "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2635. Command apps/kubectl/kubectl.talon
================================================================================


cube explain:        "kubectl explain "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2636. Command apps/kubectl/kubectl.talon
================================================================================


cube get:            "kubectl get "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2637. Command apps/kubectl/kubectl.talon
================================================================================


cube edit:           "kubectl edit "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2638. Command apps/kubectl/kubectl.talon
================================================================================


cube delete:         "kubectl delete "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2639. Command apps/kubectl/kubectl.talon
================================================================================


cube rollout:        "kubectl rollout "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2640. Command apps/kubectl/kubectl.talon
================================================================================


cube rolling update: "kubectl rolling-update "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2641. Command apps/kubectl/kubectl.talon
================================================================================


cube scale:          "kubectl scale "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2642. Command apps/kubectl/kubectl.talon
================================================================================


cube auto scale:     "kubectl autoscale "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2643. Command apps/kubectl/kubectl.talon
================================================================================


cube certificate:    "kubectl certificate "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2644. Command apps/kubectl/kubectl.talon
================================================================================


cube top:            "kubectl top "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2645. Command apps/kubectl/kubectl.talon
================================================================================


cube drain:          "kubectl drain "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2646. Command apps/kubectl/kubectl.talon
================================================================================


cube taint:          "kubectl taint "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2647. Command apps/kubectl/kubectl.talon
================================================================================


cube (cord | cordon): "kubectl cordon "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2648. Command apps/kubectl/kubectl.talon
================================================================================


cube (uncord | uncordon): "kubectl uncordon "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2649. Command apps/kubectl/kubectl.talon
================================================================================


cube cluster (info | information): "kubectl cluster-info "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2650. Command apps/kubectl/kubectl.talon
================================================================================


cube describe:     "kubectl describe "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2651. Command apps/kubectl/kubectl.talon
================================================================================


cube logs:         "kubectl logs "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2652. Command apps/kubectl/kubectl.talon
================================================================================


cube attach:       "kubectl attach "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2653. Command apps/kubectl/kubectl.talon
================================================================================


cube exec:         "kubectl exec "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2654. Command apps/kubectl/kubectl.talon
================================================================================


cube port forward: "kubectl port-forward "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2655. Command apps/kubectl/kubectl.talon
================================================================================


cube proxy:        "kubectl proxy "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2656. Command apps/kubectl/kubectl.talon
================================================================================


cube copy:         "kubectl cp "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2657. Command apps/kubectl/kubectl.talon
================================================================================


cube auth:         "kubectl auth "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2658. Command apps/kubectl/kubectl.talon
================================================================================


cube diff:         "kubectl diff "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2659. Command apps/kubectl/kubectl.talon
================================================================================


cube apply:        "kubectl apply "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2660. Command apps/kubectl/kubectl.talon
================================================================================


cube patch:        "kubectl patch "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2661. Command apps/kubectl/kubectl.talon
================================================================================


cube replace:      "kubectl replace "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2662. Command apps/kubectl/kubectl.talon
================================================================================


cube wait:         "kubectl wait "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2663. Command apps/kubectl/kubectl.talon
================================================================================


cube convert:      "kubectl convert "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2664. Command apps/kubectl/kubectl.talon
================================================================================


cube customize:    "kubectl kustomize "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2665. Command apps/kubectl/kubectl.talon
================================================================================


cube label:        "kubectl label "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2666. Command apps/kubectl/kubectl.talon
================================================================================


cube annotate:     "kubectl annotate "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2667. Command apps/kubectl/kubectl.talon
================================================================================


cube completion:   "kubectl completion "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2668. Command apps/kubectl/kubectl.talon
================================================================================


cube (interface | API):   "kubectl api "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2669. Command apps/kubectl/kubectl.talon
================================================================================


cube interface resources: "kubectl api-resources "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2670. Command apps/kubectl/kubectl.talon
================================================================================


cube interface versions:  "kubectl api-versions "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2671. Command apps/kubectl/kubectl.talon
================================================================================


cube config:       "kubectl config "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2672. Command apps/kubectl/kubectl.talon
================================================================================


cube help:         "kubectl help "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2673. Command apps/kubectl/kubectl.talon
================================================================================


cube plugin:       "kubectl plugin "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2674. Command apps/kubectl/kubectl.talon
================================================================================


cube version:      "kubectl version "


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (string
          (string_content))))))

================================================================================
2675. Command apps/kubectl/kubectl.talon
================================================================================


cube {user.kubectl_action} [{user.kubectl_object}]:
    insert("kubectl {kubectl_action} ")
    insert(kubectl_object or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (list
          (identifier))
        (optional
          (list
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)
              (string_content)
              (string_content)
              (string_content)
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
2676. Command apps/kubectl/kubectl.talon
================================================================================


cube detach:
    key("ctrl-p")
    key("ctrl-q")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string)))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2677. Command apps/kubectl/kubectl.talon
================================================================================


cube shell:
    user.insert_between("kubectl exec -it ", " -- /bin/bash")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))
            (string
              (string_content))))))))

================================================================================
2678. Command apps/vscode/vscode.talon
================================================================================


tag(): user.find_and_replace


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2679. Command apps/vscode/vscode.talon
================================================================================


tag(): user.line_commands


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2680. Command apps/vscode/vscode.talon
================================================================================


tag(): user.multiple_cursors


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2681. Command apps/vscode/vscode.talon
================================================================================


tag(): user.snippets


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2682. Command apps/vscode/vscode.talon
================================================================================


tag(): user.splits


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2683. Command apps/vscode/vscode.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2684. Command apps/vscode/vscode.talon
================================================================================


window reload: user.vscode("workbench.action.reloadWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2685. Command apps/vscode/vscode.talon
================================================================================


window close: user.vscode("workbench.action.closeWindow")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2686. Command apps/vscode/vscode.talon
================================================================================


please [<user.text>]:
    user.vscode("workbench.action.showCommands")
    insert(user.text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
2687. Command apps/vscode/vscode.talon
================================================================================


bar explore: user.vscode("workbench.view.explorer")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2688. Command apps/vscode/vscode.talon
================================================================================


bar extensions: user.vscode("workbench.view.extensions")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2689. Command apps/vscode/vscode.talon
================================================================================


bar outline: user.vscode("outline.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2690. Command apps/vscode/vscode.talon
================================================================================


bar run: user.vscode("workbench.view.debug")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2691. Command apps/vscode/vscode.talon
================================================================================


bar search: user.vscode("workbench.view.search")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2692. Command apps/vscode/vscode.talon
================================================================================


bar source: user.vscode("workbench.view.scm")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2693. Command apps/vscode/vscode.talon
================================================================================


bar test: user.vscode("workbench.view.testing.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2694. Command apps/vscode/vscode.talon
================================================================================


bar switch: user.vscode("workbench.action.toggleSidebarVisibility")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2695. Command apps/vscode/vscode.talon
================================================================================


symbol hunt [<user.text>]:
    user.vscode("workbench.action.gotoSymbol")
    sleep(50ms)
    insert(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
2696. Command apps/vscode/vscode.talon
================================================================================


panel control: user.vscode("workbench.panel.repl.view.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2697. Command apps/vscode/vscode.talon
================================================================================


panel output: user.vscode("workbench.panel.output.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2698. Command apps/vscode/vscode.talon
================================================================================


panel problems: user.vscode("workbench.panel.markers.view.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2699. Command apps/vscode/vscode.talon
================================================================================


panel switch: user.vscode("workbench.action.togglePanel")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2700. Command apps/vscode/vscode.talon
================================================================================


panel terminal: user.vscode("workbench.action.terminal.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2701. Command apps/vscode/vscode.talon
================================================================================


focus editor: user.vscode("workbench.action.focusActiveEditorGroup")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2702. Command apps/vscode/vscode.talon
================================================================================


show settings: user.vscode("workbench.action.openGlobalSettings")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2703. Command apps/vscode/vscode.talon
================================================================================


show settings json: user.vscode("workbench.action.openSettingsJson")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2704. Command apps/vscode/vscode.talon
================================================================================


show settings folder: user.vscode("workbench.action.openFolderSettings")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2705. Command apps/vscode/vscode.talon
================================================================================


show settings folder json: user.vscode("workbench.action.openFolderSettingsFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2706. Command apps/vscode/vscode.talon
================================================================================


show settings workspace: user.vscode("workbench.action.openWorkspaceSettings")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2707. Command apps/vscode/vscode.talon
================================================================================


show settings workspace json: user.vscode("workbench.action.openWorkspaceSettingsFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2708. Command apps/vscode/vscode.talon
================================================================================


show shortcuts: user.vscode("workbench.action.openGlobalKeybindings")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2709. Command apps/vscode/vscode.talon
================================================================================


show snippets: user.vscode("workbench.action.openSnippets")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2710. Command apps/vscode/vscode.talon
================================================================================


centered switch: user.vscode("workbench.action.toggleCenteredLayout")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2711. Command apps/vscode/vscode.talon
================================================================================


fullscreen switch: user.vscode("workbench.action.toggleFullScreen")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2712. Command apps/vscode/vscode.talon
================================================================================


theme switch: user.vscode("workbench.action.selectTheme")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2713. Command apps/vscode/vscode.talon
================================================================================


wrap switch: user.vscode("editor.action.toggleWordWrap")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2714. Command apps/vscode/vscode.talon
================================================================================


zen switch: user.vscode("workbench.action.toggleZenMode")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2715. Command apps/vscode/vscode.talon
================================================================================


file hunt [<user.text>]:
    user.vscode("workbench.action.quickOpen")
    sleep(50ms)
    insert(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
2716. Command apps/vscode/vscode.talon
================================================================================


file copy path: user.vscode("copyFilePath")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2717. Command apps/vscode/vscode.talon
================================================================================


file copy local [path]: user.vscode("copyRelativeFilePath")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2718. Command apps/vscode/vscode.talon
================================================================================


file create sibling: user.vscode_and_wait("explorer.newFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2719. Command apps/vscode/vscode.talon
================================================================================


file create: user.vscode("workbench.action.files.newUntitledFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2720. Command apps/vscode/vscode.talon
================================================================================


file rename:
    user.vscode("fileutils.renameFile")
    sleep(150ms)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string))))))

================================================================================
2721. Command apps/vscode/vscode.talon
================================================================================


file move:
    user.vscode("fileutils.moveFile")
    sleep(150ms)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string))))))

================================================================================
2722. Command apps/vscode/vscode.talon
================================================================================


file delete:
    user.vscode("fileutils.removeFile")
    sleep(150ms)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string))))))

================================================================================
2723. Command apps/vscode/vscode.talon
================================================================================


file open folder: user.vscode("revealFileInOS")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2724. Command apps/vscode/vscode.talon
================================================================================


file reveal: user.vscode("workbench.files.action.showActiveFileInExplorer")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2725. Command apps/vscode/vscode.talon
================================================================================


save ugly: user.vscode("workbench.action.files.saveWithoutFormatting")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2726. Command apps/vscode/vscode.talon
================================================================================


suggest show: user.vscode("editor.action.triggerSuggest")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2727. Command apps/vscode/vscode.talon
================================================================================


hint show: user.vscode("editor.action.triggerParameterHints")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2728. Command apps/vscode/vscode.talon
================================================================================


definition show: user.vscode("editor.action.revealDefinition")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2729. Command apps/vscode/vscode.talon
================================================================================


definition peek: user.vscode("editor.action.peekDefinition")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2730. Command apps/vscode/vscode.talon
================================================================================


definition side: user.vscode("editor.action.revealDefinitionAside")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2731. Command apps/vscode/vscode.talon
================================================================================


references show: user.vscode("editor.action.goToReferences")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2732. Command apps/vscode/vscode.talon
================================================================================


references find: user.vscode("references-view.find")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2733. Command apps/vscode/vscode.talon
================================================================================


format that: user.vscode("editor.action.formatDocument")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2734. Command apps/vscode/vscode.talon
================================================================================


format selection: user.vscode("editor.action.formatSelection")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2735. Command apps/vscode/vscode.talon
================================================================================


imports fix: user.vscode("editor.action.organizeImports")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2736. Command apps/vscode/vscode.talon
================================================================================


problem next: user.vscode("editor.action.marker.nextInFiles")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2737. Command apps/vscode/vscode.talon
================================================================================


problem last: user.vscode("editor.action.marker.prevInFiles")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2738. Command apps/vscode/vscode.talon
================================================================================


problem fix: user.vscode("problems.action.showQuickFixes")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2739. Command apps/vscode/vscode.talon
================================================================================


rename that: user.vscode("editor.action.rename")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2740. Command apps/vscode/vscode.talon
================================================================================


refactor that: user.vscode("editor.action.refactor")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2741. Command apps/vscode/vscode.talon
================================================================================


whitespace trim: user.vscode("editor.action.trimTrailingWhitespace")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2742. Command apps/vscode/vscode.talon
================================================================================


language switch: user.vscode("workbench.action.editor.changeLanguageMode")


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (identifier))
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2743. Command apps/vscode/vscode.talon
================================================================================


refactor rename: user.vscode("editor.action.rename")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2744. Command apps/vscode/vscode.talon
================================================================================


refactor this: user.vscode("editor.action.refactor")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2745. Command apps/vscode/vscode.talon
================================================================================


(go declaration | follow): user.vscode("editor.action.revealDefinition")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word))
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2746. Command apps/vscode/vscode.talon
================================================================================


go back: user.vscode("workbench.action.navigateBack")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2747. Command apps/vscode/vscode.talon
================================================================================


go forward: user.vscode("workbench.action.navigateForward")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2748. Command apps/vscode/vscode.talon
================================================================================


go implementation: user.vscode("editor.action.goToImplementation")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2749. Command apps/vscode/vscode.talon
================================================================================


go type: user.vscode("editor.action.goToTypeDefinition")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2750. Command apps/vscode/vscode.talon
================================================================================


go usage: user.vscode("references-view.find")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2751. Command apps/vscode/vscode.talon
================================================================================


go recent [<user.text>]:
    user.vscode("workbench.action.openRecent")
    sleep(50ms)
    insert(text or "")
    sleep(250ms)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string)))))
      (expression
        (sleep_action
          (implicit_string))))))

================================================================================
2752. Command apps/vscode/vscode.talon
================================================================================


go edit: user.vscode("workbench.action.navigateToLastEditLocation")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2753. Command apps/vscode/vscode.talon
================================================================================


go marks: user.vscode("workbench.view.extension.bookmarks")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2754. Command apps/vscode/vscode.talon
================================================================================


toggle mark: user.vscode("bookmarks.toggle")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2755. Command apps/vscode/vscode.talon
================================================================================


go next mark: user.vscode("bookmarks.jumpToNext")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2756. Command apps/vscode/vscode.talon
================================================================================


go last mark: user.vscode("bookmarks.jumpToPrevious")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2757. Command apps/vscode/vscode.talon
================================================================================


close other tabs: user.vscode("workbench.action.closeOtherEditors")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2758. Command apps/vscode/vscode.talon
================================================================================


close all tabs: user.vscode("workbench.action.closeAllEditors")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2759. Command apps/vscode/vscode.talon
================================================================================


close tabs way right: user.vscode("workbench.action.closeEditorsToTheRight")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2760. Command apps/vscode/vscode.talon
================================================================================


close tabs way left: user.vscode("workbench.action.closeEditorsToTheLeft")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2761. Command apps/vscode/vscode.talon
================================================================================


fold that: user.vscode("editor.fold")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2762. Command apps/vscode/vscode.talon
================================================================================


unfold that: user.vscode("editor.unfold")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2763. Command apps/vscode/vscode.talon
================================================================================


fold those: user.vscode("editor.foldAllMarkerRegions")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2764. Command apps/vscode/vscode.talon
================================================================================


unfold those: user.vscode("editor.unfoldRecursively")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2765. Command apps/vscode/vscode.talon
================================================================================


fold all: user.vscode("editor.foldAll")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2766. Command apps/vscode/vscode.talon
================================================================================


unfold all: user.vscode("editor.unfoldAll")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2767. Command apps/vscode/vscode.talon
================================================================================


fold comments: user.vscode("editor.foldAllBlockComments")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2768. Command apps/vscode/vscode.talon
================================================================================


fold one: user.vscode("editor.foldLevel1")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2769. Command apps/vscode/vscode.talon
================================================================================


fold two: user.vscode("editor.foldLevel2")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2770. Command apps/vscode/vscode.talon
================================================================================


fold three: user.vscode("editor.foldLevel3")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2771. Command apps/vscode/vscode.talon
================================================================================


fold four: user.vscode("editor.foldLevel4")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2772. Command apps/vscode/vscode.talon
================================================================================


fold five: user.vscode("editor.foldLevel5")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2773. Command apps/vscode/vscode.talon
================================================================================


fold six: user.vscode("editor.foldLevel6")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2774. Command apps/vscode/vscode.talon
================================================================================


fold seven: user.vscode("editor.foldLevel7")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2775. Command apps/vscode/vscode.talon
================================================================================


git branch: user.vscode("git.branchFrom")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2776. Command apps/vscode/vscode.talon
================================================================================


git branch this: user.vscode("git.branch")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2777. Command apps/vscode/vscode.talon
================================================================================


git checkout [<user.text>]:
    user.vscode("git.checkout")
    sleep(50ms)
    insert(text or "")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))))))))

================================================================================
2778. Command apps/vscode/vscode.talon
================================================================================


git commit [<user.text>]:
    user.vscode("git.commitStaged")
    sleep(100ms)
    user.insert_formatted(text or "", "CAPITALIZE_FIRST_WORD")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (sleep_action
          (implicit_string)))
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (string))
            (string
              (string_content))))))))

================================================================================
2779. Command apps/vscode/vscode.talon
================================================================================


git commit undo: user.vscode("git.undoCommit")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2780. Command apps/vscode/vscode.talon
================================================================================


git commit amend: user.vscode("git.commitStagedAmend")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2781. Command apps/vscode/vscode.talon
================================================================================


git diff: user.vscode("git.openChange")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2782. Command apps/vscode/vscode.talon
================================================================================


git fetch: user.vscode("git.fetch")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2783. Command apps/vscode/vscode.talon
================================================================================


git fetch all: user.vscode("git.fetchAll")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2784. Command apps/vscode/vscode.talon
================================================================================


git ignore: user.vscode("git.ignore")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2785. Command apps/vscode/vscode.talon
================================================================================


git merge: user.vscode("git.merge")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2786. Command apps/vscode/vscode.talon
================================================================================


git output: user.vscode("git.showOutput")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2787. Command apps/vscode/vscode.talon
================================================================================


git pull: user.vscode("git.pullRebase")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2788. Command apps/vscode/vscode.talon
================================================================================


git push: user.vscode("git.push")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2789. Command apps/vscode/vscode.talon
================================================================================


git push focus: user.vscode("git.pushForce")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2790. Command apps/vscode/vscode.talon
================================================================================


git rebase abort: user.vscode("git.rebaseAbort")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2791. Command apps/vscode/vscode.talon
================================================================================


git reveal: user.vscode("git.revealInExplorer")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2792. Command apps/vscode/vscode.talon
================================================================================


git revert: user.vscode("git.revertChange")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2793. Command apps/vscode/vscode.talon
================================================================================


git stash: user.vscode("git.stash")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2794. Command apps/vscode/vscode.talon
================================================================================


git stash pop: user.vscode("git.stashPop")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2795. Command apps/vscode/vscode.talon
================================================================================


git status: user.vscode("workbench.scm.focus")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2796. Command apps/vscode/vscode.talon
================================================================================


git stage: user.vscode("git.stage")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2797. Command apps/vscode/vscode.talon
================================================================================


git stage all: user.vscode("git.stageAll")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2798. Command apps/vscode/vscode.talon
================================================================================


git sync: user.vscode("git.sync")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2799. Command apps/vscode/vscode.talon
================================================================================


git unstage: user.vscode("git.unstage")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2800. Command apps/vscode/vscode.talon
================================================================================


git unstage all: user.vscode("git.unstageAll")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2801. Command apps/vscode/vscode.talon
================================================================================


pull request: user.vscode("pr.create")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2802. Command apps/vscode/vscode.talon
================================================================================


# action: https://code.visualstudio.com/api/references/when-clause-contexts


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
2803. Command apps/vscode/vscode.talon
================================================================================


change next: key(alt-f5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2804. Command apps/vscode/vscode.talon
================================================================================


change last: key(shift-alt-f5)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2805. Command apps/vscode/vscode.talon
================================================================================


break point: user.vscode("editor.debug.action.toggleBreakpoint")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2806. Command apps/vscode/vscode.talon
================================================================================


step over: user.vscode("workbench.action.debug.stepOver")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2807. Command apps/vscode/vscode.talon
================================================================================


debug step into: user.vscode("workbench.action.debug.stepInto")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2808. Command apps/vscode/vscode.talon
================================================================================


debug step out [of]: user.vscode("workbench.action.debug.stepOut")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2809. Command apps/vscode/vscode.talon
================================================================================


debug start: user.vscode("workbench.action.debug.start")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2810. Command apps/vscode/vscode.talon
================================================================================


debug pause: user.vscode("workbench.action.debug.pause")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2811. Command apps/vscode/vscode.talon
================================================================================


debug stopper: user.vscode("workbench.action.debug.stop")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2812. Command apps/vscode/vscode.talon
================================================================================


debug continue: user.vscode("workbench.action.debug.continue")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2813. Command apps/vscode/vscode.talon
================================================================================


debug restart: user.vscode("workbench.action.debug.restart")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2814. Command apps/vscode/vscode.talon
================================================================================


debug console: user.vscode("workbench.debug.action.toggleRepl")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2815. Command apps/vscode/vscode.talon
================================================================================


terminal external: user.vscode("workbench.action.terminal.openNativeConsole")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2816. Command apps/vscode/vscode.talon
================================================================================


terminal new: user.vscode("workbench.action.terminal.new")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2817. Command apps/vscode/vscode.talon
================================================================================


terminal next: user.vscode("workbench.action.terminal.focusNext")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2818. Command apps/vscode/vscode.talon
================================================================================


terminal last: user.vscode("workbench.action.terminal.focusPrevious")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2819. Command apps/vscode/vscode.talon
================================================================================


terminal split: user.vscode("workbench.action.terminal.split")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2820. Command apps/vscode/vscode.talon
================================================================================


terminal zoom: user.vscode("workbench.action.toggleMaximizedPanel")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2821. Command apps/vscode/vscode.talon
================================================================================


terminal trash: user.vscode("workbench.action.terminal.kill")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2822. Command apps/vscode/vscode.talon
================================================================================


terminal toggle: user.vscode_and_wait("workbench.action.terminal.toggleTerminal")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2823. Command apps/vscode/vscode.talon
================================================================================


terminal scroll up: user.vscode("workbench.action.terminal.scrollUp")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2824. Command apps/vscode/vscode.talon
================================================================================


terminal scroll down: user.vscode("workbench.action.terminal.scrollDown")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2825. Command apps/vscode/vscode.talon
================================================================================


terminal <number_small>: user.vscode_terminal(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2826. Command apps/vscode/vscode.talon
================================================================================


#TODO: should this be added to linecommands?


--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
2827. Command apps/vscode/vscode.talon
================================================================================


copy line down: user.vscode("editor.action.copyLinesDownAction")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2828. Command apps/vscode/vscode.talon
================================================================================


copy line up: user.vscode("editor.action.copyLinesUpAction")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2829. Command apps/vscode/vscode.talon
================================================================================


select less: user.vscode("editor.action.smartSelect.shrink")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2830. Command apps/vscode/vscode.talon
================================================================================


select (more|this): user.vscode("editor.action.smartSelect.expand")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2831. Command apps/vscode/vscode.talon
================================================================================


minimap: user.vscode("editor.action.toggleMinimap")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2832. Command apps/vscode/vscode.talon
================================================================================


maximize: user.vscode("workbench.action.minimizeOtherEditors")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2833. Command apps/vscode/vscode.talon
================================================================================


restore: user.vscode("workbench.action.evenEditorWidths")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (word))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2834. Command apps/vscode/vscode.talon
================================================================================


select breadcrumb: user.vscode('breadcrumbs.focusAndSelect')


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2835. Command apps/vscode/vscode.talon
================================================================================


replace here:
    user.replace("")
    key(cmd-alt-l)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string))))
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2836. Command apps/vscode/vscode.talon
================================================================================


hover show: user.vscode("editor.action.showHover")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2837. Command apps/vscode/vscode.talon
================================================================================


join lines: user.vscode("editor.action.joinLines")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2838. Command apps/vscode/vscode.talon
================================================================================


full screen: user.vscode("workbench.action.toggleFullScreen")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2839. Command apps/vscode/vscode.talon
================================================================================


curse undo: user.vscode("cursorUndo")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2840. Command apps/vscode/vscode.talon
================================================================================


select word: user.vscode("editor.action.addSelectionToNextFindMatch")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2841. Command apps/vscode/vscode.talon
================================================================================


skip word: user.vscode("editor.action.moveSelectionToNextFindMatch")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2842. Command apps/vscode/vscode.talon
================================================================================


cell next: user.vscode("jupyter.gotoNextCellInFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2843. Command apps/vscode/vscode.talon
================================================================================


cell last: user.vscode("jupyter.gotoPrevCellInFile")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2844. Command apps/vscode/vscode.talon
================================================================================


cell run above: user.vscode("jupyter.runallcellsabove.palette")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2845. Command apps/vscode/vscode.talon
================================================================================


cell run: user.vscode("jupyter.runcurrentcell")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2846. Command apps/vscode/vscode.talon
================================================================================


install local: user.vscode("workbench.extensions.action.installVSIX")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2847. Command apps/thunderbird/thunderbird.talon
================================================================================


tag(): user.tabs


--------------------------------------------------------------------------------

(source_file
  (include_tag
    (identifier)))

================================================================================
2848. Command apps/thunderbird/thunderbird.talon
================================================================================


go (mails | messages | inbox): user.tab_jump(1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
2849. Command apps/thunderbird/thunderbird.talon
================================================================================


go (calendar | lightning): user.thunderbird_mod("shift-c")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2850. Command apps/thunderbird/thunderbird.talon
================================================================================


go tasks: user.thunderbird_mod("shift-d")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2851. Command apps/thunderbird/thunderbird.talon
================================================================================


(open address [book] | address book | open contacts): user.thunderbird_mod("shift-b")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (parenthesized_rule
        (choice
          (seq
            (word)
            (word)
            (optional
              (word)))
          (seq
            (word)
            (word))
          (seq
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2852. Command apps/thunderbird/thunderbird.talon
================================================================================


dev tools: user.thunderbird_mod("shift-i")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2853. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) open: key(enter)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2854. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) (up | last): key(b)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2855. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) (down | next): key(f)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2856. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


unread [mail | message] (up | last): key(p)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2857. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


unread [mail | message] (down | next): key(n)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (optional
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2858. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


go home: key(alt-home)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2859. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


toggle (mail | message) [pane]: key(f8)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (optional
          (word))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2860. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) (favorite | unfavorite): key(s)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2861. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) (read | unread): key(m)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2862. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) (watch | unwatch): key(w)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2863. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) (ignore | unignore): key(k)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (parenthesized_rule
          (choice
            (word)
            (word)))))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2864. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) suspend: key(c)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2865. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) spam: key(j)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2866. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) new: user.thunderbird_mod("n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2867. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) edit: user.thunderbird_mod("e")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2868. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) reply sender: user.thunderbird_mod("r")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2869. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) reply all: user.thunderbird_mod("shift-r")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2870. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) reply list: user.thunderbird_mod("shift-l")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2871. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) forward: user.thunderbird_mod("l")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2872. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) delete: key(delete)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2873. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) archive: key(a)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2874. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) save: user.thunderbird_mod("s")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2875. Command apps/thunderbird/thunderbird_inbox.talon
================================================================================


(mail | message) print: user.thunderbird_mod("p")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2876. Command apps/thunderbird/thunderbird_contacts.talon
================================================================================


contact new: user.thunderbird_mod("n")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2877. Command apps/thunderbird/thunderbird_contacts.talon
================================================================================


contact edit: user.thunderbird_mod("i")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2878. Command apps/thunderbird/thunderbird_contacts.talon
================================================================================


contact delete: key(delete)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2879. Command apps/thunderbird/thunderbird_contacts.talon
================================================================================


contact print: user.thunderbird_mod("p")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2880. Command apps/thunderbird/thunderbird_contacts.talon
================================================================================


contact message: user.thunderbird_mod("m")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2881. Command apps/thunderbird/thunderbird_contacts.talon
================================================================================


contact up: key(up)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2882. Command apps/thunderbird/thunderbird_contacts.talon
================================================================================


contact down: key(down)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2883. Command apps/thunderbird/thunderbird_tasks.talon
================================================================================


event new: user.thunderbird_mod("i")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2884. Command apps/thunderbird/thunderbird_tasks.talon
================================================================================


task new: user.thunderbird_mod("d")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2885. Command apps/thunderbird/thunderbird_tasks.talon
================================================================================


(task | event) delete: key(delete)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2886. Command apps/thunderbird/thunderbird_tasks.talon
================================================================================


toggle today: key(f11)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2887. Command apps/thunderbird/thunderbird_composer.talon
================================================================================


(draft | mail | message) save: user.thunderbird_mod("s")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2888. Command apps/thunderbird/thunderbird_composer.talon
================================================================================


(draft | mail | message) print: user.thunderbird_mod("p")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2889. Command apps/thunderbird/thunderbird_composer.talon
================================================================================


(draft | mail | message) send: user.thunderbird_mod("enter")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2890. Command apps/thunderbird/thunderbird_composer.talon
================================================================================


toggle contacts: key(f9)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2891. Command apps/thunderbird/thunderbird_composer.talon
================================================================================


go (inbox | thunderbird | main): user.thunderbird_mod("1")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (parenthesized_rule
          (choice
            (word)
            (word)
            (word)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2892. Command apps/thunderbird/thunderbird_composer.talon
================================================================================


cite paste: user.thunderbird_mod("shift-o")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2893. Command apps/thunderbird/thunderbird_composer.talon
================================================================================


(unformatted | raw) paste: user.thunderbird_mod("shift-v")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2894. Command apps/thunderbird/thunderbird_composer.talon
================================================================================


link new: user.thunderbird_mod("k")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2895. Command apps/thunderbird/thunderbird_composer.talon
================================================================================


link delete: user.thunderbird_mod("shift-k")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2896. Command apps/thunderbird/thunderbird_calendar.talon
================================================================================


event new: user.thunderbird_mod("i")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2897. Command apps/thunderbird/thunderbird_calendar.talon
================================================================================


task new: user.thunderbird_mod("d")


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content))))))))

================================================================================
2898. Command apps/thunderbird/thunderbird_calendar.talon
================================================================================


(task | event) delete: key(delete)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (parenthesized_rule
          (choice
            (word)
            (word)))
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2899. Command apps/thunderbird/thunderbird_calendar.talon
================================================================================


toggle today: key(f11)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (key_action
          (implicit_string))))))

================================================================================
2900. Command apps/thunderbird/thunderbird_calendar.talon
================================================================================


view <number_small>: user.thunderbird_calendar_view(number_small)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (capture
          (identifier))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2901. Command apps/thunderbird/thunderbird_calendar.talon
================================================================================


view day: user.thunderbird_calendar_view(1)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
2902. Command apps/thunderbird/thunderbird_calendar.talon
================================================================================


view week: user.thunderbird_calendar_view(2)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
2903. Command apps/thunderbird/thunderbird_calendar.talon
================================================================================


view multi [week]: user.thunderbird_calendar_view(3)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (word))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
2904. Command apps/thunderbird/thunderbird_calendar.talon
================================================================================


view month: user.thunderbird_calendar_view(4)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer)))))))

================================================================================
2905. Command apps/1password/1password_global.talon
================================================================================


password fill: user.password_fill()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2906. Command apps/1password/1password_global.talon
================================================================================


password show: user.password_show()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2907. Command apps/1password/1password.talon
================================================================================


password new: user.password_new()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2908. Command apps/1password/1password.talon
================================================================================


password dup: user.password_duplicate()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2909. Command apps/1password/1password.talon
================================================================================


password edit: user.password_edit()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2910. Command apps/1password/1password.talon
================================================================================


password delete: user.password_delete()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2911. Command mouse_grid/mouse_grid_open.talon
================================================================================


<user.number_key>:
    user.grid_narrow(number_key)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (capture
        (identifier)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2912. Command mouse_grid/mouse_grid_open.talon
================================================================================


grid off:
    user.grid_close()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2913. Command mouse_grid/mouse_grid_open.talon
================================================================================


grid reset:
    user.grid_reset()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2914. Command mouse_grid/mouse_grid_open.talon
================================================================================


grid back:
    user.grid_go_back()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2915. Command mouse_grid/mouse_grid.talon
================================================================================


M grid:
    app.notify("please use the voice command 'mouse grid' instead of 'm grid'")
    user.grid_select_screen(1)
    user.grid_activate()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (string
              (string_content)))))
      (expression
        (action
          (identifier)
          (argument_list
            (integer))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2916. Command mouse_grid/mouse_grid_always.talon
================================================================================


mouse grid:
    user.grid_select_screen(1)
    user.grid_activate()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (integer))))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2917. Command mouse_grid/mouse_grid_always.talon
================================================================================


grid win:
    user.grid_place_window()
    user.grid_activate()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list))))))

================================================================================
2918. Command mouse_grid/mouse_grid_always.talon
================================================================================


grid <user.number_key>+:
    user.grid_activate()
    user.grid_narrow_list(number_key_list)


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (repeat1
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list)))
      (expression
        (action
          (identifier)
          (argument_list
            (variable
              (identifier))))))))

================================================================================
2919. Command mouse_grid/mouse_grid_always.talon
================================================================================


grid screen [<number>]:
    user.grid_select_screen(number or 1)
    user.grid_activate()


--------------------------------------------------------------------------------

(source_file
  (command
    (rule
      (seq
        (word)
        (word)
        (optional
          (capture
            (identifier)))))
    (block
      (expression
        (action
          (identifier)
          (argument_list
            (binary_operator
              (variable
                (identifier))
              (operator)
              (integer)))))
      (expression
        (action
          (identifier)
          (argument_list))))))
