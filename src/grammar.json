{
  "name": "talon",
  "rules": {
    "source_file": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "context_matches"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "context_matches": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "context_matches_stmt"
          }
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "-"
            },
            {
              "type": "SYMBOL",
              "name": "_newline"
            }
          ]
        }
      ]
    },
    "context_matches_stmt": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "and"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "not"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "FIELD",
              "name": "key",
              "content": {
                "type": "SYMBOL",
                "name": "qualified_identifier"
              }
            },
            {
              "type": "STRING",
              "value": ":"
            },
            {
              "type": "FIELD",
              "name": "value",
              "content": {
                "type": "PATTERN",
                "value": ".*"
              }
            },
            {
              "type": "SYMBOL",
              "name": "_newline"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "comment"
        }
      ]
    },
    "qualified_identifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "FIELD",
              "name": "namespace",
              "content": {
                "type": "SYMBOL",
                "name": "identifier"
              }
            },
            {
              "type": "STRING",
              "value": "."
            },
            {
              "type": "SYMBOL",
              "name": "qualified_identifier"
            }
          ]
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-z_]+"
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+"
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "PATTERN",
            "value": ".*"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "_newline"
    },
    {
      "type": "SYMBOL",
      "name": "_indent"
    },
    {
      "type": "SYMBOL",
      "name": "_dedent"
    },
    {
      "type": "SYMBOL",
      "name": "_string_start"
    },
    {
      "type": "SYMBOL",
      "name": "_string_content"
    },
    {
      "type": "SYMBOL",
      "name": "_string_end"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "STRING",
      "value": "]"
    },
    {
      "type": "STRING",
      "value": ")"
    },
    {
      "type": "STRING",
      "value": "}"
    }
  ],
  "inline": [],
  "supertypes": []
}

